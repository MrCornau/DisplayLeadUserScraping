{"interestingcomments": [{"Unnamed: 0": 8678, "autor": "Autonoma_at", "date": 1611523196000, "content": "I made a platform to connect cheap ESP32 microcontrollers over wifi with the cloud. Stream simple sensor data. No c coding necessary :) Would you use it? /!/ \nHi everyone!\n\nI\u2018m currently working on a side project and I would love to get your feedback :)\n\nI\u2018m a Web developer and always wanted to to something with IoT. ESP32\u2019s are perfect to get into the game but one thing was bothering me all the time: It\u2018s complicated. I lost days setting up my Environment (wrong python version, esp idf didn\u2018t compile, aand much more). After that it was very time consuming to get the I2C sensor to run and if that\u2018s not enough, streaming it into the cloud was complex too (mqtt with tls, latency, data aggregation and so on).\n\nI got everything running, but I was asking myself: What if people without the coding experience want to connect something with the internet? Does it have to be that complex?\n\nI\u2018m having a strong background in UX design and wanted to find out if there is a way of doing that more easier to get more people into IoT (students, data scientists, other web devs,...)\n\nMy first prototype is now ready and I would be really curious what you guys think :)\n\nIt\u2018s basically split up into 3 areas:\n\n1: Flash your esp with my firmware. I made a tool that does all that completely automagically). You enter your credentials of my platform and your wifi credentials and you are done :)\n\nhttps://youtu.be/d6CXFYNJtoo\n\n2: once connected, the esp is communicating with my cloud. The firmware itself is abstracting protocols and with my platform you can configure sensors (currently GPIO and I2C, but I plan to support more like SPI and one Wire) over the cloud without any coding skills. I\u2018m also trying to build a sensor database. If one sensor is created there, you can just use it and don\u2018t even have to bother with the protocol. I can also display you which pins you have to connect.\n\nhttps://youtu.be/MtH-aVeKCJo\n\nHere are some mockups of how sensor configuration will look like: [Go to gallery](https://www.photo-pick.com/online/dBnrpCI7.link)\n\n3: Afterwards the data is sent to the cloud and can be viewed and exported. If wanted you can also create thresholds to get informed if something isn\u2018t right. And of course you can use all the data over an API. I\u2018m also planning to integrate \u201eprojects\u201c: you can create a project (eg weatherstation) and combine data from different sensors and esp\u2018s in there. You can also make your data public and enable other people to use it in their projects)\n\nI know I\u2018m quite at the beginning, but I build this the last years and would love to hear your feedback if you think this is a useful tool or if it is completely useless. I know this won\u2018t replace coding, and I don\u2018t want to either but I think it could be a great way to get people interested into this topic and maybe motivate them to dig deeper into that. I was also thinking of providing a C SDK for developers to use only the cloud without my firmware.\n\nIf the feedback is positive I would love to open this for everyone interested to find bugs and building the sensor database :)\n\nHave a nice day. Best, Florian\n\nRead More", "link": "https://www.reddit.com/r/IOT/comments/l47wzj/i_made_a_platform_to_connect_cheap_esp32/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "i made a platform to connect cheap esp32 microcontrollers over wifi with the cloud. stream simple sensor data. no c coding necessary :) would you use it? /!/ \nhi everyone!\n\ni\u2018m currently working on a side project and i would love to get your feedback :)\n\ni\u2018m a web developer and always wanted to to something with iot. esp32\u2019s are perfect to get into the game but one thing was bothering me all the time: it\u2018s complicated. i lost days setting up my environment (wrong python version, esp idf didn\u2018t compile, aand much more). after that it was very time consuming to get the i2c sensor to run and if that\u2018s not enough, streaming it into the cloud was complex too (mqtt with tls, latency, data aggregation and so on).\n\ni got everything running, but i was asking myself: what if people without the coding experience want to connect something with the internet? does it have to be that complex?\n\ni\u2018m having a strong background in ux design and wanted to find out if there is a way of doing that more easier to get more people into iot (students, data scientists, other web devs,...)\n\nmy first prototype is now ready and i would be really curious what you guys think :)\n\nit\u2018s basically split up into 3 areas:\n\n1: flash your esp with my firmware. i made a -----> tool !!!  that does all that completely automagically). you enter your credentials of my platform and your wifi credentials and you are done :)\n\nhttps://youtu.be/d6cxfynjtoo\n\n2: once connected, the esp is communicating with my cloud. the firmware itself is abstracting protocols and with my platform you can configure sensors (currently gpio and i2c, but i plan to support more like spi and one wire) over the cloud without any coding skills. i\u2018m also trying to build a sensor database. if one sensor is created there, you can just use it and don\u2018t even have to bother with the protocol. i can also display you which pins you have to connect.\n\nhttps://youtu.be/mth-avekcjo\n\nhere are some mockups of how sensor configuration will look like: [go to gallery](https://www.photo-pick.com/online/dbnrpci7.link)\n\n3: afterwards the data is sent to the cloud and can be viewed and exported. if wanted you can also create thresholds to get informed if something isn\u2018t right. and of course you can use all the data over an api. i\u2018m also planning to integrate \u201eprojects\u201c: you can create a project (eg weatherstation) and combine data from different sensors and esp\u2018s in there. you can also make your data public and enable other people to use it in their projects)\n\ni know i\u2018m quite at the beginning, but i build this the last years and would love to hear your feedback if you think this is a useful tool or if it is completely useless. i know this won\u2018t replace coding, and i don\u2018t want to either but i think it could be a great way to get people interested into this topic and maybe motivate them to dig deeper into that. i was also thinking of providing a c sdk for developers to use only the cloud without my firmware.\n\nif the feedback is positive i would love to open this for everyone interested to find bugs and building the sensor database :)\n\nhave a nice day. best, florian\n\nread more", "sortedWord": "None", "removed": null, "score": 1, "comments": 11, "media": "self", "medialink": "https://www.reddit.com/r/IOT/comments/l47wzj/i_made_a_platform_to_connect_cheap_esp32/", "identifyer": 3514162, "year": "2021"}, {"Unnamed: 0": 8692, "autor": "Zihao1217", "date": 1611221053000, "content": "Delta compression tool for IOT /!/ [removed]", "link": "https://www.reddit.com/r/IOT/comments/l1v3bz/delta_compression_tool_for_iot/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "delta compression -----> tool !!!  for iot /!/ [removed]", "sortedWord": "None", "removed": "moderator", "score": 1, "comments": 2, "media": "self", "medialink": "https://www.reddit.com/r/IOT/comments/l1v3bz/delta_compression_tool_for_iot/", "identifyer": 3514176, "year": "2021"}, {"Unnamed: 0": 9388, "autor": "WasZurHecke", "date": 1629315201000, "content": "DIT - A tool to perform DTLS MitM attacks /!/ I hope this does not violate the \"No self-promotion\" rule. I am not trying to sell you anything (the code is licensed under MIT) - I just thought the tool might be useful for people playing with iot devices. \n\nAs part of my master thesis I have developed a tool to intercept, manipulate and/or suppress datagrams between two DTLS endpoint. The tool is meant to make analyzing/fuzzing DTLS encrypted iot communication easier but it works on any kind of DTLS communication. While it is possible to decrypt DTLS traffic in Wireshark (when the PSK is known) I was not able to find any tools that were able to intercept and manipulate DTLS traffic that has been initialized using certificate-based authentication schemes - so I built one of my own.\n\nThe tool is named DIT (DTLS Interception Tool) and is supposed to work a lot like mitmproxy works for HTTPS. It does not break DTLS in any way - just like mitmproxy does not break TLS. So if you do not know the PSK and certificates are validated you won't be able to pull off a MitM attack. You can take a look at the tool right here if you are interested:\n\n[https://github.com/CountablyInfinite/dit](https://github.com/CountablyInfinite/dit)\n\nI was able to intercept and manipulate local DTLS traffic from products of the IKEA TRADFRI and the PHILIPS HUE series that rely on DTLS to secure their communication.", "link": "https://www.reddit.com/r/IOT/comments/p6yel4/dit_a_tool_to_perform_dtls_mitm_attacks/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "dit - a -----> tool !!!  to perform dtls mitm attacks /!/ i hope this does not violate the \"no self-promotion\" rule. i am not trying to sell you anything (the code is licensed under mit) - i just thought the tool might be useful for people playing with iot devices. \n\nas part of my master thesis i have developed a tool to intercept, manipulate and/or suppress datagrams between two dtls endpoint. the tool is meant to make analyzing/fuzzing dtls encrypted iot communication easier but it works on any kind of dtls communication. while it is possible to decrypt dtls traffic in wireshark (when the psk is known) i was not able to find any tools that were able to intercept and manipulate dtls traffic that has been initialized using certificate-based authentication schemes - so i built one of my own.\n\nthe tool is named dit (dtls interception tool) and is supposed to work a lot like mitmproxy works for https. it does not break dtls in any way - just like mitmproxy does not break tls. so if you do not know the psk and certificates are validated you won't be able to pull off a mitm attack. you can take a look at the tool right here if you are interested:\n\n[https://github.com/countablyinfinite/dit](https://github.com/countablyinfinite/dit)\n\ni was able to intercept and manipulate local dtls traffic from products of the ikea tradfri and the philips hue series that rely on dtls to secure their communication.", "sortedWord": "None", "removed": null, "score": 1, "comments": 3, "media": "self", "medialink": "https://www.reddit.com/r/IOT/comments/p6yel4/dit_a_tool_to_perform_dtls_mitm_attacks/", "identifyer": 3514901, "year": "2021"}, {"Unnamed: 0": 9437, "autor": "RimaShah_TS", "date": 1632476612000, "content": "Top IoT Trends and Tech in 2021 /!/ Covid has no doubt caused disruption in every aspect but that disruption has led to increased digitization in all sectors, creating a market boom for [IoT &amp; related Technologies](https://technostacks.com/iot-app-development/) just like it did for virtual collaboration platforms. Increased demand for IoT has accelerated service sector growth and increased overall productivity.\n\nAutomation which was considered a threat to human job replacements before the crisis, is now welcomed with open arms. Robots, PAT tools, sensors, detectors, digital checkpoints are the best solutions to continue manufacturing, Enterprise growth while keeping social distancing. More and more enterprises are implementing Automation in their production processes amidst health care concerns. Automation will be crucial for scaling production up and down and companies are leveraging these IoT trends to grow.\n\nIoT is trending in the Healthcare sector. The 5G standard of mobile connectivity is currently going mainstream, promising advantages like low latency, High velocity and broad coverage for IoT solutions. This will enable companies to offer new services, especially those based on real-time data processing from numerous sensors and devices which has tremendous benefits in Healthcare. Particularly, 5G can contribute to the development of remote surgery or machinery functioning in hazardous conditions.\n\nInclusion of IoT devices to perform digital diagnostics in various hospitals. Kinsa, for example, a digital thermometer with website tracking spread of flu in real time saw a spike in usage as the pandemic spread in the US. Remote monitoring, particularly of the elderly, is also on the rise. \u00a0\n\nFurther IoT and Edge computing has also drawn attention in 2020-2021 owing to privacy concerns and time lags in centralized cloud networking. With edge computing, information gathered by a device is processed directly on that device without being sent to other places. This has become possible due to the increased computing capabilities of modern devices.\n\nNext talk of the town is the merger of AI, ML and IoT that has brought transformation into how the industry is functioning. Today\u2019s IoT is inconceivable without advanced data analytics powered by AI algorithms and Big Data technology. Like in the Transportation sector. Providers of IoT/AI technology are making use of their collected data and updating the public on what is going on in their IoT networks. The combination of sensors, GPS, artificial intelligence and advanced analytics enables transportation companies to monitor &amp; control the location of transport. Vesseltracker.com for example, recently published updates on global cruise ship and freight activity. Geotab, an AI/IoT based tool, is providing regular\u00a0updates\u00a0on the commercial road transportation activity across North America.\n\nIncreased Blockchain implementation in IoT technology has given rise to Twin Technology that has changed the face of Industrial technology making it part of smart technology like smart home, smart city and now \u201cSmart Manufacturing\u201d Digital twins are virtual analogues of real objects or processes, possessing identical features and functioning the same as their real-life versions. For instance, using virtual copies of connected equipment at manufacturing enterprises, you can simulate various situations, predicting positive and negative outcomes. Thus, you can prevent accidents and improve the operational efficiency of physical equipment while it remains intact.", "link": "https://www.reddit.com/r/IOT/comments/pugdbu/top_iot_trends_and_tech_in_2021/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "top iot trends and tech in 2021 /!/ covid has no doubt caused disruption in every aspect but that disruption has led to increased digitization in all sectors, creating a market boom for [iot &amp; related technologies](https://technostacks.com/iot-app-development/) just like it did for virtual collaboration platforms. increased demand for iot has accelerated service sector growth and increased overall productivity.\n\nautomation which was considered a threat to human job replacements before the crisis, is now welcomed with open arms. robots, pat tools, sensors, detectors, digital checkpoints are the best solutions to continue manufacturing, enterprise growth while keeping social distancing. more and more enterprises are implementing automation in their production processes amidst health care concerns. automation will be crucial for scaling production up and down and companies are leveraging these iot trends to grow.\n\niot is trending in the healthcare sector. the 5g standard of mobile connectivity is currently going mainstream, promising advantages like low latency, high velocity and broad coverage for iot solutions. this will enable companies to offer new services, especially those based on real-time data processing from numerous sensors and devices which has tremendous benefits in healthcare. particularly, 5g can contribute to the development of remote surgery or machinery functioning in hazardous conditions.\n\ninclusion of iot devices to perform digital diagnostics in various hospitals. kinsa, for example, a digital thermometer with website tracking spread of flu in real time saw a spike in usage as the pandemic spread in the us. remote monitoring, particularly of the elderly, is also on the rise. \u00a0\n\nfurther iot and edge computing has also drawn attention in 2020-2021 owing to privacy concerns and time lags in centralized cloud networking. with edge computing, information gathered by a device is processed directly on that device without being sent to other places. this has become possible due to the increased computing capabilities of modern devices.\n\nnext talk of the town is the merger of ai, ml and iot that has brought transformation into how the industry is functioning. today\u2019s iot is inconceivable without advanced data analytics powered by ai algorithms and big data technology. like in the transportation sector. providers of iot/ai technology are making use of their collected data and updating the public on what is going on in their iot networks. the combination of sensors, gps, artificial intelligence and advanced analytics enables transportation companies to monitor &amp; control the location of transport. vesseltracker.com for example, recently published updates on global cruise ship and freight activity. geotab, an ai/iot based -----> tool !!! , is providing regular\u00a0updates\u00a0on the commercial road transportation activity across north america.\n\nincreased blockchain implementation in iot technology has given rise to twin technology that has changed the face of industrial technology making it part of smart technology like smart home, smart city and now \u201csmart manufacturing\u201d digital twins are virtual analogues of real objects or processes, possessing identical features and functioning the same as their real-life versions. for instance, using virtual copies of connected equipment at manufacturing enterprises, you can simulate various situations, predicting positive and negative outcomes. thus, you can prevent accidents and improve the operational efficiency of physical equipment while it remains intact.", "sortedWord": "None", "removed": null, "score": 1, "comments": 0, "media": "self", "medialink": "https://www.reddit.com/r/IOT/comments/pugdbu/top_iot_trends_and_tech_in_2021/", "identifyer": 3514953, "year": "2021"}, {"Unnamed: 0": 9619, "autor": "Ankush49", "date": 1610097563000, "content": "Smart Field Force Management Tool for all Businesses!", "link": "https://www.reddit.com/r/IOT/comments/ksz1v7/smart_field_force_management_tool_for_all/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "smart field force management -----> tool !!!  for all businesses!", "sortedWord": "None", "removed": "reddit", "score": 1, "comments": 1, "media": "image", "medialink": "https://i.redd.it/82k22cvps2a61.jpg", "identifyer": 3515148, "year": "2021"}, {"Unnamed: 0": 9646, "autor": "Peter909098", "date": 1609792778000, "content": "5 embedded development tools to look forward to in 2021 /!/ ## MDK\n\n*Processing img q84uatmhmd961...*\n\nMDK, namely RealView MDK or MDK-ARM (Microcontroller Development Kit), is an embedded software development tool for ARM processors such as ARM7, Arm-9, Cortex-M0, Cortex-M1, Cortex-M2, Cortex-M3, Cortex-R4, launched based on the uVision UI after ARM acquired Keil.\n\nMDK is designed for microcontroller applications and is powerful enough to satisfy most demanding embedded applications. It is available in four versions: MDK-Lite (free evaluation version), MDK-Essential, MDK-Plus, and MDK-Professional. All versions provide a full-fledged C/C++ development environment, with MDK-Professional including a number of intermediate libraries.\n\n## Advantage\n\n* Stable and reliable\uff1aMDK has been used by many companies, schools and independent developers, and its quality is excellent\n* Abundant documents\uff1aBecause of the large number of MDK users, there are numerous resource tutorials online\n\n## Disadvantage\n\n* Expensive\uff1aDue to the high price, many small businesses, independent developers, students can not afford the cost of software\n* The code editor is terrible\uff1aMDK was born a long time ago, the code editor is basically the same as the text editor of the system; Code highlighting, word completion, code formatting, and syntax analysis are important editing functions that are almost non-existent in MDK, so writing code is laborious, which leads to poor coding style and habits for many developers.\n\n## IAR\n\n*Processing img 0r5zodulmd961...*\n\nIAR Systems is the world's leading provider of embedded Systems development tools and services. Founded in 1983, the company has been providing products and services at every stage of the design, development, and testing of embedded systems, including integrated development environments (IDE) with C/C++ compilers and debuggers, real-time operating systems and middleware, development suites, hardware emulators, and state machine modeling tools.\n\nHeadquartered in Sweden in northern Europe, the company has branches in the United States, Japan, Britain, Germany, Belgium, Brazil and China.\n\nIts best known product is the C compiler IAR Embedded Workbench, which supports microprocessors from many leading semiconductor companies. Many of the world's leading companies are using IAR SYSTEMS 'development tools to develop their leading edge products, from consumer electronics, industrial control, automotive applications, healthcare, aerospace to mobile application systems ...\n\nMoreover, there are several versions of IAR for different embedded development requirements, such as: IAR For ARM\uff0cIAR For STM8\uff0cIAR For AVR\uff0cIAR For 8051 ...\n\n## Advantage\n\n* Stable and reliable\uff1aThe IAR has been focused on developing tools for decades and is widely recognized by the market, so it is extremely reliable\n* Compilation optimization is excellent\uff1aThe IAR focuses on the development of compiler tools, which compile very quickly and produce small, fast programs\n* Clean software UI\uff1aCompared to MDK, IAR's software UI looks much better\n\n## Disadvantage\n\n* Expensive\uff1aDue to the high price, many small businesses, independent developers, students can not afford the cost of software\n* The code editor is terrible\uff1aLike MDK, the IAR's code editor is terrible, with some basic functionality missing\n\n## Eclipse IDE\n\n*Processing img 5jsqtiwomd961...*\n\nEclipse is as a cross-platform free integrated development environment (IDE). It was initially used primarily for Java language development, and different computer languages can be supported by installing different plug-ins for Eclipse.\n\nEclipse itself is only a framework platform, and the support of many plug-ins makes it easy for Eclipse to have the flexibility that other relatively fixed IDEs doesn't have. So many software developers use Eclipse as a framework to developing their own ides.\n\nThe Eclipse embedded CDT plug-in allows you to create, build, debug, and manage ARM/RISC-V projects (executables and static/shared libraries, 32-bit and 64-bit versions) using the Eclipse IDE.\n\n## Advantage\n\n* Free\uff1aEclipse is open source software, so you don't have to pay for it\n* Cross-platform\uff1aEclipse is developed by Java, so it can run on different operating systems\n* More modern UI\uff1aCompared to MDK and IAR, Eclipse has a better UI and supports a variety of topics, making the UI less boring\n\n## Disadvantage\n\n* Complex project creation process\uff1aThe Eclipse IDE has fewer built-in templates, and many settings to configure if you create projects manually\n* Complex configurations\uff1aEclipse has many configurations, is very complex, and has many features that you wouldn't normally use\n\n## VSCode\n\n*Processing img ushr8qaqmd961...*\n\nVSCode, full name Visual Studio Code, is a lightweight code editor produced by Microsoft, free, open source and powerful. It supports syntax highlighting, smart code completion, custom hotkeys, parenthesis matching, code snippets, code contrast diff, git, and plug-in extensions. The software supports Windows, Mac and Linux across platforms.\n\nVSCode also has many plug-ins that can be used for embedded development, such as PlatformIO, CMake ...\n\n## Advantage\n\n* Free\uff1aVSCode is open source software, so you don't have to pay for it\n* Cross-platform\uff1aVSCode runs on NodeJS, which is cross-platform and therefore can run on different operating systems\n* Powerful editing function\uff1aVSCode built-in mainstream programming language syntax highlighting, word-based code completion, code fragments ... By installing the appropriate plug-in, you can get stronger code analysis and prompt capabilities.\n\n## Disadvantage\n\n* Configuration is various\uff1aVSCode and plug-ins have a lot of configuration, and the configuration is represented in Json text, and if you have too many plug-ins, the configuration becomes cumbersome\n* Speed is affected by plug-ins\uff1aToo many plug-ins will cause vscode to start and run slower, as well as consume a lot of memory\n* Not every plug-in is great\uff1aBecause many plug-ins are developed by individual developers, the functionality and reliability of plug-ins are not guaranteed\n\n## RT-Thread Studio\n\n*Processing img dstbjgormd961...*\n\nRT-Thread Studio is a one-stop RT-Thread development tool created by The RT-Thread IDE team. It makes the development of Internet of Things simple and efficient through an easy-to-use graphical configuration system and rich software package and component resources.\n\nThe functions of RT-Thread Studio mainly include project creation and management, code editing, SDK management, RT-Thread configuration, construction configuration, debugging configuration, program download and debugging, etc. And the combination of graphical configuration system, software package and component resources can reduce duplication of work and improve development efficiency.\n\nRt-thread Studio is developed by the Eclipse platform, and its UI design and style are inherited from Eclipse, which is a huge benefit for developers used to Eclipse.\n\nMeanwhile, RT-Thread Studio simplifies the complex configuration of Eclipse and simplifies the configuration mode of users as much as possible. It only needs to operate the graphical interface to add components and source code package to the project, which is extremely friendly to developers unfamiliar with Eclipse.\n\n## Advantage\n\n* Free\uff1aThe RT-Thread Studio community version is free forever\n* SDK management\uff1aThe SDK manager for RT-Thread Studio allows you to download and update the latest RT-Thread source package online, as well as numerous SDK packages.\n* Get started quickly\uff1aIt has simple project creation wizard, you can create a project framework by wizard.\n* Multiple project frameworks\uff1aRT-Thread Studio supports a variety of development frameworks for users to choose from\n* What you see is what you get\uff1aA new graphical configuration system with support for both architecture and tree diagram configurations\n* Rich package support\uff1aThe software package market provides a wealth of available software package resources to facilitate users to add to their own projects\n\n## Disadvantage\n\n* Not very stable\uff1aRT-Thread Studio has just been released and is currently under rapid development with frequent updates, so sometimes it has some bugs.", "link": "https://www.reddit.com/r/IOT/comments/kqhdxj/5_embedded_development_tools_to_look_forward_to/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "5 embedded development tools to look forward to in 2021 /!/ ## mdk\n\n*processing img q84uatmhmd961...*\n\nmdk, namely realview mdk or mdk-arm (microcontroller development kit), is an embedded software development -----> tool !!!  for arm processors such as arm7, arm-9, cortex-m0, cortex-m1, cortex-m2, cortex-m3, cortex-r4, launched based on the uvision ui after arm acquired keil.\n\nmdk is designed for microcontroller applications and is powerful enough to satisfy most demanding embedded applications. it is available in four versions: mdk-lite (free evaluation version), mdk-essential, mdk-plus, and mdk-professional. all versions provide a full-fledged c/c++ development environment, with mdk-professional including a number of intermediate libraries.\n\n## advantage\n\n* stable and reliable\uff1amdk has been used by many companies, schools and independent developers, and its quality is excellent\n* abundant documents\uff1abecause of the large number of mdk users, there are numerous resource tutorials online\n\n## disadvantage\n\n* expensive\uff1adue to the high price, many small businesses, independent developers, students can not afford the cost of software\n* the code editor is terrible\uff1amdk was born a long time ago, the code editor is basically the same as the text editor of the system; code highlighting, word completion, code formatting, and syntax analysis are important editing functions that are almost non-existent in mdk, so writing code is laborious, which leads to poor coding style and habits for many developers.\n\n## iar\n\n*processing img 0r5zodulmd961...*\n\niar systems is the world's leading provider of embedded systems development tools and services. founded in 1983, the company has been providing products and services at every stage of the design, development, and testing of embedded systems, including integrated development environments (ide) with c/c++ compilers and debuggers, real-time operating systems and middleware, development suites, hardware emulators, and state machine modeling tools.\n\nheadquartered in sweden in northern europe, the company has branches in the united states, japan, britain, germany, belgium, brazil and china.\n\nits best known product is the c compiler iar embedded workbench, which supports microprocessors from many leading semiconductor companies. many of the world's leading companies are using iar systems 'development tools to develop their leading edge products, from consumer electronics, industrial control, automotive applications, healthcare, aerospace to mobile application systems ...\n\nmoreover, there are several versions of iar for different embedded development requirements, such as: iar for arm\uff0ciar for stm8\uff0ciar for avr\uff0ciar for 8051 ...\n\n## advantage\n\n* stable and reliable\uff1athe iar has been focused on developing tools for decades and is widely recognized by the market, so it is extremely reliable\n* compilation optimization is excellent\uff1athe iar focuses on the development of compiler tools, which compile very quickly and produce small, fast programs\n* clean software ui\uff1acompared to mdk, iar's software ui looks much better\n\n## disadvantage\n\n* expensive\uff1adue to the high price, many small businesses, independent developers, students can not afford the cost of software\n* the code editor is terrible\uff1alike mdk, the iar's code editor is terrible, with some basic functionality missing\n\n## eclipse ide\n\n*processing img 5jsqtiwomd961...*\n\neclipse is as a cross-platform free integrated development environment (ide). it was initially used primarily for java language development, and different computer languages can be supported by installing different plug-ins for eclipse.\n\neclipse itself is only a framework platform, and the support of many plug-ins makes it easy for eclipse to have the flexibility that other relatively fixed ides doesn't have. so many software developers use eclipse as a framework to developing their own ides.\n\nthe eclipse embedded cdt plug-in allows you to create, build, debug, and manage arm/risc-v projects (executables and static/shared libraries, 32-bit and 64-bit versions) using the eclipse ide.\n\n## advantage\n\n* free\uff1aeclipse is open source software, so you don't have to pay for it\n* cross-platform\uff1aeclipse is developed by java, so it can run on different operating systems\n* more modern ui\uff1acompared to mdk and iar, eclipse has a better ui and supports a variety of topics, making the ui less boring\n\n## disadvantage\n\n* complex project creation process\uff1athe eclipse ide has fewer built-in templates, and many settings to configure if you create projects manually\n* complex configurations\uff1aeclipse has many configurations, is very complex, and has many features that you wouldn't normally use\n\n## vscode\n\n*processing img ushr8qaqmd961...*\n\nvscode, full name visual studio code, is a lightweight code editor produced by microsoft, free, open source and powerful. it supports syntax highlighting, smart code completion, custom hotkeys, parenthesis matching, code snippets, code contrast diff, git, and plug-in extensions. the software supports windows, mac and linux across platforms.\n\nvscode also has many plug-ins that can be used for embedded development, such as platformio, cmake ...\n\n## advantage\n\n* free\uff1avscode is open source software, so you don't have to pay for it\n* cross-platform\uff1avscode runs on nodejs, which is cross-platform and therefore can run on different operating systems\n* powerful editing function\uff1avscode built-in mainstream programming language syntax highlighting, word-based code completion, code fragments ... by installing the appropriate plug-in, you can get stronger code analysis and prompt capabilities.\n\n## disadvantage\n\n* configuration is various\uff1avscode and plug-ins have a lot of configuration, and the configuration is represented in json text, and if you have too many plug-ins, the configuration becomes cumbersome\n* speed is affected by plug-ins\uff1atoo many plug-ins will cause vscode to start and run slower, as well as consume a lot of memory\n* not every plug-in is great\uff1abecause many plug-ins are developed by individual developers, the functionality and reliability of plug-ins are not guaranteed\n\n## rt-thread studio\n\n*processing img dstbjgormd961...*\n\nrt-thread studio is a one-stop rt-thread development tool created by the rt-thread ide team. it makes the development of internet of things simple and efficient through an easy-to-use graphical configuration system and rich software package and component resources.\n\nthe functions of rt-thread studio mainly include project creation and management, code editing, sdk management, rt-thread configuration, construction configuration, debugging configuration, program download and debugging, etc. and the combination of graphical configuration system, software package and component resources can reduce duplication of work and improve development efficiency.\n\nrt-thread studio is developed by the eclipse platform, and its ui design and style are inherited from eclipse, which is a huge benefit for developers used to eclipse.\n\nmeanwhile, rt-thread studio simplifies the complex configuration of eclipse and simplifies the configuration mode of users as much as possible. it only needs to operate the graphical interface to add components and source code package to the project, which is extremely friendly to developers unfamiliar with eclipse.\n\n## advantage\n\n* free\uff1athe rt-thread studio community version is free forever\n* sdk management\uff1athe sdk manager for rt-thread studio allows you to download and update the latest rt-thread source package online, as well as numerous sdk packages.\n* get started quickly\uff1ait has simple project creation wizard, you can create a project framework by wizard.\n* multiple project frameworks\uff1art-thread studio supports a variety of development frameworks for users to choose from\n* what you see is what you get\uff1aa new graphical configuration system with support for both architecture and tree diagram configurations\n* rich package support\uff1athe software package market provides a wealth of available software package resources to facilitate users to add to their own projects\n\n## disadvantage\n\n* not very stable\uff1art-thread studio has just been released and is currently under rapid development with frequent updates, so sometimes it has some bugs.", "sortedWord": "None", "removed": null, "score": 1, "comments": 9, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/kqhdxj/5_embedded_development_tools_to_look_forward_to/", "identifyer": 3515177, "year": "2021"}, {"Unnamed: 0": 9683, "autor": "Bodybuilder-Key", "date": 1612262163000, "content": "Graphical tool for streaming IoT data /!/ [removed]", "link": "https://www.reddit.com/r/IOT/comments/lassdr/graphical_tool_for_streaming_iot_data/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "graphical -----> tool !!!  for streaming iot data /!/ [removed]", "sortedWord": "None", "removed": "moderator", "score": 1, "comments": 2, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/lassdr/graphical_tool_for_streaming_iot_data/", "identifyer": 3515214, "year": "2021"}], "name": "toolIOT2021"}