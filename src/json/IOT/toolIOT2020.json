{"interestingcomments": [{"Unnamed: 0": 4946, "autor": "Void-kun", "date": 1583154714000, "content": "Without international standards, manufacturers will continue to release vulnerable IoT devices to the market. /!/ I just wanted to start a discussion and get other peoples perspectives for my research. I'm currently writing my final year project for University and it's about how we can identify vulnerabilities and reduce malware on IoT devices. \n\nBased on numbers provided by [Statista](https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/) there will be an estimated 30.73 billion installed IoT devices across the globe. Many of these devices have no security standards to uphold, and whilst businesses may not be able to use them due to the likes of ISO 27001 and PCI compliance, consumers can. \n\nManufacturers are keeping costs as low as possible and in many cases are shipping minimum viable products to market, many of these use Telnet (with default or weak credentials), making them easy targets to botnet farmers.\n\nThese botnets are then used against organisations (and individuals) to perform massive amplified DDOS attacks, sometimes lasting days (29 days is the current record). \n\nBut not only that, there are variants of malware such as HideNSeek that set up a TFTP server to deliver additional malware payloads to other local devices on the network (who would've thought your smart lightbulbs could be creating an attack vector to your home PC).\n\nI'm in the process of writing a security audit tool aimed at consumers to be open-source, free and easy to use to try and educate users on these vulnerabilities in the hope that it will slow the growth of vulnerable devices.\n\nCan DDOS mitigation keep up with these growing botnets? Is there anything more we can do to protect consumers and organisations from these vulnerabilities and attacks? Would you purchase a cheaper IoT device if you knew it was considered vulnerable? Would you use a tool to identify vulnerabilities in your devices if there was one available?\n\nI may put up a poll for the above questions in the coming weeks, so keep your eyes peeled.\n\nNote: Nobody here will be cited although if sources to information can be provided that may be helpful in my research, it would be extremely helpful.\n\nThanks!", "link": "https://www.reddit.com/r/IOT/comments/fcbv2l/without_international_standards_manufacturers/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "without international standards, manufacturers will continue to release vulnerable iot devices to the market. /!/ i just wanted to start a discussion and get other peoples perspectives for my research. i'm currently writing my final year project for university and it's about how we can identify vulnerabilities and reduce malware on iot devices. \n\nbased on numbers provided by [statista](https://www.statista.com/statistics/471264/iot-number-of-connected-devices-worldwide/) there will be an estimated 30.73 billion installed iot devices across the globe. many of these devices have no security standards to uphold, and whilst businesses may not be able to use them due to the likes of iso 27001 and pci compliance, consumers can. \n\nmanufacturers are keeping costs as low as possible and in many cases are shipping minimum viable products to market, many of these use telnet (with default or weak credentials), making them easy targets to botnet farmers.\n\nthese botnets are then used against organisations (and individuals) to perform massive amplified ddos attacks, sometimes lasting days (29 days is the current record). \n\nbut not only that, there are variants of malware such as hidenseek that set up a tftp server to deliver additional malware payloads to other local devices on the network (who would've thought your smart lightbulbs could be creating an attack vector to your home pc).\n\ni'm in the process of writing a security audit -----> tool !!!  aimed at consumers to be open-source, free and easy to use to try and educate users on these vulnerabilities in the hope that it will slow the growth of vulnerable devices.\n\ncan ddos mitigation keep up with these growing botnets? is there anything more we can do to protect consumers and organisations from these vulnerabilities and attacks? would you purchase a cheaper iot device if you knew it was considered vulnerable? would you use a tool to identify vulnerabilities in your devices if there was one available?\n\ni may put up a poll for the above questions in the coming weeks, so keep your eyes peeled.\n\nnote: nobody here will be cited although if sources to information can be provided that may be helpful in my research, it would be extremely helpful.\n\nthanks!", "sortedWord": "None", "removed": null, "score": 1, "comments": 8, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/fcbv2l/without_international_standards_manufacturers/", "identifyer": 3510142, "year": "2020"}, {"Unnamed: 0": 5356, "autor": "Peter909098", "date": 1591861972000, "content": "Share a free-to-use IDE built by opensource IoTos RT-Thread. /!/ This article is copy and pastes from opensource IoT OS RT-Thread:  [https://www.reddit.com/user/RT-thread\\_IoT\\_OS/comments/gwcif5/rtthread\\_studio\\_ide\\_v11\\_is\\_released\\_with\\_7\\_new/](https://www.reddit.com/user/RT-thread_IoT_OS/comments/gwcif5/rtthread_studio_ide_v11_is_released_with_7_new/) \n\n&amp;#x200B;\n\n What is RT-Thread Studio IDE:\n\nRT-Thread Studio is a one-stop development tool that has an easy-to-use graphical configuration system and a wealth of software packages and components resources, which is built to make the IoT development more simple and efficient.\n\nRT-Thread Studio has the features of project creation and management, code editing, SDK management, RT-Thread configuration, build configuration, debugging configuration, program download, and debug. Also, it combines the graphical configuration system with packages and component resources, reduces the duplication of work, and improves development efficiency.\n\n[Download RT-Thread Studio](https://www.rt-thread.io/download.html?download=Studio)\n\nWhat\u2019s New in Version 1.1:\n\n1. Compared with version 1.0 that only supports the STM32F1 series, the whole STM32 series are supported in the new version 1.1.\n\n2. RT-Thread configuration mode includes framework configuration and tree configuration. With framework configuration, components or software packages are easy to be enabled by clicking the corresponding icons; Under tree configuration, all the configuration options are organized into a tree diagram and the search function is added to the right-click menu, which is convenient to locate a specific option.\n\n3. In addition to supporting the STM32 series of chips, RT-Thread Studio now also supports the chip manufacturers to add chips. The current SDK manager contains the resource packages for the STM32F1 and STM32F4 by default. If users want to use other chips, they can install the corresponding resource packages first.\n\n4. Add a concise mode for the compiler output, which can be turned on or off by clicking the switch button at the compiling window. The usage of ROM and RAM can also be printed in the compiling window.\n\n5. In addition to the RT-Thread Studio project, MDK and IAR projects are available to be imported directly.\n\n6. Add a new DevStyle theme with a beautiful color scheme.\n\n7. Add the code analysis feature and offer the preference configuration to support analyzing code, showing the causes and locations of errors and warnings.\n\nThe RT-Thread Studio IDE V1.1 tutorial is shared on [RT-Thread Youtube Channel](https://www.youtube.com/channel/UCdDHtIfSYPq4002r27ffqPw). Check out this video to quickly get started with RT-Thread Studio V1.1.", "link": "https://www.reddit.com/r/IOT/comments/h0urz6/share_a_freetouse_ide_built_by_opensource_iotos/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "share a free-to-use ide built by opensource iotos rt-thread. /!/ this article is copy and pastes from opensource iot os rt-thread:  [https://www.reddit.com/user/rt-thread\\_iot\\_os/comments/gwcif5/rtthread\\_studio\\_ide\\_v11\\_is\\_released\\_with\\_7\\_new/](https://www.reddit.com/user/rt-thread_iot_os/comments/gwcif5/rtthread_studio_ide_v11_is_released_with_7_new/) \n\n&amp;#x200b;\n\n what is rt-thread studio ide:\n\nrt-thread studio is a one-stop development -----> tool !!!  that has an easy-to-use graphical configuration system and a wealth of software packages and components resources, which is built to make the iot development more simple and efficient.\n\nrt-thread studio has the features of project creation and management, code editing, sdk management, rt-thread configuration, build configuration, debugging configuration, program download, and debug. also, it combines the graphical configuration system with packages and component resources, reduces the duplication of work, and improves development efficiency.\n\n[download rt-thread studio](https://www.rt-thread.io/download.html?download=studio)\n\nwhat\u2019s new in version 1.1:\n\n1. compared with version 1.0 that only supports the stm32f1 series, the whole stm32 series are supported in the new version 1.1.\n\n2. rt-thread configuration mode includes framework configuration and tree configuration. with framework configuration, components or software packages are easy to be enabled by clicking the corresponding icons; under tree configuration, all the configuration options are organized into a tree diagram and the search function is added to the right-click menu, which is convenient to locate a specific option.\n\n3. in addition to supporting the stm32 series of chips, rt-thread studio now also supports the chip manufacturers to add chips. the current sdk manager contains the resource packages for the stm32f1 and stm32f4 by default. if users want to use other chips, they can install the corresponding resource packages first.\n\n4. add a concise mode for the compiler output, which can be turned on or off by clicking the switch button at the compiling window. the usage of rom and ram can also be printed in the compiling window.\n\n5. in addition to the rt-thread studio project, mdk and iar projects are available to be imported directly.\n\n6. add a new devstyle theme with a beautiful color scheme.\n\n7. add the code analysis feature and offer the preference configuration to support analyzing code, showing the causes and locations of errors and warnings.\n\nthe rt-thread studio ide v1.1 tutorial is shared on [rt-thread youtube channel](https://www.youtube.com/channel/ucddhtifsypq4002r27ffqpw). check out this video to quickly get started with rt-thread studio v1.1.", "sortedWord": "None", "removed": null, "score": 3, "comments": 0, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/h0urz6/share_a_freetouse_ide_built_by_opensource_iotos/", "identifyer": 3510563, "year": "2020"}, {"Unnamed: 0": 5475, "autor": "Gullible_Mouse2020", "date": 1609243078000, "content": "RT-Thread Studio Embedded Development Tool Project Creation Function Introduction /!/ [removed]", "link": "https://www.reddit.com/r/IOT/comments/kmd31j/rtthread_studio_embedded_development_tool_project/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "rt-thread studio embedded development -----> tool !!!  project creation function introduction /!/ [removed]", "sortedWord": "None", "removed": "moderator", "score": 1, "comments": 2, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/kmd31j/rtthread_studio_embedded_development_tool_project/", "identifyer": 3510684, "year": "2020"}, {"Unnamed: 0": 5505, "autor": "Peter909098", "date": 1608792292000, "content": "The best IDE for embedded development -- Get temperature and humidity sensor data case /!/ **Preparatory work**\n\n**Software**\n\nIDE: RT-Thread Studio\n\n&amp;#x200B;\n\nhttps://preview.redd.it/uq71j38ry2761.png?width=599&amp;format=png&amp;auto=webp&amp;s=9749da11807c9b033d10dd4c3f28ec3e3610a2da\n\n**Hardware**\n\nDSP: STM32L431RCT6\n\nTemperature Humidity Sensor:  SHT30\n\nCommunication module:  ESP8266\uff08WIFI\uff09\n\nDisplay module: 0.96\u2019OLED\uff08SSD1306\uff09\n\n&amp;#x200B;\n\n**Steps**\n\n1. New RT-Thread Project\n\n&amp;#x200B;\n\nhttps://preview.redd.it/38bp6sdsy2761.png?width=612&amp;format=png&amp;auto=webp&amp;s=caf0c87df99ef385b62f770cf4b7ce284d11360d\n\n2. Build Project\n\n&amp;#x200B;\n\nhttps://preview.redd.it/4zdj4rfty2761.png?width=434&amp;format=png&amp;auto=webp&amp;s=0bd35da6b78aa2b0de59f61e30bb552de5826c5a\n\n3. Open the serial terminal\n\n&amp;#x200B;\n\nhttps://preview.redd.it/a7j2zhyty2761.png?width=548&amp;format=png&amp;auto=webp&amp;s=9ced45c6c40757f8fb2c563c9997baf6777dad7b\n\n&amp;#x200B;\n\nhttps://preview.redd.it/yvaw9t6vy2761.png?width=881&amp;format=png&amp;auto=webp&amp;s=806b839fded69ffb6b9eed7a9e0b9f0fd181a8d9\n\n4. Download\n\n&amp;#x200B;\n\nhttps://preview.redd.it/q6puh0mxy2761.png?width=442&amp;format=png&amp;auto=webp&amp;s=aab7a7807ffadca25816bdb3c57f0a61f94d7fa0\n\n5. Add I2C device\n\n    5.1 Enable I2C Device Driver Framework\n\nDouble-click the RT-Thread Setting file on the left to open the RT-Thread graphical configuration tool. The software simulation I2C item is gray, indicating that it is not open. Click to open the software I2C driver framework, and the icon turns to color Means open\n\n&amp;#x200B;\n\nhttps://preview.redd.it/9zfw73ryy2761.png?width=1218&amp;format=png&amp;auto=webp&amp;s=f182f72a52495614e92f2875c2c03c5db8210433\n\nRight-click this option to open more configurations, such as viewing the dependency of the drive device, viewing the detailed configuration of the drive device, viewing the API document of the drive device, viewing online documents, etc.\n\n&amp;#x200B;\n\nhttps://preview.redd.it/tudr1zkzy2761.png?width=1283&amp;format=png&amp;auto=webp&amp;s=53f893af1c3ee46565970282345840f1f66daf92\n\nPress Ctrl+S to save, the configuration will take effect, and the software will automatically add the I2C device driver framework to the project\n\n    5.2 Define Soft I2C Related Macros\n\nDefine the related macros of soft I2C on the board.h file.\n\n`#define BSP_USING_I2C1 /* Use I2C1 Bus */`\n\n`#define BSP_I2C1_SCL_PIN GET_PIN(C, 1) /* SCL -&gt; PC1 */`\n\n`#define BSP_I2C1_SDA_PIN GET_PIN(D, 6) /* SDA -&gt; PD6 */`\n\nThe above I2C bus related macros present that the SCL clock line of the I2C1 bus is connected to the PC1 pin and the SDA data cable is connected to the PD6 pin. If you need to use more than one I2C bus, please refer to the macro of I2C1 on the board.h file for more information about the relevant macro definition.\n\n    5.3 Use I2C Bus\n\nCompile and download the program, enter the list\\_devicecommand in the terminal you can observe that the I2C1 has been successfully registered in the system, as shown below:\n\n&amp;#x200B;\n\nhttps://preview.redd.it/hdhhoic2z2761.png?width=713&amp;format=png&amp;auto=webp&amp;s=76b0566aa39c0c3d6f1597032f9014cae35750de\n\n6. Add the SHT3x package\n\n    6.1 Search add package\n\n&amp;#x200B;\n\nhttps://preview.redd.it/dtnnaaj3z2761.png?width=1036&amp;format=png&amp;auto=webp&amp;s=c3e27ea11561415ed95f1a3fce98cb046cbe7df4\n\n&amp;#x200B;\n\nhttps://preview.redd.it/nmtvt694z2761.png?width=1446&amp;format=png&amp;auto=webp&amp;s=c1e7f708fc6fb6a485ac06dc0ce25c1a6975c0e7\n\n&amp;#x200B;\n\nhttps://preview.redd.it/rkg79qd5z2761.png?width=703&amp;format=png&amp;auto=webp&amp;s=f3626b9e3dacbd8059e43d7b89b7ea4b6e0f6bf4\n\nNext, press Ctrl+S to save the project, the software will automatically add the software package code to the project, where [README.md](https://README.md) is the detailed documentation of the software package, you must read it before use\n\n&amp;#x200B;\n\nhttps://preview.redd.it/6wj0w0a6z2761.png?width=325&amp;format=png&amp;auto=webp&amp;s=51719f721a1acb2aed6eed15515b399fe4a2699c\n\n&amp;#x200B;\n\n    6.2 Test the package with commands\n\nMost software packages provide test commands, and the SHT3x software package is the same. The following commands are provided for testing\n\n`1- sht3x probe &lt;i2c_dev_name&gt; &lt;pu/pd&gt;-To mount SHT3x devices, you need to specify the i2c device name and the pull-up and pull-down method, the default pull-down`\n\n`2- sht3x read--read SHT3x temperature and humidity`\n\n`3- sht3x status--Read and view the status register value`\n\n`4- sht3x reset--software reset SHT3x`\n\n`5- sht3x heater &lt;on/off&gt;--Turn on/off heater`\n\n`7. Obtain temperature and humidity sensor data`\n\nFirst mount the SHT30 temperature and humidity sensor to the previously registered I2C bus device:\n\n&amp;#x200B;\n\nhttps://preview.redd.it/ziyrua4az2761.png?width=399&amp;format=png&amp;auto=webp&amp;s=854e62310770abb32a48dd8fcebf969976fe1077\n\nAfter mounting, you can view the registers, read the temperature and humidity, reset, and turn on/off the heater, such as reading the temperature and humidity once:\n\n&amp;#x200B;\n\nhttps://preview.redd.it/1nklmoraz2761.png?width=470&amp;format=png&amp;auto=webp&amp;s=1a2cd2c1fa463ccae7a673d27d8ad2433cc5d900\n\n7. Obtain temperature and humidity sensor data\n\n7.1 After successfully testing the device using the commands provided by the software package, create a thread to obtain SHT3x data using the API provided by the SHT3x software package.\n\nUnder the Applicaition group, create a new file sht30\\_ccollect.c to store the relevant code for SHT3x to obtain data, edit the following\n\n/\\*\n\n\\* Copyright (c) 2006-2019, RT-Thread Development Team\n\n\\*\n\n\\* SPDX-License-Identifier: Apache-2.0\n\n\\*\n\n\\* Change Logs:\n\n\\* Date Author Notes\n\n\\* 2020-02-20 Mculover666 the first version\n\n\\*/\n\n&amp;#x200B;\n\n\\#include &lt;rtthread.h&gt;\n\n\\#include &lt;board.h&gt;\n\n\\#include &lt;sht3x.h&gt;\n\n&amp;#x200B;\n\n\\#define THREAD\\_PRIORITY 25\n\n\\#define THREAD\\_STACK\\_SIZE 512\n\n\\#define THREAD\\_TIMESLICE 5\n\n&amp;#x200B;\n\nstatic rt\\_thread\\_ttid1 = RT\\_NULL;\n\n&amp;#x200B;\n\n/\\* Entry function\\*/\n\nstatic void sht30\\_collect\\_thread\\_entry(void \\*parameter)\n\ntwenty three{\n\nsht3x\\_device\\_t sht3x\\_device;\n\n&amp;#x200B;\n\nsht3x\\_device = sht3x\\_init(\"i2c1\", 0x44);\n\n&amp;#x200B;\n\nwhile (1)\n\n{\n\nif(RT\\_EOK==sht3x\\_read\\_singleshot(sht3x\\_device))\n\n{\n\nrt\\_kprintf(\"sht30 humidity: %d.%d\", (int)sht3x\\_device-&gt;humidity, (int)(sht3x\\_device-&gt;humidity\\* 10)% 10);\n\nrt\\_kprintf(\"temperature:%d.%d\\\\n\", (int)sht3x\\_device-&gt;temperature, (int)(sht3x\\_device-&gt;temperature\\* 10)% 10);\n\n}\n\nelse\n\n{\n\nrt\\_kprintf(\"read sht3x fail.\\\\r\\\\n\");\n\nbreak;\n\n}\n\nrt\\_thread\\_mdelay(2000);\n\n}\n\n}\n\n&amp;#x200B;\n\n/\\* Create thread\\*/\n\nint sht30\\_collect(void)\n\n{\n\n/\\* Create thread\\*/\n\ntid1 = rt\\_thread\\_create(\"sht30\\_collect\\_thread\",\n\nsht30\\_collect\\_thread\\_entry, RT\\_NULL,\n\nTHREAD\\_STACK\\_SIZE,\n\nTHREAD\\_PRIORITY, THREAD\\_TIMESLICE);\n\n&amp;#x200B;\n\n/\\* If you get the thread control block, start this thread\\*/\n\nif (tid1!= RT\\_NULL)\n\nrt\\_thread\\_startup(tid1);\n\n&amp;#x200B;\n\nreturn 0;\n\n}\n\nTest the program in main.c:\n\n&amp;#x200B;\n\nhttps://preview.redd.it/ghg0s4sbz2761.png?width=412&amp;format=png&amp;auto=webp&amp;s=04e6bcc55956065bb2d68234c75ea950f8326358\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n[result](https://preview.redd.it/jvtb9r6rz2761.png?width=471&amp;format=png&amp;auto=webp&amp;s=73b7efa69dc28cc3b3f7f8efb7a9ed90f7527b7c)\n\n**End**\n\nIt's great, I completed this case almost without writing any code, Do you like it ?\n\nYou can get RT-Thread Studio from this address: [https://www.rt-thread.io/download.html?download=Studio](https://www.rt-thread.io/download.html?download=Studio)\n\nBtw, What IDE do you all use? Welcome to leave a message.", "link": "https://www.reddit.com/r/IOT/comments/kjalgn/the_best_ide_for_embedded_development_get/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "the best ide for embedded development -- get temperature and humidity sensor data case /!/ **preparatory work**\n\n**software**\n\nide: rt-thread studio\n\n&amp;#x200b;\n\nhttps://preview.redd.it/uq71j38ry2761.png?width=599&amp;format=png&amp;auto=webp&amp;s=9749da11807c9b033d10dd4c3f28ec3e3610a2da\n\n**hardware**\n\ndsp: stm32l431rct6\n\ntemperature humidity sensor:  sht30\n\ncommunication module:  esp8266\uff08wifi\uff09\n\ndisplay module: 0.96\u2019oled\uff08ssd1306\uff09\n\n&amp;#x200b;\n\n**steps**\n\n1. new rt-thread project\n\n&amp;#x200b;\n\nhttps://preview.redd.it/38bp6sdsy2761.png?width=612&amp;format=png&amp;auto=webp&amp;s=caf0c87df99ef385b62f770cf4b7ce284d11360d\n\n2. build project\n\n&amp;#x200b;\n\nhttps://preview.redd.it/4zdj4rfty2761.png?width=434&amp;format=png&amp;auto=webp&amp;s=0bd35da6b78aa2b0de59f61e30bb552de5826c5a\n\n3. open the serial terminal\n\n&amp;#x200b;\n\nhttps://preview.redd.it/a7j2zhyty2761.png?width=548&amp;format=png&amp;auto=webp&amp;s=9ced45c6c40757f8fb2c563c9997baf6777dad7b\n\n&amp;#x200b;\n\nhttps://preview.redd.it/yvaw9t6vy2761.png?width=881&amp;format=png&amp;auto=webp&amp;s=806b839fded69ffb6b9eed7a9e0b9f0fd181a8d9\n\n4. download\n\n&amp;#x200b;\n\nhttps://preview.redd.it/q6puh0mxy2761.png?width=442&amp;format=png&amp;auto=webp&amp;s=aab7a7807ffadca25816bdb3c57f0a61f94d7fa0\n\n5. add i2c device\n\n    5.1 enable i2c device driver framework\n\ndouble-click the rt-thread setting file on the left to open the rt-thread graphical configuration -----> tool !!! . the software simulation i2c item is gray, indicating that it is not open. click to open the software i2c driver framework, and the icon turns to color means open\n\n&amp;#x200b;\n\nhttps://preview.redd.it/9zfw73ryy2761.png?width=1218&amp;format=png&amp;auto=webp&amp;s=f182f72a52495614e92f2875c2c03c5db8210433\n\nright-click this option to open more configurations, such as viewing the dependency of the drive device, viewing the detailed configuration of the drive device, viewing the api document of the drive device, viewing online documents, etc.\n\n&amp;#x200b;\n\nhttps://preview.redd.it/tudr1zkzy2761.png?width=1283&amp;format=png&amp;auto=webp&amp;s=53f893af1c3ee46565970282345840f1f66daf92\n\npress ctrl+s to save, the configuration will take effect, and the software will automatically add the i2c device driver framework to the project\n\n    5.2 define soft i2c related macros\n\ndefine the related macros of soft i2c on the board.h file.\n\n`#define bsp_using_i2c1 /* use i2c1 bus */`\n\n`#define bsp_i2c1_scl_pin get_pin(c, 1) /* scl -&gt; pc1 */`\n\n`#define bsp_i2c1_sda_pin get_pin(d, 6) /* sda -&gt; pd6 */`\n\nthe above i2c bus related macros present that the scl clock line of the i2c1 bus is connected to the pc1 pin and the sda data cable is connected to the pd6 pin. if you need to use more than one i2c bus, please refer to the macro of i2c1 on the board.h file for more information about the relevant macro definition.\n\n    5.3 use i2c bus\n\ncompile and download the program, enter the list\\_devicecommand in the terminal you can observe that the i2c1 has been successfully registered in the system, as shown below:\n\n&amp;#x200b;\n\nhttps://preview.redd.it/hdhhoic2z2761.png?width=713&amp;format=png&amp;auto=webp&amp;s=76b0566aa39c0c3d6f1597032f9014cae35750de\n\n6. add the sht3x package\n\n    6.1 search add package\n\n&amp;#x200b;\n\nhttps://preview.redd.it/dtnnaaj3z2761.png?width=1036&amp;format=png&amp;auto=webp&amp;s=c3e27ea11561415ed95f1a3fce98cb046cbe7df4\n\n&amp;#x200b;\n\nhttps://preview.redd.it/nmtvt694z2761.png?width=1446&amp;format=png&amp;auto=webp&amp;s=c1e7f708fc6fb6a485ac06dc0ce25c1a6975c0e7\n\n&amp;#x200b;\n\nhttps://preview.redd.it/rkg79qd5z2761.png?width=703&amp;format=png&amp;auto=webp&amp;s=f3626b9e3dacbd8059e43d7b89b7ea4b6e0f6bf4\n\nnext, press ctrl+s to save the project, the software will automatically add the software package code to the project, where [readme.md](https://readme.md) is the detailed documentation of the software package, you must read it before use\n\n&amp;#x200b;\n\nhttps://preview.redd.it/6wj0w0a6z2761.png?width=325&amp;format=png&amp;auto=webp&amp;s=51719f721a1acb2aed6eed15515b399fe4a2699c\n\n&amp;#x200b;\n\n    6.2 test the package with commands\n\nmost software packages provide test commands, and the sht3x software package is the same. the following commands are provided for testing\n\n`1- sht3x probe &lt;i2c_dev_name&gt; &lt;pu/pd&gt;-to mount sht3x devices, you need to specify the i2c device name and the pull-up and pull-down method, the default pull-down`\n\n`2- sht3x read--read sht3x temperature and humidity`\n\n`3- sht3x status--read and view the status register value`\n\n`4- sht3x reset--software reset sht3x`\n\n`5- sht3x heater &lt;on/off&gt;--turn on/off heater`\n\n`7. obtain temperature and humidity sensor data`\n\nfirst mount the sht30 temperature and humidity sensor to the previously registered i2c bus device:\n\n&amp;#x200b;\n\nhttps://preview.redd.it/ziyrua4az2761.png?width=399&amp;format=png&amp;auto=webp&amp;s=854e62310770abb32a48dd8fcebf969976fe1077\n\nafter mounting, you can view the registers, read the temperature and humidity, reset, and turn on/off the heater, such as reading the temperature and humidity once:\n\n&amp;#x200b;\n\nhttps://preview.redd.it/1nklmoraz2761.png?width=470&amp;format=png&amp;auto=webp&amp;s=1a2cd2c1fa463ccae7a673d27d8ad2433cc5d900\n\n7. obtain temperature and humidity sensor data\n\n7.1 after successfully testing the device using the commands provided by the software package, create a thread to obtain sht3x data using the api provided by the sht3x software package.\n\nunder the applicaition group, create a new file sht30\\_ccollect.c to store the relevant code for sht3x to obtain data, edit the following\n\n/\\*\n\n\\* copyright (c) 2006-2019, rt-thread development team\n\n\\*\n\n\\* spdx-license-identifier: apache-2.0\n\n\\*\n\n\\* change logs:\n\n\\* date author notes\n\n\\* 2020-02-20 mculover666 the first version\n\n\\*/\n\n&amp;#x200b;\n\n\\#include &lt;rtthread.h&gt;\n\n\\#include &lt;board.h&gt;\n\n\\#include &lt;sht3x.h&gt;\n\n&amp;#x200b;\n\n\\#define thread\\_priority 25\n\n\\#define thread\\_stack\\_size 512\n\n\\#define thread\\_timeslice 5\n\n&amp;#x200b;\n\nstatic rt\\_thread\\_ttid1 = rt\\_null;\n\n&amp;#x200b;\n\n/\\* entry function\\*/\n\nstatic void sht30\\_collect\\_thread\\_entry(void \\*parameter)\n\ntwenty three{\n\nsht3x\\_device\\_t sht3x\\_device;\n\n&amp;#x200b;\n\nsht3x\\_device = sht3x\\_init(\"i2c1\", 0x44);\n\n&amp;#x200b;\n\nwhile (1)\n\n{\n\nif(rt\\_eok==sht3x\\_read\\_singleshot(sht3x\\_device))\n\n{\n\nrt\\_kprintf(\"sht30 humidity: %d.%d\", (int)sht3x\\_device-&gt;humidity, (int)(sht3x\\_device-&gt;humidity\\* 10)% 10);\n\nrt\\_kprintf(\"temperature:%d.%d\\\\n\", (int)sht3x\\_device-&gt;temperature, (int)(sht3x\\_device-&gt;temperature\\* 10)% 10);\n\n}\n\nelse\n\n{\n\nrt\\_kprintf(\"read sht3x fail.\\\\r\\\\n\");\n\nbreak;\n\n}\n\nrt\\_thread\\_mdelay(2000);\n\n}\n\n}\n\n&amp;#x200b;\n\n/\\* create thread\\*/\n\nint sht30\\_collect(void)\n\n{\n\n/\\* create thread\\*/\n\ntid1 = rt\\_thread\\_create(\"sht30\\_collect\\_thread\",\n\nsht30\\_collect\\_thread\\_entry, rt\\_null,\n\nthread\\_stack\\_size,\n\nthread\\_priority, thread\\_timeslice);\n\n&amp;#x200b;\n\n/\\* if you get the thread control block, start this thread\\*/\n\nif (tid1!= rt\\_null)\n\nrt\\_thread\\_startup(tid1);\n\n&amp;#x200b;\n\nreturn 0;\n\n}\n\ntest the program in main.c:\n\n&amp;#x200b;\n\nhttps://preview.redd.it/ghg0s4sbz2761.png?width=412&amp;format=png&amp;auto=webp&amp;s=04e6bcc55956065bb2d68234c75ea950f8326358\n\n&amp;#x200b;\n\n&amp;#x200b;\n\n[result](https://preview.redd.it/jvtb9r6rz2761.png?width=471&amp;format=png&amp;auto=webp&amp;s=73b7efa69dc28cc3b3f7f8efb7a9ed90f7527b7c)\n\n**end**\n\nit's great, i completed this case almost without writing any code, do you like it ?\n\nyou can get rt-thread studio from this address: [https://www.rt-thread.io/download.html?download=studio](https://www.rt-thread.io/download.html?download=studio)\n\nbtw, what ide do you all use? welcome to leave a message.", "sortedWord": "None", "removed": null, "score": 1, "comments": 1, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/kjalgn/the_best_ide_for_embedded_development_get/", "identifyer": 3510714, "year": "2020"}, {"Unnamed: 0": 5556, "autor": "Altsina", "date": 1607876470000, "content": "Protocol converter and simulation tool for IOT devices /!/ [removed]", "link": "https://www.reddit.com/r/IOT/comments/kcdct9/protocol_converter_and_simulation_tool_for_iot/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "protocol converter and simulation -----> tool !!!  for iot devices /!/ [removed]", "sortedWord": "None", "removed": "moderator", "score": 1, "comments": 2, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/kcdct9/protocol_converter_and_simulation_tool_for_iot/", "identifyer": 3510769, "year": "2020"}, {"Unnamed: 0": 5601, "autor": "mc_woods", "date": 1605386059000, "content": "oStore : Simple Object Storage for low resource platforms /!/ A while ago I posted on the C, IoT, and Embedded subreddits - as I was trying to find a way to store variable configuration information on a small / embedded device, with limited storage and RAM. You folks were awesome in suggesting possible solutions. A really popular solution was either keeping all the configuration in RAM and writing it to persistent storage, or alternatively using something like SQLite.  But I kinda had an itch, there is a set of devices that fall somewhere in between, SQLite is too big, and keeping everything in RAM isn't possible. Is there something I could do that would sit in the middle?\n\nLike any software developer, I kinda had \"the itch\", just to see if I could write something to do just that. The requirements were basically a simple object store, where the objects are strings or plain old C objects. So I had a go. The result is oStore, a very simple object storage solution. It comes with a command line tool to allow you to create and inspect oStore files, and an API / library which can be used in projects.\n\nI've tried to make sure that the memory usage is small as possible, that all disk / persistent file system stores a live copy of the data.\n\n**Giving back is fun**\n\nI wanted to share this with you folks, it feels good to give something back, and I really appreciate all the feedback you've given me so far. Now, the oStore project is a good proof of concept, it needs some work to make it a bit more robust. I need to write some \"recovery\" code to restore a broken or corrupt store, and a small change to support commit's, where an object can be changed, and then \"committed\" to disk, both of these efforts would make the store more reliable in low power conditions.\n\n**Worth while continuing ?**\n\nAs much as I love developing for the sake of it, I'm wondering if I should continue investing time on this. It has been fun, and I've some other ideas I'd like to work on too. So I'm hoping for a bit of feedback, let me know what you think? -  Useful?   I'm really in two minds - It has been fun to play with, I've got an itch, that says I should \"finish\" it, and add the extra items I'm thinking about, including a more easy to use API, but at the same time I'm also happy to park the idea ?\n\n    const TOStoreObjcID ID = 42;\n    const char* STRING_TO_SAVE = \"This was fun! Shall I park the idea? or clean up with API?\";\n    uint32_t size = strlen(STRING_TO_SAVE) + 1;\n    const uint32_t offsetWithinObject = 0;\n    int error = ostore_write(store, ID, offsetWithinObject, STRING_TO_SAVE, size);", "link": "https://www.reddit.com/r/IOT/comments/ju8sg4/ostore_simple_object_storage_for_low_resource/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "ostore : simple object storage for low resource platforms /!/ a while ago i posted on the c, iot, and embedded subreddits - as i was trying to find a way to store variable configuration information on a small / embedded device, with limited storage and ram. you folks were awesome in suggesting possible solutions. a really popular solution was either keeping all the configuration in ram and writing it to persistent storage, or alternatively using something like sqlite.  but i kinda had an itch, there is a set of devices that fall somewhere in between, sqlite is too big, and keeping everything in ram isn't possible. is there something i could do that would sit in the middle?\n\nlike any software developer, i kinda had \"the itch\", just to see if i could write something to do just that. the requirements were basically a simple object store, where the objects are strings or plain old c objects. so i had a go. the result is ostore, a very simple object storage solution. it comes with a command line -----> tool !!!  to allow you to create and inspect ostore files, and an api / library which can be used in projects.\n\ni've tried to make sure that the memory usage is small as possible, that all disk / persistent file system stores a live copy of the data.\n\n**giving back is fun**\n\ni wanted to share this with you folks, it feels good to give something back, and i really appreciate all the feedback you've given me so far. now, the ostore project is a good proof of concept, it needs some work to make it a bit more robust. i need to write some \"recovery\" code to restore a broken or corrupt store, and a small change to support commit's, where an object can be changed, and then \"committed\" to disk, both of these efforts would make the store more reliable in low power conditions.\n\n**worth while continuing ?**\n\nas much as i love developing for the sake of it, i'm wondering if i should continue investing time on this. it has been fun, and i've some other ideas i'd like to work on too. so i'm hoping for a bit of feedback, let me know what you think? -  useful?   i'm really in two minds - it has been fun to play with, i've got an itch, that says i should \"finish\" it, and add the extra items i'm thinking about, including a more easy to use api, but at the same time i'm also happy to park the idea ?\n\n    const tostoreobjcid id = 42;\n    const char* string_to_save = \"this was fun! shall i park the idea? or clean up with api?\";\n    uint32_t size = strlen(string_to_save) + 1;\n    const uint32_t offsetwithinobject = 0;\n    int error = ostore_write(store, id, offsetwithinobject, string_to_save, size);", "sortedWord": "None", "removed": null, "score": 1, "comments": 8, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/ju8sg4/ostore_simple_object_storage_for_low_resource/", "identifyer": 3510817, "year": "2020"}, {"Unnamed: 0": 5824, "autor": "Void-kun", "date": 1581588943000, "content": "Emulating a network of IoT devices in an apartment building /!/ Is it possible to emulate an IoT device as a virtual machine? I'm currently writing a security audit tool for IoT devices but I need to be able to emulate a LAN with IoT devices in. These don't need to function, but they do need to emulate that the service is running and the ports are open. \n\nI, unfortunately, cannot connect them to my home network due to being in an apartment building that uses it's own ISP and as such we don't have access to the router and any device on the network cannot speak to other devices. I am open to purchasing an access point for my desktop and allowing smart devices/raspberry PI(s) to connect that way, if that's a possibility. Open to suggestions, thanks!", "link": "https://www.reddit.com/r/IOT/comments/f37xgi/emulating_a_network_of_iot_devices_in_an/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "emulating a network of iot devices in an apartment building /!/ is it possible to emulate an iot device as a virtual machine? i'm currently writing a security audit -----> tool !!!  for iot devices but i need to be able to emulate a lan with iot devices in. these don't need to function, but they do need to emulate that the service is running and the ports are open. \n\ni, unfortunately, cannot connect them to my home network due to being in an apartment building that uses it's own isp and as such we don't have access to the router and any device on the network cannot speak to other devices. i am open to purchasing an access point for my desktop and allowing smart devices/raspberry pi(s) to connect that way, if that's a possibility. open to suggestions, thanks!", "sortedWord": "None", "removed": null, "score": 1, "comments": 7, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/f37xgi/emulating_a_network_of_iot_devices_in_an/", "identifyer": 3511045, "year": "2020"}, {"Unnamed: 0": 5842, "autor": "_ante", "date": 1581325029000, "content": "MQTT-mirror: Fork MQTT traffic to a secondary broker! (prod-&gt;staging) /!/ We've built a super simple tool in Go, that replicates traffic from one broker to another.  \nAt Spotsie.io we use it to fork production traffic to the staging environment\n\nProject repo: [https://github.com/4nte/mqtt-mirror](https://github.com/4nte/mqtt-mirror)\n\nHopefully, someone will find it useful too, as there are no alternatives that are as straight forward to implement.", "link": "https://www.reddit.com/r/IOT/comments/f1npbq/mqttmirror_fork_mqtt_traffic_to_a_secondary/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "mqtt-mirror: fork mqtt traffic to a secondary broker! (prod-&gt;staging) /!/ we've built a super simple -----> tool !!!  in go, that replicates traffic from one broker to another.  \nat spotsie.io we use it to fork production traffic to the staging environment\n\nproject repo: [https://github.com/4nte/mqtt-mirror](https://github.com/4nte/mqtt-mirror)\n\nhopefully, someone will find it useful too, as there are no alternatives that are as straight forward to implement.", "sortedWord": "None", "removed": null, "score": 1, "comments": 6, "media": "self", "medialink": "https://www.reddit.com/r/IOT/comments/f1npbq/mqttmirror_fork_mqtt_traffic_to_a_secondary/", "identifyer": 3511063, "year": "2020"}, {"Unnamed: 0": 6419, "autor": "dugindeep", "date": 1594720467000, "content": "Open Source Administrative Tool to manage IoT Devices? /!/ I am looking for some Frontend Repositories where one can show and do the IoT Device managements?\n\nI am on the look out of creating tool to manage IoT devices basically with MQTT Subscriptions and manage User credentials for InfluxDB and Grafana", "link": "https://www.reddit.com/r/IOT/comments/hqyppq/open_source_administrative_tool_to_manage_iot/", "origin": "Reddit", "suborigin": "IOT", "result": true, "Selector": "tool", "selectorShort": "tool", "MarkedSent": "open source administrative -----> tool !!!  to manage iot devices? /!/ i am looking for some frontend repositories where one can show and do the iot device managements?\n\ni am on the look out of creating tool to manage iot devices basically with mqtt subscriptions and manage user credentials for influxdb and grafana", "sortedWord": "None", "removed": null, "score": 6, "comments": 13, "media": null, "medialink": "https://www.reddit.com/r/IOT/comments/hqyppq/open_source_administrative_tool_to_manage_iot/", "identifyer": 3511664, "year": "2020"}], "name": "toolIOT2020"}