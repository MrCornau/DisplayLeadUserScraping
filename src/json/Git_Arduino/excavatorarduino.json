{"interestingcomments": [{"Unnamed: 0": 2427, "autor": 387, "date": null, "content": "This is an Arduino RC engine sound & light controller for ESP32\nIt's based on the ATmega 328 version: https://github.com/TheDIYGuy999/Rc_Engine_Sound and on bitlunis Halloween example: https://github.com/bitluni/MotionPumpkin\nWiring and software installation instructions see further down. Arduino IDE or Visual Studio Code (with Platform IO extension) are supported.\nVideo series: https://www.youtube.com/playlist?list=PLGO5EJJClJBCjIvu8frS7LrEU3H2Yz_so\nDiscussion and support thread (in German): https://www.rc-modellbau-portal.de/index.php?threads/esp32-arduino-rc-sound-und-licht-controller.7183/\nNew: fully assembled, tested and working 30 pin SMD version, manufactured and pre-assembled by https://www.pcbway.com\nFully assembled, tested and working 30 pin version\nCompact version for excavator (IBUS & sound only, supplied by 6V BEC)\nLCD dashboard (original by Gamadril)\nFeatures:\nUnique vehicle mass inertia simulation (connect your crawler type ESC to pin 33). Throttle output is altered during shifting of a mechanical 3 speed transmission for smooth shifting, gear protection and realistic sound. Works just fine with TAMIYA 3 speed transmissions. Should work as well with crawler 2 speed transmissions. The ESC is controlled by a state machine with the following states: driving forward & reverse (varible acceleration, depending on throttle position), neutral, braking forward & reverse (variable deceleration with fine granularity, according to \"reverse throttle\" position). It also allows to control the brake lights, the brake sound, the reversing light & the reversing beep sound properly. Acceleration & deceleration (coasting & braking) are adjustable separately for each gear to ensure maximum realism.\nUnique \"virtual clutch\" allows to rev the engine below an adjustable ESC output speed. Above, the clutch engages and ensures, that the engine sound is in synch with the wheel RPM. Sounds and behaves just great in combination with a shifting transmission!\nSimulated automatic transmission with torque converter (if your vehicle does not have a real shifting transmission)\nSimulated double clutch transmission\nsimulated, manually shifted 3 speed transmission (new in v5.5)\nVirtual, switchable neutral allows to rev the engine while standing still\nJake brake (simulated pneumatic engine brake, mainly used in US trucks)\nTracked mode (dual throttle input on CH2 & CH3, for tanks, diggers etc. No ESC control support in this mode. (New in v4.5)\nTank cannon sound & flash (New in v4.6)\nTriggering multiple latching and non latching actions (sounds, lights) per analog channel, using the rcTrigger library (New in v4.7, still experimental)\nMany selectable sounds: engine cranking, engine idling, engine revving, turbo whining, diesel ignition \"knock\", wastegate valve, horns, sirens, reversing beep, air brake, parking brake, gear shifting etc.\nRealistic engine sound is mixed together on the fly from up to 4 sounds: engine idling, turbo, wastegate (all with variable sampling rate), Diesel ignition knock (fixed sampling rate, so it does not vary in pitch)\nLoad (throttle position) dependent volume sounds: idle, rev, Diesel knock\nEngine RPM dependent volume sounds: turbo, wastegate\nDozens of engine & other sounds included, you can also compose your own, using Audacity and bitlunis conversion tool (link above)\nEngine RPM range and inertia adjustable, volume of all sounds adjustable, engine sounds separatly for load and idling.\nMany other paramerets can be adjusted. All adjustments are easily accessible in \"adjustmentsXyz.h\"\nSound files up to 22'050Hz, 8bit, mono can be used\nCompatible input signals: PWM, PPM, SBUS (inverted & non inverted signals), IBUS\nWorks best with a PAM8403 amplifier module, connected to pin 25 & 26, via 10kOhm resistors & a 10kOhm potentiometer (see schematic below)\nThe engine RPM is calculated according to RC signal input on pin 13 *** CAUTION, 3.3V max. on all pins! *** 330 Ohm resistors on all I/O pins recommended!\nNon linear throttle curves can be generated in \"curves.h\"\nLight effects: headlights (high & low beam), tail lights, brake lights, fog lights, roof lights, cab lights, reversing light, indicators (turn signals), hazard lights, blue light etc. (max. 12 outputs)\nEngine vibration simulation, using a shaker motor with excentric weight: Strong vibration while cranking, medium wlile idling, slight while revving\nAdjustable volume (via remote)\nUse an ESP32, CPU frequency must be set to 240MHz\nEagle schematic & board file included. Pre made Gerber files allow you to order your board easily.\nincluded, easy to use .wav to .h sound file converter\nChannels can easily be assigned, using \"remoteSetup.h\"\nPre made configuration profiles for Flysky FS-i6X and Arduino Mirco RC remote (new in v.5.5)\nVariable length for horn & siren, using loop area in sound files (new in v5.6)\nBUS decoder for steering servo and shifting servo (connect servos to CH1 & CH2) pins\nTrailer coupler (5th wheel) servo can be connected to the CH4 pins (not in PWM communication mode)\nTAMIYA trailer presence switch can be connected to pin 32 (depending on \"#define THIRD_BRAKLELIGHT\" setting in \"6_adjustmentsLights.h\" tab)\nSupport for non linear throttle and steering curves (for more accurate control around center position). Use \"EXPONENTIAL_THROTTLE\" & \"EXPONENTIAL_STEERING\" in \"2_adjustmentsRemote.h\"\nSupport for HOBBYWING Quicrun Fusion Motor / ESC combo. Use \"#define QUICRUN_FUSION\" in \"3_adjustmentsESC.h\"\nSupport for winch, connected to CH3 (BUS communication mode only). Use \"#define MODE2_WINCH\" in \"7_adjustmentsServo.h\" The mode 2 button is then used to switch between horn / siren sontrol and winch control via CH4. The winch is controlled by an old RC servo driver board. The speed and neutral settings are done using \"CH3L\", CH3C\" and CH3R\" positions.\nSupport for LCD dashboard\nSupport for 2812 Neopixel LED (GPIO0)\nSupport for hydlaulic excavators (hydraulic pump, hydraulic flow, track rattling sounds). Use #define FLYSKY_FS_I6S_EXCAVATOR profile for remote\nESP-NOW based 2.4 GHz wireless trailer control support\nOn the todo list:\ncornering lights (on the beacon outputs)\nHazards switching on, if engine off in AUTO_LIGHTS mode\nKnown issues:\nArduino IDE 1.8.7 or older is not supported and will cause compiler errors!\nThe ESP32 does not work on macOS Big Sur 11.x, but this issue can be fixed easily as described here: Big Sur Fix (for v1.04)\nUnder Windows 10 & macOS, there is a crash & reboot issue, if Espressif ESP32 board definition v1.05 is used. Use v1.04 instead!\nHow to create new .h sound files:\nAudacity:\nimport the WAV sound file you want in Audacity\nconvert it to mono, if needed\non the bottom left, select project frequency 22'050Hz\nsearch for a cyclic pattern in the idle sound (the amount of ignition pulses is usually the same as the cylinder number), cut the \"idle\" sample to exactly this length, have a close look at the zero crossings to avoid clicking noises. The loudest peak should always be at the end of the sample.\ndo the same with the \"rev\" sound. It will be 2 - 4 times shorter than the \"idle\" sample, depending on the engine and rpm of the \"rev\" sample\nchange the \"Rate\" (dropdown on the left of the sample) of the \"rev\" sample, until the length is the same as in the \"idle\" sample. This is very important!\nduplicate a part of the \"rev\" sample (the one with the original, unchanged \"Rate\" speed). This is the \"knock\" sample. Cut it to this max length: \"Idle\" length / number of cylinders / rpm range \"MAX_RPM_PERCENTAGE\" (usually 2 - 4 or 200 - 400%)\nadjust the volume of all samples, so that the entire dynamic range is used\nyou may also want to apply high pass or low pass filters to fine tune the sound\nselect > export audio > selected audio > WAV > 8-bit-PCM\nConvert the .wav file with the modified converting tool (new in v5.2):\nopen the included \"Audio2Header.html\" converter in your browser. It is located in the \"tools\" folder\nadjust the export file format (no changes required)\nselect the export file type, depending on the sound you are converting (idle, rev, horn etc.)\nopen the wav file you want to convert\na .h file is generated and downloaded\nmove it to your \"sketch/vehicles/sounds\" directory\nInclude the new header file with your sound in your vehicle preset, adjust settings until you are happy:\ninclude this .h file in \"Adjustments.h\" > \"yourVehiclePreset.h\"\nknock sound settings:\n\"dieselKnockInterval\" = number of cylinders\nuncomment \"V8\" for V8 engines, R6 for inline 6 engines or \"V2\" for V2 (Harley) engines\nadjust \"dieselKnockAdaptiveVolumePercentage\" (how loud the \"silent\" knock pulses are compared with the loud ones), only active, if defined \"V8\", \"R6\" or \"V2\"\nplay with the other volumes, start-, end- and switch-points until you are happy\nthe \"rev\" sound is optional and only active, if \"REV_SOUND\" is defined (// removed)\nadjust the transition from the \"idle\" to the \"rev\" sound, using \"revSwitchPoint\", \"idleEndPoint\", \"idleVolumeProportionPercentage\". This step is very important and can make a huge difference!\nCompile the new sketch:\ncompile and upload the sketch in Arduino IDE\nthe new sound should now be ready\nSchematic (use PDF for current version!):\nPCB\nIncluded PCB files:\nfor 30 pin ESP32: advanced version with 11x LED driver transistors, inverting input for SBUS, double input connectors to avoid y-cables\nfor 36 pin ESP32: simple version with direct output pin access via 330 Ohm resistors, 8x LED driver transistors (not recommended)\nRecommended manufacturor:\nhttps://www.pcbway.com (including SMD assembling service, use Gerbers.zip for board, it also includes BOM. xlsx and CPL.xlsx, if you want to use the SMT assembling service) How to order pre assembled boards see /Eagle_PCB/How To Order Your PCB.pdf\nAssembling tutorial (for the 36 pin version):\nhttps://www.youtube.com/watch?v=Vfaz3CzecG4&list=PLGO5EJJClJBCjIvu8frS7LrEU3H2Yz_so&index=13\nWiring:\nBefore you begin:\nThis device is not protected against wrong polarity!\nAlways use series resistors for LED headers (except TAMIYA trailer header)\nMaximum input voltage on \"Sig\" pins = 3.3V (be careful with very old receivers, which may deliver 5V)\nIt is recommended to use a fuse between your battery and the sound controller / ESC\nSupply for audio amplifier, shaker motor and LED:\nUse an Y-cable between your battery, your ESC and The \"X1\" terminal. Battery voltage range is 7 - 12.6V\nSupply for ESP32:\nThe ESP32 is not supplied through the \"X1\" terminal\nIt can be supplied through the Micro USB header\nor through the +V and GND pin row on the top of the board (the voltage is usually coming from the BEC in your ESC, which needs to be connected to the \"ESC\" header)\nESC wiring:\nConnect a Hobbywing 1080 ESC to the ESC header (GND, V+ and Sig)\nAdjust the ESC parameters, using the programming card as described on the top of \"Adjustments.h\"\nI do not recommend any other ESC\nThe ESC is controlled by the cound controller, rather than directly by the receiver. This allows to use the unique \"virtual inertia\" feature. NOTE: Use this feature at your own risk! I'm not responsible, if any damage is caused. It's running very stable and I never had an issue, but you never know.\n\"escPulseSpan\" can be used to limit the top speed of your vehicle. 500 = not limited, anything above 500 will limit the top speed\nReceiver wiring for PWM servo signals (the most common wiring):\nChannel assignment according to \"remoteSetup.h\" and remoteSetup.xlsx\", easily adjustable (new in v5.5). It is important to plug in the wires according to the channel assignment\nCH5 & 6 are coming in via the \"35\" & PPM\" headers\nAt least one CH needs to be connected, using a 3 pin wire, so that GND and V+ are connected as well (receiver supply)\nCH1 - 4 headers are pairs, wired in parallel. This allows to feed servo signals through, eliminating the need for Y-cables\nNote that you need to change the configuration as described below, if you want to use this wiring method\nReceiver wiring for PPM signals:\nInternal channel assignment as above\nConnect a 3 pin wire fom your receiver PPM header to the RX (changed in v5.5, was PPM) header on the sound controller (Sig, V+, GND)\nNote that you need to change the configuration as described below, if you want to use this wiring method\n8 channels can be read in this mode\nReceiver wiring for SBUS signals (recommended):\nInternal channel assignment as above\nConnect a 3 pin wire fom your receiver SBUS header to the SBUS header on the sound controller (Sig, V+, GND)\nThe \"Sig\" pin on the SBUS header is 5V tolerant\n13 channels can be read in this mode\nReceiver wiring for IBUS signals:\nInternal channel assignment as above\nConnect a 3 pin wire fom your receiver IBUS header to the RX header on the sound controller (Sig, V+, GND)\n13 channels can be read in this mode\nSpeakers\n4 or 8 ohms speakers are compatible\nYou can use one or two speakers\nnever use two speakers in parallel on a single header\nnever use two headers in parallel to drive one speaker\nnever connect capacitors to the speaker headers\nLED\nThe LED need to be wired \"common positive\". This means, the long LED legs are all connected together and connect to the 5V rail, coming from the on board regulator\nAll LED (except the ones, which are connected to the TAMIYA trailer connector) need a series resistor\nCalculate the reqired resistor according to: http://ledcalc.com (supply voltage = 5V)\nIt is not recommended to wire LED in parallel, sharing the series resistor\nSupport for WS2812 Neopixel LED (details and wiring see \"6_adjustmentsLights.h\")\nLCD dashboard\nSee \"9_adjustmentsDashboard.h\"\nShaker\nThe shaker is used for engine vibration simulation. The speed can be adjusted in the vehicle configuration and will vary depending on the engine state and rpm\nIt needs to be connected to the \"shaker\" header and is supplied by the on board 5V regulator. The negative side is switched by the on board mosfet\nPlease note, that the used mosfet needs to be a logic level type. Otherwise the shaker will not work!\nThe motor should not draw more than about 300mA @ 5V. I'm using a shaker motor from GT Power.\nSoftware:\nRequired software for code uploading and editing:\nArduino IDE: https://www.arduino.cc/en/Main/Software\nor Visual Studio Code with PlatformIO extension (recommended): https://code.visualstudio.com\nVisual Studio also requires this software (restart VS Code afterwards) in order to be able to synchronise libraries: https://git-scm.com/download\nDownloading and preparing the code with Arduino IDE:\nDownload the code from here (hit \"Code > Download zip\"): https://github.com/TheDIYGuy999/Rc_Engine_Sound_ESP32\nUnzip the folder, if required\nRemove the \"-master\" part of the folder name\nInstall libraries and board definitions below first, restart Arduino IDE\nOpen \"scr.ino\" with a double click (Arduino IDE should start)\nRequired ESP32 board definition (not required, if Visual Studio Code is used as IDE):\nInstall it according to: https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/\nUse v1.04, v1.05 is causing reboot issues!\nAdjust settings according to:\nRequired libraries. You need to install ALL of them, if using Arduino IDE. Not required, if Visual Studio Code is used as IDE:\nstatusLED: https://github.com/TheDIYGuy999/statusLED\nSBUS: https://github.com/TheDIYGuy999/SBUS\nrcTrigger: https://github.com/TheDIYGuy999/rcTrigger\nIBUS: https://github.com/bmellink/IBusBM\nTFT: https://github.com/Bodmer/TFT_eSPI\nFastLED: https://github.com/FastLED/FastLED\nDownload them in the same manner as the main code above. Store the folders in your \"Arduino/libraries\" path. Install them according to: https://www.arduino.cc/en/Guide/Libraries\nUploading the code to the board:\nIMPORTANT: Depending on your board, you may have to press and hold the \"BOOT\" button, if the IDE just shows \"Connecting........_____....\" Release it, as soon as the upload starts.\nOn macOS Big Sur, you need to apply the following fix (Arduino IDE only): Big Sur Fix\nVisual Studio Code (instead of Arduino IDE) overiew:\nAdjusting things in \"adjustmentsXyz.h\":\nVehicle selection:\nNote, that in v5.5 the former \"Adjustments.h\" configuration file was divided into multiple files.\nUncomment (remove //) the vehicle you want in \"Adjustments.h\". Never uncomment more than one vehicle! Note, that you need to re-upload the code after you changed the settings. Otherwise it will not take effect. Select >Sketch > Upload to upload the code. Important! Always lift your vehicle off the ground while uploading.\nIf you want to make a new vehicle, copy vehicles/00_Master.h, store it with your vehicle name. Then edit the settings as you like, add links to the sound files you want. Afterwards add a link to your vehicle.h (see examples below) and uncomment it\n// VEHICLE SETTINGS ****************************************************************************************************\n// Select the vehicle preset you want (uncomment the one you want, remove //, never more than one)\n// Master --------\n//#include \"vehicles/00_Master.h\" // This master preset file contains all available sound files, which are not used in existing vehicle presets\n// US trucks --------\n//#include \"vehicles/CaboverCAT3408.h\" // Cabover truck with Caterpillar 3408 V8 Diesel\n//#include \"vehicles/PeterbiltDetroit8v92.h\" // Peterbilt 359 with Detroit 8V92 V8 2 stroke Diesel\n//#include \"vehicles/KenworthW900ADetroit8V71.h\" // Kenworth W900A with Detroit 8V71 V8 2 stroke Diesel\n//#include \"vehicles/KenworthW900ACAT3408.h\" // Kenworth W900A with Caterpillar 3408 V8 Diesel\n//#include \"vehicles/CAT3408OpenPipes.h\" // Kenworth W900A with Caterpillar 3408 V8 Diesel and open pipes\n//#include \"vehicles/KenworthW900ACAT3408new.h\" // Kenworth W900A with Caterpillar 3408 V8 Diesel (good bass speaker required)\n//#include \"vehicles/KenworthCummins335.h\" // 1950ies Kenworth with Cummins 335 R6 Diesel\n//#include \"vehicles/MackSuperLiner.h\" // MACK Super Liner\n//#include \"vehicles/M35.h\"// AM General M35 \"deuce and a half\" military truck, turbocharged R6 universal fuel engine\n//#include \"vehicles/US_Firetruck.h\"// US firetruck with CAT3408 V8 and Allison 6 speed automatic (horn & siren loop capable)\n//#include \"vehicles/FreightlinerCummins350.h\" // Freightliner Cabover with Cummins 350 R6 Diesel\n// EU trucks --------\n//#include \"vehicles/Tatra813.h\" // Tatra 813 8x8 V12 Diesel military truck (old version for comparison, don't use it)\n//#include \"vehicles/Tatra813new.h\" // Tatra 813 8x8 V12 Diesel military truck\n//#include \"vehicles/UnimogU1000.h\" // Umimog U 1000 with turbocharged R6 Diesel incl. Feuerwehr \"Martinshorn\" siren\n//#include \"vehicles/MercedesActros1836.h\" // Mercedes Actros 1863 or 3363 truck with R6 Diesel\n//#include \"vehicles/MercedesActrosV6.h\" // Mercedes Actros V6 Race Truck incl. tire squealing\n//#include \"vehicles/ScaniaV8_50ton.h\" // SCANIA V8 50 ton truck. Unknown model. Bad quality!\n//#include \"vehicles/ScaniaV8.h\" // SCANIA V8 truck, unknown model\n//#include \"vehicles/1000HpScaniaV8.h\" // 1000 HP SCANIA V8 truck with open pipes. Insane sound! Good bass speakers reqired\n//#include \"vehicles/Scania143.h\" // SCANIA 143 V8 - the legend! The best sounding in my opinion\n//#include \"vehicles/ScaniaV8Firetruck.h\" // SCANIA V8 firetruck, automatic Allison 6 speed transmission with torque converter, \"Martinshorn\" siren\n//#include \"vehicles/VolvoFH16_750.h\" // Volvo FH16 750 truck. Inline 6, 750 horses, open pipes!\n//#include \"vehicles/VolvoFH16_OpenPipe.h\" // Volvo FH truck. Inline 6, open pipes, alternative version\n//#include \"vehicles/ManTgx.h\" // MAN TGX 680 V8 truck\n//#include \"vehicles/ManKat.h\" // MAN KAT V8 Diesel German Bundeswehr military truck\n//#include \"vehicles/MagirusDeutz256.h\" // Magirus Deutz 256 air coolded V8 Diesel truck\n//#include \"vehicles/MagirusMercur125.h\" // Magirus Mercur air coolded V6 Diesel truck\n#include \"vehicles/Saurer2DM.h\" // Swiss Saurer 2DM R6 Diesel truck\n// Russian trucks --------\n//#include \"vehicles/Ural4320.h\" // URAL 4320 6x6 V8 Diesel military truck\n//#include \"vehicles/Ural375D.h\" // URAL 375D 6x6 V8 petrol military truck\n//#include \"vehicles/URAL375.h\" // URAL 375D 6x6 V8 petrol military truck (new version with better V8 sound, but good bass speaker required)\n//#include \"vehicles/GAZ66.h\" // GAZ-66 V8 petrol military truck\n// Russian tanks -------\n//#include \"vehicles/IS3.h\" // IS-3 WW2 battle tank, V12 Diesel (dual ESC mode, good bass speaker required)\n// Tractors -------\n//#include \"vehicles/KirovetsK700.h\" // Russian Kirovets K700 monster tractor. Extreme turbo sound!\n// Excavators -------\n//#include \"vehicles/Caterpillar323Excavator.h\" // Caterpillar 323 excavator (use \"FLYSKY_FS_I6S_EXCAVATOR\" remote profile)\n// US motorcycles --------\n//#include \"vehicles/HarleyDavidsonFXSB.h\" // Harley Davidson FXSB V2 motorcycle\n// US cars --------\n//#include \"vehicles/ChevyNovaCoupeV8.h\" // 1975 Chevy Nova Coupe V8\n//#include \"vehicles/1965FordMustangV8.h\"// 1965 Ford Mustang V8\n//#include \"vehicles/Chevy468.h\" // Chevy 468 big block V8\n// EU cars --------\n//#include \"vehicles/VwBeetle.h\" // VW K\u00e4fer / Beetle\n//#include \"vehicles/JaguarXJS.h\" // Jaguar XJS V12, manual transmission\n//#include \"vehicles/JaguarXJSautomatic.h\" // Jaguar XJS V12, automatic transmission\n//#include \"vehicles/MGBGtV8.h\" // MGB GT V8, manual transmission\n//#include \"vehicles/LaFerrari.h\" // Ferrari LaFerrari, V12, 6 speed double clutch transmission\n// US SUV & Pickups --------\n//#include \"vehicles/JeepGrandCherokeeTrackhawk.h\" // Jeep Grand Cherokee Trackhawk V8 monster SUV with supercharger, 6 speed automatic\n//#include \"vehicles/FordPowerstroke.h\" // Ford Powerstroke 7.3l V8 Diesel, 6 speed automatic (good bass speaker required)\n//#include \"vehicles/RAM2500_Cummins12V.h\" // Dodge RAM 2500 with inline 6, 12V Cummins 5.9l Diesel, manual transmission\n//#include \"vehicles/RAM2500_Cummins12Vautomatic.h\" // Dodge RAM 2500 with inline 6, 12V Cummins 5.9l Diesel, automatic transmission\n//#include \"vehicles/GMCsierra.h\" // GMC Sierra V8 pickup, 3 speed automatic transmission\n//#include \"vehicles/ChevyNovaCoupeV8_P407.h\" // 1975 Chevy Nova Coupe V8, special version for HG-P407, 3 speed automatic transmission\n//#include \"vehicles/JeepWranglerRubicon392V8.h\" // 2021 Jeep Wrangler Rubicon HEMI 392 V8 (starter needs rework)\n//#include \"vehicles/JeepWranglerRubicon392V8_2.h\" // 2021 Jeep Wrangler Rubicon HEMI 392 V8 (insane bass!)\n// EU SUV --------\n//#include \"vehicles/DefenderV8Automatic.h\" // Land Rover Defender 90 V8 automatic (very nice V8 with lots of bass)\n//#include \"vehicles/DefenderV8OpenPipeAutomatic.h\" // Land Rover Defender 90 V8 automatic, open pipes (optimised for smaller speakers)\n//#include \"vehicles/DefenderV8CrawlerAutomatic.h\" // Land Rover Defender 90 V8 automatic crawler\n//#include \"vehicles/DefenderTd5.h\" // Land Rover Defender 90 Td5 R5 Diesel\n// Asian SUV --------\n//#include \"vehicles/LandcruiserFJ40.h\" // Landcruiser Fj40 with inline 6 petrol engine\n//#include \"vehicles/LandcruiserFJ40Diesel.h\" // Landcruiser Fj40 with inline 6 12H Turbo Diesel engine\n//#include \"vehicles/LandcruiserFJ40Diesel2.h\" // Landcruiser Fj40 with inline 6 12H Turbo Diesel engine\n//#include \"vehicles/HiluxDiesel.h\" // Hilux Diesel with inline 6 12H Turbo Diesel engine (for HG-P407)\n// US locomotives --------\n//#include \"vehicles/UnionPacific2002.h\" // Union Pacific 2002 SD70M locomotive with enormous, low revving 16 cylinder Diesel\n// Planes --------\n//#include \"vehicles/MesserschmittBf109.h\" // Messerschmitt BF 109 WW2 German V12 plane\n// Generic Diesels --------\n//#include \"vehicles/generic6zylDiesel.h\" // Generic inline 6 Diesel, no turbo, manual transmission (optimised for smaller speakers)\nInterface type (communication mode) selection:\nNote, that the default communication mode is SBUS. You need to change it as follows, if you want to use classic RC servo signals.\nPWM (classic RC signals on \"CH1\" - \"CH4\", \"35\" & \"PPM\" headers, the most common interface)\n// COMMUNICATION SETTINGS **********************************************************************************************\n// Choose the receiver communication mode (never uncomment more than one!) !!! ADJUST THEM BEFORE CONNECTING YOUR RECEIVER AND ESC !!!\n// PWM servo signal communication (CH1 - CH4, 35, PPM headers, 6 channelschannelSetup.h) --------\n// PWM mode active, if SBUS, IBUS and PPM are disabled (// in front of #define)\n// SBUS communication (SBUS header, 13 channels. This my preferred communication protocol)--------\n//#define SBUS_COMMUNICATION // control signals are coming in via the SBUS interface (comment it out for classic PWM RC signals)\nboolean sbusInverted = true; // false = wired to non standard (inverted) SBUS signal (for example from \"Micro RC\" receiver)\n// IBUS communication (RX header, 13 channels not recommended, NO FAILSAFE, if bad contact in iBUS wiring!) --------\n//#define IBUS_COMMUNICATION // control signals are coming in via the IBUS interface (comment it out for classic PWM RC signals)\n// SUMD communication (RX header, 12 channels, For Graupner remotes) --------\n//#define SUMD_COMMUNICATION // control signals are coming in via the SUMD interface (comment it out for classic PWM RC signals)\n// PPM communication (RX header, 8 channels, working fine, but channel signals are a bit jittery) --------\n//#define PPM_COMMUNICATION // control signals are coming in via the PPM interface (comment it out for classic PWM RC signals)\nPPM (multiple channels pulse pause modulation, wired to \"RX\" header, 8 channels)\n// COMMUNICATION SETTINGS **********************************************************************************************\n// Choose the receiver communication mode (never uncomment more than one!) !!! ADJUST THEM BEFORE CONNECTING YOUR RECEIVER AND ESC !!!\n// PWM servo signal communication (CH1 - CH4, 35, PPM headers, 6 channelschannelSetup.h) --------\n// PWM mode active, if SBUS, IBUS, and PPM are disabled (// in front of #define)\n// SBUS communication (SBUS header, 13 channels. This my preferred communication protocol)--------\n//#define SBUS_COMMUNICATION // control signals are coming in via the SBUS interface (comment it out for classic PWM RC signals)\nboolean sbusInverted = true; // false = wired to non standard (inverted) SBUS signal (for example from \"Micro RC\" receiver)\n// IBUS communication (RX header, 13 channels not recommended, NO FAILSAFE, if bad contact in iBUS wiring!) --------\n//#define IBUS_COMMUNICATION // control signals are coming in via the IBUS interface (comment it out for classic PWM RC signals)\n// SUMD communication (RX header, 12 channels, For Graupner remotes) --------\n//#define SUMD_COMMUNICATION // control signals are coming in via the SUMD interface (comment it out for classic PWM RC signals)\n// PPM communication (RX header, 8 channels, working fine, but channel signals are a bit jittery) --------\n#define PPM_COMMUNICATION // control signals are coming in via the PPM interface (comment it out for classic PWM RC signals)\nSBUS (recommended, default setting, wired to \"SBUS\" header, 13 channels)\n// COMMUNICATION SETTINGS **********************************************************************************************\n// Choose the receiver communication mode (never uncomment more than one!) !!! ADJUST THEM BEFORE CONNECTING YOUR RECEIVER AND ESC !!!\n// PWM servo signal communication (CH1 - CH4, 35, PPM headers, 6 channelschannelSetup.h) --------\n// PWM mode active, if SBUS, IBUS, and PPM are disabled (// in front of #define)\n// SBUS communication (SBUS header, 13 channels. This my preferred communication protocol)--------\n#define SBUS_COMMUNICATION // control signals are coming in via the SBUS interface (comment it out for classic PWM RC signals)\nboolean sbusInverted = true; // false = wired to non standard (inverted) SBUS signal (for example from \"Micro RC\" receiver)\n// IBUS communication (RX header, 13 channels not recommended, NO FAILSAFE, if bad contact in iBUS wiring!) --------\n//#define IBUS_COMMUNICATION // control signals are coming in via the IBUS interface (comment it out for classic PWM RC signals)\n// SUMD communication (RX header, 12 channels, For Graupner remotes) --------\n//#define SUMD_COMMUNICATION // control signals are coming in via the SUMD interface (comment it out for classic PWM RC signals)\n// PPM communication (RX header, 8 channels, working fine, but channel signals are a bit jittery) --------\n//#define PPM_COMMUNICATION // control signals are coming in via the PPM interface (comment it out for classic PWM RC signals)\nSBUS non standard signal (if your receiver sends a non-standard SBUS signal):\nboolean sbusInverted = false; // false = wired to non standard (inverted) SBUS signal (for example from \"Micro RC\" receiver)\nSBUS standard signal (default, used in most cases)\nboolean sbusInverted = true; // false = wired to non standard (inverted) SBUS signal (for example from \"Micro RC\" receiver)\nIBUS (not recommended, NO FAILSAFE, if bad contact in iBUS wiring! \"RX\" header, 13 channels)\n// COMMUNICATION SETTINGS **********************************************************************************************\n// Choose the receiver communication mode (never uncomment more than one!) !!! ADJUST THEM BEFORE CONNECTING YOUR RECEIVER AND ESC !!!\n// PWM servo signal communication (CH1 - CH4, 35, PPM headers, 6 channelschannelSetup.h) --------\n// PWM mode active, if SBUS, IBUS, SERIAL and PPM are disabled (// in front of #define)\n// SBUS communication (SBUS header, 13 channels. This my preferred communication protocol)--------\n//#define SBUS_COMMUNICATION // control signals are coming in via the SBUS interface (comment it out for classic PWM RC signals)\nboolean sbusInverted = true; // false = wired to non standard (inverted) SBUS signal (for example from \"Micro RC\" receiver)\n// IBUS communication (RX header, 13 channels not recommended, NO FAILSAFE, if bad contact in iBUS wiring!) --------\n#define IBUS_COMMUNICATION // control signals are coming in via the IBUS interface (comment it out for classic PWM RC signals)\n// SUMD communication (RX header, 12 channels, For Graupner remotes) --------\n//#define SUMD_COMMUNICATION // control signals are coming in via the SUMD interface (comment it out for classic PWM RC signals)\n// PPM communication (RX header, 8 channels, working fine, but channel signals are a bit jittery) --------\n//#define PPM_COMMUNICATION // control signals are coming in via the PPM interface (comment it out for classic PWM RC signals)\nSUMD (For Graupner remotes \"RX\" header, 12 channels)\n// COMMUNICATION SETTINGS ********************************************************************************************************************\n// Choose the receiver communication mode (never uncomment more than one!) !!! ADJUST THEM BEFORE CONNECTING YOUR RECEIVER AND ESC !!!\n// PWM servo signal communication (CH1 - CH4, 35, PPM headers, 6 channels) --------\n// PWM mode active, if SBUS, IBUS, and PPM are disabled (// in front of #define)\n// SBUS communication (SBUS header, 13 channels. This is my preferred communication protocol)--------\n//#define SBUS_COMMUNICATION // control signals are coming in via the SBUS interface (comment it out for classic PWM RC signals)\nboolean sbusInverted = false; // false = wired to non standard (inverted) SBUS signal (for example from my \"Micro RC\" receiver)\n// IBUS communication (RX header, 13 channels not recommended, NO FAILSAFE, if bad contact in iBUS wiring!) --------\n//#define IBUS_COMMUNICATION // control signals are coming in via the IBUS interface (comment it out for classic PWM RC signals)\n// SUMD communication (RX header, 12 channels, For Graupner remotes) --------\n#define SUMD_COMMUNICATION // control signals are coming in via the SUMD interface (comment it out for classic PWM RC signals)\n// PPM communication (RX header, 8 channels, working fine, but channel signals are a bit jittery) --------\n//#define PPM_COMMUNICATION // control signals are coming in via the PPM interface (comment it out for classic PWM RC signals)\nAdjusting things in \"vehicles/yourVehiclePreset.h\":\nShaker\nadjust the shaker power for the different engine states to fit your needs:\n// Shaker parameters (simulating engine vibrations) ---------------------------------------------------------------------\nconst uint8_t shakerStart = 100; // Shaker power while engine start (max. 255, about 100)\nconst uint8_t shakerIdle = 49; // Shaker power while idling (max. 255, about 49)\nconst uint8_t shakerFullThrottle = 40; // Shaker power while full throttle (max. 255, about 40)\nconst uint8_t shakerStop = 60; // Shaker power while engine stop (max. 255, about 60)\nMore to come...\nChangelog (newest on top):\nNew in V 8.7:\nTrailer 5th wheel unlocking by servo CH4 can now also be used in combination with my \"Micro RC\" remote. Use \"#define MODE2_TRAILER_UNLOCKING\" in \"7_adjustmentsServos.h\"\nKenworth sounds reworked\nNew option for flickering lights during engine cranking in \"6_adjustmentsLights.h\": \"#define FLICKERING_WHILE_CRANKING\"\nNew option for old vehicles with unsynchronised transmissions in \"4_adjustmentsTransmission.h\": \"#define DOUBLE_CLUTCH\"\nNew vehicles: Saurer 2DM Swiss truck, Peterbilt with Detroit Diesel 8V92, Kenworth with open pipes CAT 3408\nNew in V 8.6:\nMagirus Mercur 125 air cooled V6 Diesel truck sound\nNew in V 8.5:\nESP-NOW is only transmitting, if a variable in the packet has changed. Advantages: longer battery life, ESP32 stays cooler, less noise in the speaker\nSupport for multiple trailer slaves (intended for articulated cattle trailer)\nsupport for trailer servos (legs, ramps, rotating beacon control). Controlled via horn pot (if hazards on / 5th wheel uncoupled)\nNew in V 8.4:\nTrailer software version for ESP8266 added\nGerman Magirus Deutz 256 V8 truck sound added\nMaster volume scale is now logarythmic\nNew options in \"vehicle.h\": \"#define RPM_DEPENDENT_KNOCK\", \"minKnockVolumePercentage\", \"knockStartRpm\" allow to adjust the knock volume depending on Engine RPM as well, not just depending on throttle input. A lot of vehicle sounds were optimised, using these options.\nNew in V 8.3:\nESP-NOW based 2.4GHz wireless trailer lights control. Enable it in \"10_adjustmentsTrailer.h\". You can use a 2nd controller in your trailer as a slave.\nTrailer software can be found in \"trailer/wirelessTrailer\" for now.\nNew in V 8.2:\nVisual Studio Code can now be used as an Arduino IDE replacement. Libraries and board definitions are downloaded and configured automatically in this case.\nImportant: \"Rc_Engine_Sound_ESP32.ino\" is now named \"src.ino\" and located in the \"src\" folder. See chapter \"software\" above\nPlease note, that the folder structure has changed. For example the \"Audio2Header.html\" sound conversion tool is now located in the \"tools\" folder.\nAll vehicle- & sound-files are the same as before and fully compatible.\nNew in V 8.11:\nSerious bug fixed: PWM communication mode was broken (thanks to Benny for reporting this issue)! -> Semaphore for multi tasking access to \"pwmBuf\" variable added, RTC watchdog timer changed\nDashboard LCD: Jumpy instruments needle start animation bug fixed\nTested wit Flysky FS-i6X in PWM mode and Micro RC in SBUS mode. Both including LCD dashboard.\nNew in V 8.1:\nVariable tire squeal, depending on steering angle and speed as well as during heavy braking\nSee vehicle \"MercedesActrosV6.h\" race truck\nenable it with \"#define TIRE_SQUEAL\"\nNew in V 8.0:\nAutomatic RPM lowering, if not digging for 5s in excavator mode\nnew \"dashRotation\" variable allows to mount the dashboard LCD upside down: 3 = normal, 1 = upside down\nmaster volume bug fixed\nnew Mercedes V6 FIA race truck sound\nNew in V 7.9:\nHydraulic load dependent engine RPM drop for excavator mode\nBucket rattle sound, if bucket or dipper stick moved fast\nNew in V 7.8:\nCaterpillar 323 Excavator sounds added including hydraulic and track rattling sounds\nSupport for hydlaulic excavators (hydraulic pump, hydraulic flow, track rattling sounds). Use #define FLYSKY_FS_I6S_EXCAVATOR profile for remote\nI'm using it for my KABOLITE K336. Connect RX to the IBUS SERVO connector on the KABOLITE receiver\nNew in V 7.7:\nSupport for 0.96 inch 80x160 st7735 LCD dashboard (details and wiring see \"9_adjustmentsDashboard.h\", thanks to Gamadril)\nSupport for 2812 Neopixel LED (details and wiring see \"6_adjustmentsLights.h\", thanks to Gamadril)\nSupport for Graupner SUMD protocol (thanks to Gamadril)\nNew in V 7.6:\nActros sound optimised. More bass.\nMore light options in \"6_adjustmentsLights.h\". Xenon etc. This is more convenient than inside the vehicle files.\nServo output compiling error solved\nSupport for rotating beacons control in \"7_adjustmentsServos.h\": #define CH3_BEACON. Connect this beacon to CH3 (BUS mode only): https://www.ebay.ch/itm/303979210629\nNew \"headlightParkingBrightness\" option in \"6_adjustmentsLights.h\" allows to use the headlights as parking lights.\nNew in V 7.5:\nSupport for non linear throttle and steering curves (for more accurate control around center position). Use \"EXPONENTIAL_THROTTLE\" & \"EXPONENTIAL_STEERING\" in \"2_adjustmentsRemote.h\"\nSupport for HOBBYWING Quicrun Fusion Motor / ESC combo. Use \"#define QUICRUN_FUSION\" in \"3_adjustmentsESC.h\"\nsupport for winch, connected to CH3 (BUS communication mode only). Use \"#define MODE2_WINCH\" in \"7_adjustmentsServo.h\" The mode 2 button is then used to switch between horn / siren sontrol and winch control via CH4. The winch is controlled by an old RC servo driver board. The speed and neutral settings are done using \"CH3L\", CH3C\" and CH3R\" positions.\nNew in V 7.4:\nIn \"2_adjustmentsRemote.h\": New remote profile for Flysky GT5 / Reely GT6 EVO / Absima CR6P (thanks to BlackbirdXL1 for making this profile)\nIn \"2_adjustmentsRemote.h\": New remote profile for MT-305. This remote comes with the RGT EX86100 crawler\n\"NO_SIREN\" option. Siren is not triggered in this case\n\"maxPwmRpmPercentage\" lowered from 400 to 380 to prevent controller from random crashing in PWM mlode\nMicroseconds channel signal range limited to 1000 - 2000. Required for RGT MT-305 @ full throttle dual rate\nNew in V 7.3:\nNew Jeep Wrangler 392 HEMI V8 (bombastic with a good bass speaker!)\nOptimised V8 vehicles, using the new \"RPM_DEPENDENT_KNOCK\" (in vehicle file) option. This makes the engine sound way more realistic and aggressive @ high RPM. Ideal for \"muffler deleted\" vehicles.\nNew \"SERVO_DEBUG\" option makes the servo calibration process easier. See \"7_adjustmentsServos.h\" tab\"\n\"VIRTUAL_3_SPEED\" not interfering with automatic transmissions anymore\n\"OVERDRIVE\" option for 6 speed automatic transmission as well, not just for 4 speed. It's recommendet to leave it turned on, unless you have a double clutch vehicle.\nNew in V 7.2:\n\"NO_CABLIGHTS\" bug fixed\nUS_Firetruck memory problem fixed\nChannel auto zero calibration reworked. See serial monitor, if you have issues. Never use \"channelAutoZero = true\" for unconnected channels or channels without spring centering!\nIndicators used as a debugger: the amount of blinks shows you the channel, which is not in neutral position (outside of 1400 - 1600 microseconds, check channel trim settings). Indicators constantly on means, that no SBUS signal is detected (check \"sbusInverted\" true / false in \"2_adjustmentsRemote.h\").\nUnimog U1000 with engine brake for Hermann\nNew in V 7.1:\nServo output for shifting transmission now usable in combination with simulated automatic transmission. Use it as an off road reducer, don't shift it while driving fast or @ high engine RPM!\nNew in V 7.0:\nIn \"6_adjustmentsLights.h\" tab: NO_CABLIGHTS\" will skip the cablights step in the light control sequence, if defined. Use it, if your vehicle does not have cab lights. More light brightness options\nNew \"8_adjustmentsSound.h\" tab for global sound options\nVehicle specific configurations in \"7_adjustmentsServos.h\" allow to store servo endpoints for multiple vehicles. Useful, if the sound controller is used as an SBUS decoder.\nNew Chevy 468 big block V8\nNew Land Rover V8 with open pipes\nAdjustable reverse speed for automatic transmissions: \"automaticReverseAccelerationPercentage\"\nNew \"OVERDRIVE\" option in \"4_adjustmentsTransmission.h\" allows to lower the engine RPM in 4th automatic gear\nBlinkLeds.ino sketch for LED test in /tools\nNew in V 6.9:\nNew \"JAKEBRAKE_ENGINE_SLOWDOWN\" option, used in Volvo FH trucks with open pipe. If defined, the engine RPM is lowered, using the jake brake, while upshifting under full load as well as when the throttle is released quickly in neutral. You can hear it in this video: https://www.youtube.com/watch?v=MU1iwzl33Zw&list=LL&index=4\nNew volvo FH with open pipes\nNew GMC Sierra V8 Pickup with 3 speed automatic transmission\nA lot of new horn melodies from nenno\nNew in V 6.81:\nThird brakelight bug fixed\n\u0423\u0440\u0430\u043b375 renamed to URAL375 (Windows is not able to read a mix of western and cyrillic letters)\nNew in V 6.8:\n\"STEERING_RAMP_TIME\" allows \"scale\" steering servo movements (BUS communication mode only)\nNew in V 6.7:\nMAN KAT V8 Diesel German Bundeswehr military truck for Onkel_Tom\nNew in V 6.64:\nKnown issues added\nNew in V 6.63:\nTrailer coupling / uncoupling sound triggering switch debounced, correct sounds should now be played every time\nTypos in trailer sound playback section fixed\nNew in V 6.62:\nESC state machine not locking up anymore, if \"escBrakeSteps\" is bigger than \"pulseNeutral\". This allows to achieve a more aggressive brake deceleration.\nNew in V 6.61:\n\"'couplingSampleCount' was not declared in this scope\" bug fixed\nNew in V 6.6:\nTrailer coupling & uncoupling sounds now triggered by a normally open switch, connected between pin 32 and GND. Intended to use the original TAMIYA switch.\nNew \"#define THIRD_BRAKLELIGHT\" setting in the \"6_adjustmentsLights.h\" tab. Comment it out, if you want to use the switch above.\nA trailer coupler (5th wheel) servo can now be connectet to the \"CH4\" header\" (not available in PWM communication mode). See note (3 in \"adjustmentsRemote.xlsx\"\nNew in V 6.5:\nmacOS Big Sur 11.x compiling error fix explained. See: Big Sur Fix\nTrailer coupling & uncoupling sounds in preparation, not yet working\nNew in V 6.4:\nCH1 & CH2 input pins can be used as PWM output for the steering servo and for the shifting servo. The outputs are active, if a BUS communication mode (SBUS, IBUS or PPM) is selected. This allows to use vers small \"BUS-only\" receivers. In this case, the servos are connected to the sound controller instead.\nAdditional Servo adjustments parameters in tab \"7-adjustmentsServo.h\" added:\n\"SERVO_FREQUENCY\" 50Hz is standard, some servos run smoother @ 100Hz.\nServo limits: left, center, right (allows to adjust both end points as well as the center point separately\nNew in V 6.3:\nAdditional ESC adjustments parameters in tab \"3-adjustmentsESC.h\" added. Allows to optimise the HOBBYWING 1060 ESC, even if it has no internal adjustments parameters:\n\"escTakeoffPunch\" adds more power, if accelerating from zero. Used, if your \"clutch\" is slipping too much while taking off.\n\"escReversePlus\" allows to make the reverse speed faster (only, if \"escPulseSpan\" is more than 500)\nAdditional \"6_adjustmentsLights.h\" tab:\n\"NO_FOGLIGHTS\" will skip the foglights step in the light control sequence, if defined. Use it, if your vehicle does not have fog lights\n\"sideLightsBrightness\" allows to adjust the brightness\" of your parking lights / side markers\nNew vehicle configurations like Diesel and petrol Landcruisers, generic 6 Cylinder Diesel (optimised for smaller speakers)\nNew in V 6.2:\nGAZ 66 redefinition bug fixed\nSMD version BOM error fixed\nInstructions PDF for ordering of pre assembled boards added\nSTL data for SMD version bottom shell included\nWastegate not triggered anymore while downshifting\nNew in V 6.1:\nSMD version tested\n\"INDICATOR_SIDE_MARKERS\" option: indicators are always on with dimmed brightness, if side markeers / parking light is on. This is often used in US trucks. See \"KenworthW900ACAT3408.h\" vehicle configuration\nYou need to install the latest version of the \"statusLED\" library: https://github.com/TheDIYGuy999/statusLED\nExperimental new throttle array for heavy trucks in \"curves.h\" you need to comment / uncomment it manually for now.\nNew in V 6.0:\nPig sound for Onkel_Tom ;-)\nKenwworth W900A with CAT3408 made more aggressive (more bass) & alternative profile\nSMD version preview\nNew in V 5.9:\nLED PWM frequency is now 20kHz instead of 500 Hz. No PWM noise anymore in the speakers\nNew \"SEPARATE_FULL_BEAM\" option. Wire your high beam lamps to the roof lights pin in this case\nNew \"INDICATOR_SIDE_MARKERS\" option. Indicators are used as side markers as well in this mode\nNew in V 5.8:\nMAN TGX 680 vehicle profile\nSMD board v1.1, incl. Gerbers, BOM & Pick and Place file (still untestet)\nNew in V 5.7:\nExperimental support for virtual 16 speed sequential transmission \"VIRTUAL_16_SPEED_SEQUENTIAL\"\nNew, alternative URAL-375D vehicle preset\nIndicators are now swichting on and off \"soft\" like incandescent bulbs, using an on and off ramp, if not defined \"LED_INDICATORS\" in the vehicle preset file. You need to use the latest statusLED update: https://github.com/TheDIYGuy999/statusLED\nNew, untested SMD board version included\nNew in V 5.6:\nHorn & siren with variable length (as long as triggered). \"Audio2Header.html\" tool changed to add the required loop area (you need to adjust it manually) in the sound files.\nHorn & siren can play @ the same time\nNew US fire truck (with CAT3408 V8 & Allison 6 speed automatic transmission) vehicle preset (use it to test the new variable length sounds)\nNew in V 5.5 (another big update):\nWay more flexible channel assignment, can easily be configured for my \"Micro RC\" remote, for a FLSKY FS-i6X or others. New \"2_adjustmentsRemote.h\" config file. You don't have to change the main code anymore in order to assign your channels. For details refer to \"adjustmentsRemote.xlsx\"\nNew, state machine controlled lights control, if \"#define AUTO_LIGHTS\" commented out. Otherwise lights are controlled by the engine state\nNew, optional xenon bulb ignition flash for headlights, if \"#define XENON_LIGHTS\" defined\nNew option \"#define ESC_DIR\" allows to change the motor spinning direction in software\nNew option \"#define VIRTUAL_3_SPEED\" lets you use the 3 position switch controlled 3 speed transmission, even if it doesn't exist ;-)\nEngine can be started manually by CH5 or automatically with the throttle stick (or the \"momentary1\" button on the \"Micro RC\" remote). Depending on setting \"#define AUTO_ENGINE_ON_OFF\"\nSerial communication mode for \"Micro RC\" remote removed (replaced with SBUS)\nActions triggering rewritten, using updated rcTrigger library. You have to use the latest version: https://github.com/TheDIYGuy999/rcTrigger\nAdded the missing \"shifting\" file type & german dropdown translations in \"Audio2Header.html\"\nBug in Mack Super Liner configuration fixed\nIBUS interface tested, works fine, but \"MAX_RPM_PERCENTAGE\" > 350 will crash the ESP32. I recommend to use SBUS instead, because current Flysky firmware can generate SBUS signals as well.\n\"MAX_RPM_PERCENTAGE\" automatically limited according to communication mode. Required to prevent the controller from crashing (see above)\nIn PWM mode, we can now read 6 channels\nPPM interface moved to RX pin, pins \"35\" & \"PPM\" are now used for PWM channels 5 & 6\nBug fixed: wasteghate not triggered anymore while releasing brake rapidly\nTwo-stage triggering for bluelight and siren, so we can use the bluelight separately\nChanging between jake braking and the normal engine sound is locked unless the current sample is looping back. This eliminates erratic klicking noises, if enabling or disabling the jake brake!\nTo prevent issues with the mode buttons, you should install the latest software v3.5 on the \"Micro RC\" receiver\nIf you use your own vehicle preset, you have to edit them, so that they use the same structure as the pre made ones. example: remove \"const\" in front of \"uint32_t MAX_RPM_PERCENTAGE\"\nNew jake brake sounds for: Actros, URAL 4320, URAL 375D, Tatra 813 & M35. New dixie horn.\nNew in V 5.4:\nNew: Volvo FH16 750, Dodge RAM 2500 with Cummins 12V\n\"R6\" knock pattern for inline 6 engines\nNew in V 5.3:\nPWM RC signal processing completely rewritten. It's now using the interrupt based ESP32 \"rmt\" core function rather than pulseRead(). Thanks to croky_b for the hint! No \"MAX_RPM_PERCENTAGE\" limitations anymore in PWM mode. 400% can now be used as well.\nPWM CH5 is now accessible on pin 35. This means, that the CH5 functions can also be used in PWM mode!\nGear manual shifting sound not triggered anymore in automatic or doubleClutch mode. No need to disable it in automatic vehicles anymore.\nURAL4320, Unimog 1000 optimised\nNew: Kirovets K700 V12 Diesel monster tractor with extreme turbo sound!\nNew in V 5.2 (a big update):\nNew, comfortable .wav to .h sound file converting tool (\"Audio2Header.html\" included). Based on bitluni's work\nExperimental Flysky IBUS support (see comunications settings, untested, you need to install this library: https://github.com/bmellink/IBusBM)\nNew vehicle configuration structure: separate .h preset files for vehicles. Select them in \"Adjustments.h\". Makes vehicle selection a lot easier.\nVehicle presets complely reworked. Most of them are now including a rev sound, which is seamlessly mixed together with the idle sound. Huge sound quality improvements!\nAll vehicle specific presets and sound files are now located in \"/vehicles\"\nNew vehicles: Defender Td5, VW K\u00e4fer, Actros 1863, SCANIA V8 trucks, URAL 375D, Jaguar XJS, MGB GT V8, Ford Powerstroke 7.3l V8 Diesel\nIdle and rev sounds are now throttle dependent es well, not just RPM dependent. Adjustable with \"fullThrottleVolumePercentage\". Useful, if you don't want to use the separate knock sound.\n\"TOP_SPEED_MULTIPLIER\" renamed to \"MAX_RPM_PERCENTAGE\", Max. engine RPM now adjustable in % of idle RPM instead of integer multiplier. Allows to do finer adjustments.\n\"ADAPTIVE_KNOCK_VOLUME\" renamed to \"V8\", added \"V2\" (these are ignition volume patterns for different engine types)\n\"CATERPILLAR_MODE\" renamed to \"TRACKED_MODE\" (for track based vehicles with dual ESC)\nnew \"SUPER_SLOW\" option for very heavy, slow responding engines like locomotive diesels (see UnionPacific2002.h)\n\"NumberOfAutomaticGears\" setting moved from \"curves.h\" to \"Adjustments.h\"\nGear ratio of 6 speed automatic transmission 1st gear changed, was too high\nExperimental pulseRead function (using interrupts) for PWM mode (disabled)\nLess aggressive RPM rise while downshifting the manual transmission\nRemoved experimental \"Multi slot knock samples\", takes too much processing power in interrupt and does not sound good\nNew in V 5.1:\nCompiler warnings issue solved\nrcTrigger function moved to Core 1 (current Arduino IDE required, 1.8.7 does not work!)\na lot of new functions (see below, triggered in \"void rcTrigger()\")\nJake brake sound added (CH5, SBUS only) Uncomment //#define JAKE_BRAKE_SOUND, if you want to use it\nHeadlight flasher and high / low beam switching added (CH5, SBUS only)\nSwitchable master volume: indoor and outdoor mode (CH5, SBUS only)\nSwitchable, virtual neutral for transmission, allows to rev the engine while standing still! (CH5, SBUS only)\nKenworth W900A example configurations in Caterpillar 3408 (V8 4 stroke) and Detroit Diesel 8V71 (V8 2 stroke) version\nnote, that you have to use the latest version of the rcTrigger library\nNew in V 5.01:\nConfiguration mistake solved: \"ADAPTIVE_KNOCK_VOLUME\" (for V8) was not enabled in \"Cat3408Settings\" and *Master\" setting\"\nCAT 3408 Peterbilt added\nNew in V 5.0:\nThe already existing \"REV_SOUND\" option is now fading over between the idle sound and the rev sound. This provides a very realistic behavior for heavy truck engines. Example see \"Cat3408Settings\", \"Messerschmitt Bf109\", \"Unimog U1000\". The fading threshold can be adjusted with the \"revSwitchPoint\" variable\nOptimized throttle fader for more realistic sound while gear shifting\nOptimised Wastegate triggering\nOptimised and new sound examples: Unimog U 1000 Turbo, Caterpillar 3408 (for King Hauler)\nNote, that only the \"Master\" settings example is listing all the .h files. Use this as a base for own settings\nNew in V 4.9:\nIgnition knock sound is now triggered by the optional revving sound as well\nSounds and configuration example for Messerschmitt Bf 109 added (first example, which uses rev sound)\nNew in V 4.82:\nMissing .h files for the Ural 2 setting added\nOnce again thanks to MAN Tgx for pointing out this issue\nNew in V 4.81:\nBugfix: Several file names contained \"Scan\u0131a\" (with Turkish i) instead of \"Scania\". This appears to be a problem under Windows but works fine under macOS\nExample configurations and .h files were reworked accordingly\nThanks to MAN Tgx on the German RC Modellbau Portal for reporting this bug: https://www.rc-modellbau-portal.de/index.php?threads/esp32-arduino-rc-sound-und-licht-controller.7183/page-14#post-229253\nNew in V 4.8:\nThrottle fader for more natural knock behavior during take off\nImproved wiring and adjustments instructions down below\nNew insanely loud supercharger sound option\nExample see \"JeepCherokeeTrackhawkSettings\" (use 6 gears in \"curves.h)\nNew in V 4.7:\nExperimental support for my new rcTrigger library added\nAllows to trigger multiple latching and non latching actions per analog channel\nNote, that you have to install this library: https://github.com/TheDIYGuy999/rcTrigger\nNew in V 4.6:\n75mm tank cannon fire sound and flash added\nTriggered via CH4\nFlash is using \"Beacon 1\" output\nExample settings: CATERPILLAR_MODE\nNew in V 4.5:\nCATERPILLAR_MODE (dual throttle input on CH2 & CH3 for tanks, diggers, bulldozers etc.\nNo ESC control support in this mode! Wire two crawler type ESC (with direct brake) in partallel with CH2 & CH3 inputs, use dual headers)\nExample settings: CATERPILLAR_MODE_Settings (copy and paste it in \"Adjustments.h\")\nAlso working in SBUS mode (allows to use additional sounds)\nNew V12 tank sound from JPS952\nNew in V 4.4:\nJeep Grand Cherokee Trackhawk added. Speaker with good bass reproduction needed!\nDAF XF truck added\nAdaptive knock volume added (the first knock per engine cycle will be louder, if defined \"ADAPTIVE_KNOCK_VOLUME\", adjust volume for others with \"dieselKnockAdaptiveVolumePercentage\" (see DAF XF settings)\n\"Settings\" files cleaned up\nNew in V 4.3:\nSimulated sequential double clutch transmission added. Variable \"doubleClutch\" in \"Adjustments.h\". See Ferrari setting (use 6 gears in \"curves.h\")\nAutomatic transmission shifting strategy is now more robust, no oscillation anymore. See Chevy Nova V8 setting (use 3 gears in \"curves.h\")\nKnock sound for Chevy Nova V8 added. Sounds just great in combination with the 3 speed automatic transmission!\nNew in V 4.2:\nDynamic, adaptive shift points for automatic transmission, depending on engine load allows economic driving\nKick down detection will shift back, if instant full throttle is applied\nReplaced \"sawtooth\" arrays for automatic gear ratios with three one dimensional arrays for 3, 4 or 6 gears\nReverse detection, only one gear in this case\nGear ratios according to Allison datasheet (adjust reverse gear ratio according to your ESC reverse top speed)\nPROTOTYPE_36-PIN renamed to PROTOTYPE_36 to prevent compiler warnings\nSettings profiles for Ferrari & trophy truck with 6 speed automatic transmission & Chevy Nova with 3 speed automatic transmission added\nNew in V 4.12:\nFurther automatic transmission fine tuning after big test drive with the Actros\nNew in V 4.11:\nAutomatic transmission optimised in 1/14 scale Actros truck with Hobbywing 1080 ESC\nNew in V 4.1:\nInspired by Wombii's fork of this repo: optimised simulated automatic transmission: load dependent \"torque converter slip\" added, optimised \"4 speed sawtooth array\", which is simulating the shifting points. Now we have 4 gears instead of 3, but you still can uncomment the 3 speed version array and use it instead. I recommend to use \"automatic = true\" in \"Adjustments.h\", if your RC vehicle does not have a real shifting transmission. My solution is way more simplistic than Wombii's, but still sounding good. Example settings see Land Rover and fire truck\nHarley Davidson optimised\nNew in V 4.0:\nFailsafe for SBUS now implemented and tested in the King Hauler build. The vehicle will do a controlled stop, if the SBUS wire is disconnected\nThe SBUS failsafe flag from the receiver should in theory do the same, but I was not yet able to test it\nNew in V 3.9:\nInitial SBUS support on pin 36 \"VP\". Tested in combination with my \"Micro RC\" receiver (SW v3.4). Only one single signal wire required!\nIt's working fine, but failsafe is not yet ready. Use it at your own risk!\nUse variables \"SBUS_COMMUNICATION\" & \"sbusInverted\" (changing signal polarity without an additional transistor) in \"Adjustments.h\" for configuration\nif you want to change the channel assignment, do it in readSbusCommands()\nThrottle overflow bug solved\nNew, optimized Detroit Diesel mix for the KingHauler see \"KingHaulerSettings2\"\nNew in V 3.8:\nExperimental support for automatic transmission simulation. Use \"automatic = true\" to activate it\nEagle schematic now including .brd PCB file -> upload it on www.oshpark.com to order your boards easily\nNew in V 3.7:\n\"PROTOTYPE_36-PIN\" allows switching headlights pin between D0 & TX0 pin. Required for the change to a 30 pin ESP32 board, which will be used on the final PCB.\nOn the final PCB, the ESP32 will be powered from the ESC, the amplifier, the shaker and the LED from the on board 5V regulator. This requires to remove the popping noise, which is generated, when the DAC offset of 128 is activated. So I added a fader for the DAC offset.\nNew in V 3.61:\nTatra 813 V12 8x8 sound optimised\nNew cooling fan & knock sounds\nNew in V 3.6:\nengine cooling fan sound added\nScania 50 ton truck added\nAir cooled Tatra 813 V12 8x8 truck added\nNew in V 3.5:\n\"dieselKnockStartPoint\" variable allows to adjust the point where the volume of the knock sound is starting to increase\nDiesel knock sound triggering bug fixed\nMercedes Actros & Harley Davidson sounds added\nExample files for vehicle specific settings added\nNew in V 3.4:\nExperimental support for separate engine revving sound. See \"REV_SOUND\" in Adjustments.h (don't use it)\nNew Diesel ignition \"knock\" sound (fixed sample rate), played in synch with the engine sound (variable sample rate). This results in a way more realistic Diesel sound, because the ignition \"knock\" does not vary in pitch.\nengine sound is now mixed together from up to 4 sounds: idle, turbo, wastegate, Diesel knock. All of them are variable in volume, depending on throttle position or engine RPM. You can adjust everything, using a lot of variables in \"Adjustments,h\". The result is a very realistic engine sound. Allows to use an engine RPM range of 3 instead of 2 without sounding strange\nNew squeaky brake sound\nUp to 11 sounds are now played in parallel!\nNew in V 3.3:\nDimmed headlights during engine start\nInternational DT-466 sounds added\nNew SCANIA V8 added\nBrake sound moved to the fixed sample rate playback interrupt\nCleaned up playback interrupt functions\nDAC offset 128 moved to dacWrite()\nBrake sounds don't have to start & end @ -128 anymore\nParking brake sound added\nPneumatic shifting sound added\nNew in V 3.2:\nAdded the new \"Wastegate\" sound. It is triggered, if the throttle is dropped rapidly\nAdded Unimog U 1000, uses the new Wastegate sound\nAdded AM General M35 truck\nNew in V 3.1:\nAdded a new, pretty realistic SCANIA R620 \"Straight Pipe\" engine sound (ScaniaR620Uphill2.h). Pure goose flesh!\nDetroit diesel sounds with more bass added\nA speaker with good bass reproduction is required!\nNew in V 3.0:\nRamping ESC signal faster below \"clutchEngagingPoint\" to prevent clutch from excessive slipping\nSolved a 2nd engine rpm bug during braking\nNew in V 2.91:\nEngine sound was slowing down too much during braking. This bug is now solved\nNo turbo sound while braking: Bug solved\nKing Hauler parameters fine adjusted\n\"clutchClosingPoint\" renamed to \"clutchEngagingPoint\"\nNew in V 2.9:\n\"shiftingAutoThrottle\" is altering throttle for synchronizing while shifting the TAMIYA 3 speed transmission -> Gearbox is protected, extreme realism in engine sound!\nMore inertia added, engine idle volume lowered to 40%\nNew in V 2.8:\n\"clutchClosingPoint\" configuration variable added. Prevents engine sound from \"rubber band effect\". Engine sound is in synch (clutch engaged) with ESC power above this value\nVirtual clutch is also disengaging during gear shifting, allowing the engine rpm to settle down during shifting\nAcceleration speed now variable, depending on throttle position\nAdded way more inertia to make vehicle behavior even more realistic\nBrake has now much finer granularity\nNew in V 2.7:\nHornblasters train horns added\nHorns are now louder\nTrash removed\nAcceleratoin & deceleration now shifting transmission gear dependent\nNew in V 2.6:\nIndicator activation point adjustable with \"indicatorOn\"\nNorwegian siren, new air brake sound\nDoor noise\nsound files moved to /sounds\noptimized bluelight patterns, using the new, optional \"delay\" variable. Latest statusLED library update required: https://github.com/TheDIYGuy999/statusLED\nNew in V 2.5:\n3rd brake light on pin 32 added\n\"escPulseSpan\" > 1400 now working properly. Allows to accelerate and decelerate even smoother as well as limiting the top speed to a realistic level\nNew in V 2.4:\nBug fixed: direct transition from state \"braking backwards\" to \"driving backwards\" now working\nfailsafe function for serial signal added. Emergency brake is triggered in case of RC signal loss (serial & PWM mode only, PPM will follow)\nNew in V 2.3:\nReversing light, reversing beep and brake light behaviour changed in order to interact correctly with the new vehicle mass simulation\nESC is locked, if engine is not running ;-)\nAir brake sound now triggered correctly, as soon as the brake pedal is released\nI'm really amazed about this update! The vecihle almost behaves like a real truck now.\nNew in V 2.2:\nSupport for crawler ESC (with direct brake) on pin 33. Vehicle mass simulation with proportional brake! Tested in Tamiya King Hauler (REELY Model No H0050 ESC) and working fine, but use it at your own risk! If you want to test it, connect ESC to pin 33 of the ESP32 instead of the receiver output.\nLED pins rearranged to fit my board layout (you can change it in the pin assignment section)\nScania R620 sound added\nNew in V 2.1:\nAdditional turbo sound (playing in parallel with engine sound), volume and throttle dependent volume adjustable\nCaterpillar 3406B sound added\nVW Beetle sound added\nIndicator direction adjustable with \"INDICATOR_DIR\" = \"true\" or \"false\"\nShaker rpm now adjustable for engine start, idle, full throttle & shutdown\nNew in V 2.0:\nSwiss post bus horn moved to category \"sirens\" ---> Replace existing .h file!\nExperimental ESC output (do not use it). Latest statusLED library update required: https://github.com/TheDIYGuy999/statusLED\nMack truck sounds added\nNew in V 1.9:\nKenworth W900 added\nInitial PPM signal input on pin 34 added. For now usable for steering and throttle signal. Uncomment \"#define PPM_COMMUNICATION\", if you want to use it.\nNew in V 1.8:\nLED pins changed for trailer light driver\nHorn sounds, siren sounds & additional sounds variable names changed! ---> Replace them all!\nAdded more horns\nAdded indicator (blinker) ticking sound\nAdded independent volume adjustment for every sound\nEngine sound volume is now throttle dependent (adjustable)\nNew in V 1.7:\nAdded shaker motor control on pin 23. Simulates engine vibration. IRLZ44N Mosfet and freewheel diode 1N5819 required\nShaker power can be adjusted with the variables \"shakerMin\" & \"shakerMax\" in Adjustments.h\nDriver schematic down below\nI'm using a shaker motor from the G.T.Power kit 103061 (this controller is crap, but the accessories are useful)\nFoglight and side light pins moved to pins 18 & 19\nNew in V 1.6:\nServo input channels rearranged to match the pinout of the \"Micro RC\" receiver (you can change it in the pin assignment section)\nCleaned up the code a bit\nAn updated version (16 timers) of my \"statusLED\" library is required: https://github.com/TheDIYGuy999/statusLED\nAdded experimental support for serial communication with my \"Micro RC\" receiver: https://github.com/TheDIYGuy999/Micro_RC_Receiver\nUncomment \"#define SERIAL_COMMUNICATION\" in Adjustments.h\nConnect pin 36 \"VP\" to pin \"TXO\" of the receiver (disable \"TXO_momentary1\" & \"TXO_toggle1\" in vehicleConfig.h)\nThe \"RC Servo Signals\" are not required in this mode!\nAdded Scania R500 V8 sounds\nNew in V 1.51:\nSolved issue: redefinition of 'const unsigned int sampleRate'\nNew in V 1.5:\nMore Detroit Diesels added\nNew in V 1.4:\nIndicator (turn signal) support added\nRC signals now handled as arrays in order to simplify auto zero calibration of multiple channels\nNew in V 1.3:\nIrish fire truck horn\nDouble flash blue lights option\nUS fire truck air horn and air siren\nNew in V 1.2:\nLight functions added: reversing light, beacons (blue light), headlights, taillights with integrated brake lights\nMy \"statusLED\" library is required: https://github.com/TheDIYGuy999/statusLED\nNew in V 1.1:\nTruck reversing beep sound added\nCan play in parallel with other additional sound and with variable speed engine sound!\nNew in V 1.0:\nEngine now slowing down, if switched off, not just fading out\nFader bug fixed, now working smoothly\nHG P408 sounds added\nNew in V 0.9:\nHumvee Diesel engine sound added\nTruck pneumatic brake release sound added\nNew in V 0.8:\nvolume offset bug was back and is fixed again!\nimproved sound quality of Union Pacific 2002\nDetroit Diesel truck added\nSine test tones added\nM2 sound added\nNew in V 0.7:\nfixed auto throttle zero calibration bug\nfixed \"gap\" bug, if sounds were triggered in PWM mode\nPWM mode now allows to trigger 2 sounds\nNew in V 0.6:\nfixed slow engine RPM response: The RC signal pulsewidth is now only read every 100ms, so much more processing time is available for other things\nNew in V 0.5:\nadded idle sound volume adjustment variable \"idleVolumePercentage\" in \"Adjustments.h\"\nadded Union Pacific 2002 SD70M 16 cylinder Diesel locomotive sounds\nadded Jaguar XJS HE car sound (bad quality)\nadded \"pwmHornTrigger\" variable in Adjustments.h\", which allows to trigger the horn, using a PWM signal. Allows to use standard receivers\nNew in V 0.4:\nvolume offset bug fixed\nadded the typical Swisss post bus horn, an American police siren, a European Feuerwehr Martinshorn and a car horn\nadded the varible \"shifted\", which allows to select between linear and shifted engine rpm response\nadded schematic\nNew in V 0.3:\nEngine start / stop implemented, including starter sounds\nThree different start sounds available\nHorn implemented. It is played on pin 26 (see wiring instructions in code) triggered by switch on input 12\nTwo different horn sounds available\nThe horn can play in parallel with the variable speed engine sound!\nFor easier access, the \"settings.h\" file was renamed in \"Adjustments.h\"\nNew in V 0.2:\nMany new 22'050Hz, 8bit sound files generated, mostly the same as in the ATmega 328 version, but in better quality :-)\nNew in V 0.1:\nRuns on an ESP32 (240MHz)\nIt's still quick and dirty, but works with the included V8 short course truck idle sound\nsounds way better than the ATmega 328 version, thanks to 22'050Hz sampling rate (instead of 8'000Hz)\nPrototypes:\n2019 - 2020, TheDIYGuy999", "link": "https://github.com/TheDIYGuy999/Rc_Engine_Sound_ESP32", "origin": "Github", "suborigin": "arduino", "result": true, "Selector": "excavator", "selectorShort": "excavator", "MarkedSent": "this is an arduino rc engine sound & light controller for esp32\nit's based on the atmega 328 version: https://github.com/thediyguy999/rc_engine_sound and on bitlunis halloween example: https://github.com/bitluni/motionpumpkin\nwiring and software installation instructions see further down. arduino ide or visual studio code (with platform io extension) are supported.\nvideo series: https://www.youtube.com/playlist?list=plgo5ejjcljbcjivu8frs7lreu3h2yz_so\ndiscussion and support thread (in german): https://www.rc-modellbau-portal.de/index.php?threads/esp32-arduino-rc-sound-und-licht-controller.7183/\nnew: fully assembled, tested and working 30 pin smd version, manufactured and pre-assembled by https://www.pcbway.com\nfully assembled, tested and working 30 pin version\ncompact version for -----> excavator !!!  (ibus & sound only, supplied by 6v bec)\nlcd dashboard (original by gamadril)\nfeatures:\nunique vehicle mass inertia simulation (connect your crawler type esc to pin 33). throttle output is altered during shifting of a mechanical 3 speed transmission for smooth shifting, gear protection and realistic sound. works just fine with tamiya 3 speed transmissions. should work as well with crawler 2 speed transmissions. the esc is controlled by a state machine with the following states: driving forward & reverse (varible acceleration, depending on throttle position), neutral, braking forward & reverse (variable deceleration with fine granularity, according to \"reverse throttle\" position). it also allows to control the brake lights, the brake sound, the reversing light & the reversing beep sound properly. acceleration & deceleration (coasting & braking) are adjustable separately for each gear to ensure maximum realism.\nunique \"virtual clutch\" allows to rev the engine below an adjustable esc output speed. above, the clutch engages and ensures, that the engine sound is in synch with the wheel rpm. sounds and behaves just great in combination with a shifting transmission!\nsimulated automatic transmission with torque converter (if your vehicle does not have a real shifting transmission)\nsimulated double clutch transmission\nsimulated, manually shifted 3 speed transmission (new in v5.5)\nvirtual, switchable neutral allows to rev the engine while standing still\njake brake (simulated pneumatic engine brake, mainly used in us trucks)\ntracked mode (dual throttle input on ch2 & ch3, for tanks, diggers etc. no esc control support in this mode. (new in v4.5)\ntank cannon sound & flash (new in v4.6)\ntriggering multiple latching and non latching actions (sounds, lights) per analog channel, using the rctrigger library (new in v4.7, still experimental)\nmany selectable sounds: engine cranking, engine idling, engine revving, turbo whining, diesel ignition \"knock\", wastegate valve, horns, sirens, reversing beep, air brake, parking brake, gear shifting etc.\nrealistic engine sound is mixed together on the fly from up to 4 sounds: engine idling, turbo, wastegate (all with variable sampling rate), diesel ignition knock (fixed sampling rate, so it does not vary in pitch)\nload (throttle position) dependent volume sounds: idle, rev, diesel knock\nengine rpm dependent volume sounds: turbo, wastegate\ndozens of engine & other sounds included, you can also compose your own, using audacity and bitlunis conversion tool (link above)\nengine rpm range and inertia adjustable, volume of all sounds adjustable, engine sounds separatly for load and idling.\nmany other paramerets can be adjusted. all adjustments are easily accessible in \"adjustmentsxyz.h\"\nsound files up to 22'050hz, 8bit, mono can be used\ncompatible input signals: pwm, ppm, sbus (inverted & non inverted signals), ibus\nworks best with a pam8403 amplifier module, connected to pin 25 & 26, via 10kohm resistors & a 10kohm potentiometer (see schematic below)\nthe engine rpm is calculated according to rc signal input on pin 13 *** caution, 3.3v max. on all pins! *** 330 ohm resistors on all i/o pins recommended!\nnon linear throttle curves can be generated in \"curves.h\"\nlight effects: headlights (high & low beam), tail lights, brake lights, fog lights, roof lights, cab lights, reversing light, indicators (turn signals), hazard lights, blue light etc. (max. 12 outputs)\nengine vibration simulation, using a shaker motor with excentric weight: strong vibration while cranking, medium wlile idling, slight while revving\nadjustable volume (via remote)\nuse an esp32, cpu frequency must be set to 240mhz\neagle schematic & board file included. pre made gerber files allow you to order your board easily.\nincluded, easy to use .wav to .h sound file converter\nchannels can easily be assigned, using \"remotesetup.h\"\npre made configuration profiles for flysky fs-i6x and arduino mirco rc remote (new in v.5.5)\nvariable length for horn & siren, using loop area in sound files (new in v5.6)\nbus decoder for steering servo and shifting servo (connect servos to ch1 & ch2) pins\ntrailer coupler (5th wheel) servo can be connected to the ch4 pins (not in pwm communication mode)\ntamiya trailer presence switch can be connected to pin 32 (depending on \"#define third_braklelight\" setting in \"6_adjustmentslights.h\" tab)\nsupport for non linear throttle and steering curves (for more accurate control around center position). use \"exponential_throttle\" & \"exponential_steering\" in \"2_adjustmentsremote.h\"\nsupport for hobbywing quicrun fusion motor / esc combo. use \"#define quicrun_fusion\" in \"3_adjustmentsesc.h\"\nsupport for winch, connected to ch3 (bus communication mode only). use \"#define mode2_winch\" in \"7_adjustmentsservo.h\" the mode 2 button is then used to switch between horn / siren sontrol and winch control via ch4. the winch is controlled by an old rc servo driver board. the speed and neutral settings are done using \"ch3l\", ch3c\" and ch3r\" positions.\nsupport for lcd dashboard\nsupport for 2812 neopixel led (gpio0)\nsupport for hydlaulic excavators (hydraulic pump, hydraulic flow, track rattling sounds). use #define flysky_fs_i6s_excavator profile for remote\nesp-now based 2.4 ghz wireless trailer control support\non the todo list:\ncornering lights (on the beacon outputs)\nhazards switching on, if engine off in auto_lights mode\nknown issues:\narduino ide 1.8.7 or older is not supported and will cause compiler errors!\nthe esp32 does not work on macos big sur 11.x, but this issue can be fixed easily as described here: big sur fix (for v1.04)\nunder windows 10 & macos, there is a crash & reboot issue, if espressif esp32 board definition v1.05 is used. use v1.04 instead!\nhow to create new .h sound files:\naudacity:\nimport the wav sound file you want in audacity\nconvert it to mono, if needed\non the bottom left, select project frequency 22'050hz\nsearch for a cyclic pattern in the idle sound (the amount of ignition pulses is usually the same as the cylinder number), cut the \"idle\" sample to exactly this length, have a close look at the zero crossings to avoid clicking noises. the loudest peak should always be at the end of the sample.\ndo the same with the \"rev\" sound. it will be 2 - 4 times shorter than the \"idle\" sample, depending on the engine and rpm of the \"rev\" sample\nchange the \"rate\" (dropdown on the left of the sample) of the \"rev\" sample, until the length is the same as in the \"idle\" sample. this is very important!\nduplicate a part of the \"rev\" sample (the one with the original, unchanged \"rate\" speed). this is the \"knock\" sample. cut it to this max length: \"idle\" length / number of cylinders / rpm range \"max_rpm_percentage\" (usually 2 - 4 or 200 - 400%)\nadjust the volume of all samples, so that the entire dynamic range is used\nyou may also want to apply high pass or low pass filters to fine tune the sound\nselect > export audio > selected audio > wav > 8-bit-pcm\nconvert the .wav file with the modified converting tool (new in v5.2):\nopen the included \"audio2header.html\" converter in your browser. it is located in the \"tools\" folder\nadjust the export file format (no changes required)\nselect the export file type, depending on the sound you are converting (idle, rev, horn etc.)\nopen the wav file you want to convert\na .h file is generated and downloaded\nmove it to your \"sketch/vehicles/sounds\" directory\ninclude the new header file with your sound in your vehicle preset, adjust settings until you are happy:\ninclude this .h file in \"adjustments.h\" > \"yourvehiclepreset.h\"\nknock sound settings:\n\"dieselknockinterval\" = number of cylinders\nuncomment \"v8\" for v8 engines, r6 for inline 6 engines or \"v2\" for v2 (harley) engines\nadjust \"dieselknockadaptivevolumepercentage\" (how loud the \"silent\" knock pulses are compared with the loud ones), only active, if defined \"v8\", \"r6\" or \"v2\"\nplay with the other volumes, start-, end- and switch-points until you are happy\nthe \"rev\" sound is optional and only active, if \"rev_sound\" is defined (// removed)\nadjust the transition from the \"idle\" to the \"rev\" sound, using \"revswitchpoint\", \"idleendpoint\", \"idlevolumeproportionpercentage\". this step is very important and can make a huge difference!\ncompile the new sketch:\ncompile and upload the sketch in arduino ide\nthe new sound should now be ready\nschematic (use pdf for current version!):\npcb\nincluded pcb files:\nfor 30 pin esp32: advanced version with 11x led driver transistors, inverting input for sbus, double input connectors to avoid y-cables\nfor 36 pin esp32: simple version with direct output pin access via 330 ohm resistors, 8x led driver transistors (not recommended)\nrecommended manufacturor:\nhttps://www.pcbway.com (including smd assembling service, use gerbers.zip for board, it also includes bom. xlsx and cpl.xlsx, if you want to use the smt assembling service) how to order pre assembled boards see /eagle_pcb/how to order your pcb.pdf\nassembling tutorial (for the 36 pin version):\nhttps://www.youtube.com/watch?v=vfaz3czecg4&list=plgo5ejjcljbcjivu8frs7lreu3h2yz_so&index=13\nwiring:\nbefore you begin:\nthis device is not protected against wrong polarity!\nalways use series resistors for led headers (except tamiya trailer header)\nmaximum input voltage on \"sig\" pins = 3.3v (be careful with very old receivers, which may deliver 5v)\nit is recommended to use a fuse between your battery and the sound controller / esc\nsupply for audio amplifier, shaker motor and led:\nuse an y-cable between your battery, your esc and the \"x1\" terminal. battery voltage range is 7 - 12.6v\nsupply for esp32:\nthe esp32 is not supplied through the \"x1\" terminal\nit can be supplied through the micro usb header\nor through the +v and gnd pin row on the top of the board (the voltage is usually coming from the bec in your esc, which needs to be connected to the \"esc\" header)\nesc wiring:\nconnect a hobbywing 1080 esc to the esc header (gnd, v+ and sig)\nadjust the esc parameters, using the programming card as described on the top of \"adjustments.h\"\ni do not recommend any other esc\nthe esc is controlled by the cound controller, rather than directly by the receiver. this allows to use the unique \"virtual inertia\" feature. note: use this feature at your own risk! i'm not responsible, if any damage is caused. it's running very stable and i never had an issue, but you never know.\n\"escpulsespan\" can be used to limit the top speed of your vehicle. 500 = not limited, anything above 500 will limit the top speed\nreceiver wiring for pwm servo signals (the most common wiring):\nchannel assignment according to \"remotesetup.h\" and remotesetup.xlsx\", easily adjustable (new in v5.5). it is important to plug in the wires according to the channel assignment\nch5 & 6 are coming in via the \"35\" & ppm\" headers\nat least one ch needs to be connected, using a 3 pin wire, so that gnd and v+ are connected as well (receiver supply)\nch1 - 4 headers are pairs, wired in parallel. this allows to feed servo signals through, eliminating the need for y-cables\nnote that you need to change the configuration as described below, if you want to use this wiring method\nreceiver wiring for ppm signals:\ninternal channel assignment as above\nconnect a 3 pin wire fom your receiver ppm header to the rx (changed in v5.5, was ppm) header on the sound controller (sig, v+, gnd)\nnote that you need to change the configuration as described below, if you want to use this wiring method\n8 channels can be read in this mode\nreceiver wiring for sbus signals (recommended):\ninternal channel assignment as above\nconnect a 3 pin wire fom your receiver sbus header to the sbus header on the sound controller (sig, v+, gnd)\nthe \"sig\" pin on the sbus header is 5v tolerant\n13 channels can be read in this mode\nreceiver wiring for ibus signals:\ninternal channel assignment as above\nconnect a 3 pin wire fom your receiver ibus header to the rx header on the sound controller (sig, v+, gnd)\n13 channels can be read in this mode\nspeakers\n4 or 8 ohms speakers are compatible\nyou can use one or two speakers\nnever use two speakers in parallel on a single header\nnever use two headers in parallel to drive one speaker\nnever connect capacitors to the speaker headers\nled\nthe led need to be wired \"common positive\". this means, the long led legs are all connected together and connect to the 5v rail, coming from the on board regulator\nall led (except the ones, which are connected to the tamiya trailer connector) need a series resistor\ncalculate the reqired resistor according to: http://ledcalc.com (supply voltage = 5v)\nit is not recommended to wire led in parallel, sharing the series resistor\nsupport for ws2812 neopixel led (details and wiring see \"6_adjustmentslights.h\")\nlcd dashboard\nsee \"9_adjustmentsdashboard.h\"\nshaker\nthe shaker is used for engine vibration simulation. the speed can be adjusted in the vehicle configuration and will vary depending on the engine state and rpm\nit needs to be connected to the \"shaker\" header and is supplied by the on board 5v regulator. the negative side is switched by the on board mosfet\nplease note, that the used mosfet needs to be a logic level type. otherwise the shaker will not work!\nthe motor should not draw more than about 300ma @ 5v. i'm using a shaker motor from gt power.\nsoftware:\nrequired software for code uploading and editing:\narduino ide: https://www.arduino.cc/en/main/software\nor visual studio code with platformio extension (recommended): https://code.visualstudio.com\nvisual studio also requires this software (restart vs code afterwards) in order to be able to synchronise libraries: https://git-scm.com/download\ndownloading and preparing the code with arduino ide:\ndownload the code from here (hit \"code > download zip\"): https://github.com/thediyguy999/rc_engine_sound_esp32\nunzip the folder, if required\nremove the \"-master\" part of the folder name\ninstall libraries and board definitions below first, restart arduino ide\nopen \"scr.ino\" with a double click (arduino ide should start)\nrequired esp32 board definition (not required, if visual studio code is used as ide):\ninstall it according to: https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-windows-instructions/\nuse v1.04, v1.05 is causing reboot issues!\nadjust settings according to:\nrequired libraries. you need to install all of them, if using arduino ide. not required, if visual studio code is used as ide:\nstatusled: https://github.com/thediyguy999/statusled\nsbus: https://github.com/thediyguy999/sbus\nrctrigger: https://github.com/thediyguy999/rctrigger\nibus: https://github.com/bmellink/ibusbm\ntft: https://github.com/bodmer/tft_espi\nfastled: https://github.com/fastled/fastled\ndownload them in the same manner as the main code above. store the folders in your \"arduino/libraries\" path. install them according to: https://www.arduino.cc/en/guide/libraries\nuploading the code to the board:\nimportant: depending on your board, you may have to press and hold the \"boot\" button, if the ide just shows \"connecting........_____....\" release it, as soon as the upload starts.\non macos big sur, you need to apply the following fix (arduino ide only): big sur fix\nvisual studio code (instead of arduino ide) overiew:\nadjusting things in \"adjustmentsxyz.h\":\nvehicle selection:\nnote, that in v5.5 the former \"adjustments.h\" configuration file was divided into multiple files.\nuncomment (remove //) the vehicle you want in \"adjustments.h\". never uncomment more than one vehicle! note, that you need to re-upload the code after you changed the settings. otherwise it will not take effect. select >sketch > upload to upload the code. important! always lift your vehicle off the ground while uploading.\nif you want to make a new vehicle, copy vehicles/00_master.h, store it with your vehicle name. then edit the settings as you like, add links to the sound files you want. afterwards add a link to your vehicle.h (see examples below) and uncomment it\n// vehicle settings ****************************************************************************************************\n// select the vehicle preset you want (uncomment the one you want, remove //, never more than one)\n// master --------\n//#include \"vehicles/00_master.h\" // this master preset file contains all available sound files, which are not used in existing vehicle presets\n// us trucks --------\n//#include \"vehicles/cabovercat3408.h\" // cabover truck with caterpillar 3408 v8 diesel\n//#include \"vehicles/peterbiltdetroit8v92.h\" // peterbilt 359 with detroit 8v92 v8 2 stroke diesel\n//#include \"vehicles/kenworthw900adetroit8v71.h\" // kenworth w900a with detroit 8v71 v8 2 stroke diesel\n//#include \"vehicles/kenworthw900acat3408.h\" // kenworth w900a with caterpillar 3408 v8 diesel\n//#include \"vehicles/cat3408openpipes.h\" // kenworth w900a with caterpillar 3408 v8 diesel and open pipes\n//#include \"vehicles/kenworthw900acat3408new.h\" // kenworth w900a with caterpillar 3408 v8 diesel (good bass speaker required)\n//#include \"vehicles/kenworthcummins335.h\" // 1950ies kenworth with cummins 335 r6 diesel\n//#include \"vehicles/macksuperliner.h\" // mack super liner\n//#include \"vehicles/m35.h\"// am general m35 \"deuce and a half\" military truck, turbocharged r6 universal fuel engine\n//#include \"vehicles/us_firetruck.h\"// us firetruck with cat3408 v8 and allison 6 speed automatic (horn & siren loop capable)\n//#include \"vehicles/freightlinercummins350.h\" // freightliner cabover with cummins 350 r6 diesel\n// eu trucks --------\n//#include \"vehicles/tatra813.h\" // tatra 813 8x8 v12 diesel military truck (old version for comparison, don't use it)\n//#include \"vehicles/tatra813new.h\" // tatra 813 8x8 v12 diesel military truck\n//#include \"vehicles/unimogu1000.h\" // umimog u 1000 with turbocharged r6 diesel incl. feuerwehr \"martinshorn\" siren\n//#include \"vehicles/mercedesactros1836.h\" // mercedes actros 1863 or 3363 truck with r6 diesel\n//#include \"vehicles/mercedesactrosv6.h\" // mercedes actros v6 race truck incl. tire squealing\n//#include \"vehicles/scaniav8_50ton.h\" // scania v8 50 ton truck. unknown model. bad quality!\n//#include \"vehicles/scaniav8.h\" // scania v8 truck, unknown model\n//#include \"vehicles/1000hpscaniav8.h\" // 1000 hp scania v8 truck with open pipes. insane sound! good bass speakers reqired\n//#include \"vehicles/scania143.h\" // scania 143 v8 - the legend! the best sounding in my opinion\n//#include \"vehicles/scaniav8firetruck.h\" // scania v8 firetruck, automatic allison 6 speed transmission with torque converter, \"martinshorn\" siren\n//#include \"vehicles/volvofh16_750.h\" // volvo fh16 750 truck. inline 6, 750 horses, open pipes!\n//#include \"vehicles/volvofh16_openpipe.h\" // volvo fh truck. inline 6, open pipes, alternative version\n//#include \"vehicles/mantgx.h\" // man tgx 680 v8 truck\n//#include \"vehicles/mankat.h\" // man kat v8 diesel german bundeswehr military truck\n//#include \"vehicles/magirusdeutz256.h\" // magirus deutz 256 air coolded v8 diesel truck\n//#include \"vehicles/magirusmercur125.h\" // magirus mercur air coolded v6 diesel truck\n#include \"vehicles/saurer2dm.h\" // swiss saurer 2dm r6 diesel truck\n// russian trucks --------\n//#include \"vehicles/ural4320.h\" // ural 4320 6x6 v8 diesel military truck\n//#include \"vehicles/ural375d.h\" // ural 375d 6x6 v8 petrol military truck\n//#include \"vehicles/ural375.h\" // ural 375d 6x6 v8 petrol military truck (new version with better v8 sound, but good bass speaker required)\n//#include \"vehicles/gaz66.h\" // gaz-66 v8 petrol military truck\n// russian tanks -------\n//#include \"vehicles/is3.h\" // is-3 ww2 battle tank, v12 diesel (dual esc mode, good bass speaker required)\n// tractors -------\n//#include \"vehicles/kirovetsk700.h\" // russian kirovets k700 monster tractor. extreme turbo sound!\n// excavators -------\n//#include \"vehicles/caterpillar323excavator.h\" // caterpillar 323 excavator (use \"flysky_fs_i6s_excavator\" remote profile)\n// us motorcycles --------\n//#include \"vehicles/harleydavidsonfxsb.h\" // harley davidson fxsb v2 motorcycle\n// us cars --------\n//#include \"vehicles/chevynovacoupev8.h\" // 1975 chevy nova coupe v8\n//#include \"vehicles/1965fordmustangv8.h\"// 1965 ford mustang v8\n//#include \"vehicles/chevy468.h\" // chevy 468 big block v8\n// eu cars --------\n//#include \"vehicles/vwbeetle.h\" // vw k\u00e4fer / beetle\n//#include \"vehicles/jaguarxjs.h\" // jaguar xjs v12, manual transmission\n//#include \"vehicles/jaguarxjsautomatic.h\" // jaguar xjs v12, automatic transmission\n//#include \"vehicles/mgbgtv8.h\" // mgb gt v8, manual transmission\n//#include \"vehicles/laferrari.h\" // ferrari laferrari, v12, 6 speed double clutch transmission\n// us suv & pickups --------\n//#include \"vehicles/jeepgrandcherokeetrackhawk.h\" // jeep grand cherokee trackhawk v8 monster suv with supercharger, 6 speed automatic\n//#include \"vehicles/fordpowerstroke.h\" // ford powerstroke 7.3l v8 diesel, 6 speed automatic (good bass speaker required)\n//#include \"vehicles/ram2500_cummins12v.h\" // dodge ram 2500 with inline 6, 12v cummins 5.9l diesel, manual transmission\n//#include \"vehicles/ram2500_cummins12vautomatic.h\" // dodge ram 2500 with inline 6, 12v cummins 5.9l diesel, automatic transmission\n//#include \"vehicles/gmcsierra.h\" // gmc sierra v8 pickup, 3 speed automatic transmission\n//#include \"vehicles/chevynovacoupev8_p407.h\" // 1975 chevy nova coupe v8, special version for hg-p407, 3 speed automatic transmission\n//#include \"vehicles/jeepwranglerrubicon392v8.h\" // 2021 jeep wrangler rubicon hemi 392 v8 (starter needs rework)\n//#include \"vehicles/jeepwranglerrubicon392v8_2.h\" // 2021 jeep wrangler rubicon hemi 392 v8 (insane bass!)\n// eu suv --------\n//#include \"vehicles/defenderv8automatic.h\" // land rover defender 90 v8 automatic (very nice v8 with lots of bass)\n//#include \"vehicles/defenderv8openpipeautomatic.h\" // land rover defender 90 v8 automatic, open pipes (optimised for smaller speakers)\n//#include \"vehicles/defenderv8crawlerautomatic.h\" // land rover defender 90 v8 automatic crawler\n//#include \"vehicles/defendertd5.h\" // land rover defender 90 td5 r5 diesel\n// asian suv --------\n//#include \"vehicles/landcruiserfj40.h\" // landcruiser fj40 with inline 6 petrol engine\n//#include \"vehicles/landcruiserfj40diesel.h\" // landcruiser fj40 with inline 6 12h turbo diesel engine\n//#include \"vehicles/landcruiserfj40diesel2.h\" // landcruiser fj40 with inline 6 12h turbo diesel engine\n//#include \"vehicles/hiluxdiesel.h\" // hilux diesel with inline 6 12h turbo diesel engine (for hg-p407)\n// us locomotives --------\n//#include \"vehicles/unionpacific2002.h\" // union pacific 2002 sd70m locomotive with enormous, low revving 16 cylinder diesel\n// planes --------\n//#include \"vehicles/messerschmittbf109.h\" // messerschmitt bf 109 ww2 german v12 plane\n// generic diesels --------\n//#include \"vehicles/generic6zyldiesel.h\" // generic inline 6 diesel, no turbo, manual transmission (optimised for smaller speakers)\ninterface type (communication mode) selection:\nnote, that the default communication mode is sbus. you need to change it as follows, if you want to use classic rc servo signals.\npwm (classic rc signals on \"ch1\" - \"ch4\", \"35\" & \"ppm\" headers, the most common interface)\n// communication settings **********************************************************************************************\n// choose the receiver communication mode (never uncomment more than one!) !!! adjust them before connecting your receiver and esc !!!\n// pwm servo signal communication (ch1 - ch4, 35, ppm headers, 6 channelschannelsetup.h) --------\n// pwm mode active, if sbus, ibus and ppm are disabled (// in front of #define)\n// sbus communication (sbus header, 13 channels. this my preferred communication protocol)--------\n//#define sbus_communication // control signals are coming in via the sbus interface (comment it out for classic pwm rc signals)\nboolean sbusinverted = true; // false = wired to non standard (inverted) sbus signal (for example from \"micro rc\" receiver)\n// ibus communication (rx header, 13 channels not recommended, no failsafe, if bad contact in ibus wiring!) --------\n//#define ibus_communication // control signals are coming in via the ibus interface (comment it out for classic pwm rc signals)\n// sumd communication (rx header, 12 channels, for graupner remotes) --------\n//#define sumd_communication // control signals are coming in via the sumd interface (comment it out for classic pwm rc signals)\n// ppm communication (rx header, 8 channels, working fine, but channel signals are a bit jittery) --------\n//#define ppm_communication // control signals are coming in via the ppm interface (comment it out for classic pwm rc signals)\nppm (multiple channels pulse pause modulation, wired to \"rx\" header, 8 channels)\n// communication settings **********************************************************************************************\n// choose the receiver communication mode (never uncomment more than one!) !!! adjust them before connecting your receiver and esc !!!\n// pwm servo signal communication (ch1 - ch4, 35, ppm headers, 6 channelschannelsetup.h) --------\n// pwm mode active, if sbus, ibus, and ppm are disabled (// in front of #define)\n// sbus communication (sbus header, 13 channels. this my preferred communication protocol)--------\n//#define sbus_communication // control signals are coming in via the sbus interface (comment it out for classic pwm rc signals)\nboolean sbusinverted = true; // false = wired to non standard (inverted) sbus signal (for example from \"micro rc\" receiver)\n// ibus communication (rx header, 13 channels not recommended, no failsafe, if bad contact in ibus wiring!) --------\n//#define ibus_communication // control signals are coming in via the ibus interface (comment it out for classic pwm rc signals)\n// sumd communication (rx header, 12 channels, for graupner remotes) --------\n//#define sumd_communication // control signals are coming in via the sumd interface (comment it out for classic pwm rc signals)\n// ppm communication (rx header, 8 channels, working fine, but channel signals are a bit jittery) --------\n#define ppm_communication // control signals are coming in via the ppm interface (comment it out for classic pwm rc signals)\nsbus (recommended, default setting, wired to \"sbus\" header, 13 channels)\n// communication settings **********************************************************************************************\n// choose the receiver communication mode (never uncomment more than one!) !!! adjust them before connecting your receiver and esc !!!\n// pwm servo signal communication (ch1 - ch4, 35, ppm headers, 6 channelschannelsetup.h) --------\n// pwm mode active, if sbus, ibus, and ppm are disabled (// in front of #define)\n// sbus communication (sbus header, 13 channels. this my preferred communication protocol)--------\n#define sbus_communication // control signals are coming in via the sbus interface (comment it out for classic pwm rc signals)\nboolean sbusinverted = true; // false = wired to non standard (inverted) sbus signal (for example from \"micro rc\" receiver)\n// ibus communication (rx header, 13 channels not recommended, no failsafe, if bad contact in ibus wiring!) --------\n//#define ibus_communication // control signals are coming in via the ibus interface (comment it out for classic pwm rc signals)\n// sumd communication (rx header, 12 channels, for graupner remotes) --------\n//#define sumd_communication // control signals are coming in via the sumd interface (comment it out for classic pwm rc signals)\n// ppm communication (rx header, 8 channels, working fine, but channel signals are a bit jittery) --------\n//#define ppm_communication // control signals are coming in via the ppm interface (comment it out for classic pwm rc signals)\nsbus non standard signal (if your receiver sends a non-standard sbus signal):\nboolean sbusinverted = false; // false = wired to non standard (inverted) sbus signal (for example from \"micro rc\" receiver)\nsbus standard signal (default, used in most cases)\nboolean sbusinverted = true; // false = wired to non standard (inverted) sbus signal (for example from \"micro rc\" receiver)\nibus (not recommended, no failsafe, if bad contact in ibus wiring! \"rx\" header, 13 channels)\n// communication settings **********************************************************************************************\n// choose the receiver communication mode (never uncomment more than one!) !!! adjust them before connecting your receiver and esc !!!\n// pwm servo signal communication (ch1 - ch4, 35, ppm headers, 6 channelschannelsetup.h) --------\n// pwm mode active, if sbus, ibus, serial and ppm are disabled (// in front of #define)\n// sbus communication (sbus header, 13 channels. this my preferred communication protocol)--------\n//#define sbus_communication // control signals are coming in via the sbus interface (comment it out for classic pwm rc signals)\nboolean sbusinverted = true; // false = wired to non standard (inverted) sbus signal (for example from \"micro rc\" receiver)\n// ibus communication (rx header, 13 channels not recommended, no failsafe, if bad contact in ibus wiring!) --------\n#define ibus_communication // control signals are coming in via the ibus interface (comment it out for classic pwm rc signals)\n// sumd communication (rx header, 12 channels, for graupner remotes) --------\n//#define sumd_communication // control signals are coming in via the sumd interface (comment it out for classic pwm rc signals)\n// ppm communication (rx header, 8 channels, working fine, but channel signals are a bit jittery) --------\n//#define ppm_communication // control signals are coming in via the ppm interface (comment it out for classic pwm rc signals)\nsumd (for graupner remotes \"rx\" header, 12 channels)\n// communication settings ********************************************************************************************************************\n// choose the receiver communication mode (never uncomment more than one!) !!! adjust them before connecting your receiver and esc !!!\n// pwm servo signal communication (ch1 - ch4, 35, ppm headers, 6 channels) --------\n// pwm mode active, if sbus, ibus, and ppm are disabled (// in front of #define)\n// sbus communication (sbus header, 13 channels. this is my preferred communication protocol)--------\n//#define sbus_communication // control signals are coming in via the sbus interface (comment it out for classic pwm rc signals)\nboolean sbusinverted = false; // false = wired to non standard (inverted) sbus signal (for example from my \"micro rc\" receiver)\n// ibus communication (rx header, 13 channels not recommended, no failsafe, if bad contact in ibus wiring!) --------\n//#define ibus_communication // control signals are coming in via the ibus interface (comment it out for classic pwm rc signals)\n// sumd communication (rx header, 12 channels, for graupner remotes) --------\n#define sumd_communication // control signals are coming in via the sumd interface (comment it out for classic pwm rc signals)\n// ppm communication (rx header, 8 channels, working fine, but channel signals are a bit jittery) --------\n//#define ppm_communication // control signals are coming in via the ppm interface (comment it out for classic pwm rc signals)\nadjusting things in \"vehicles/yourvehiclepreset.h\":\nshaker\nadjust the shaker power for the different engine states to fit your needs:\n// shaker parameters (simulating engine vibrations) ---------------------------------------------------------------------\nconst uint8_t shakerstart = 100; // shaker power while engine start (max. 255, about 100)\nconst uint8_t shakeridle = 49; // shaker power while idling (max. 255, about 49)\nconst uint8_t shakerfullthrottle = 40; // shaker power while full throttle (max. 255, about 40)\nconst uint8_t shakerstop = 60; // shaker power while engine stop (max. 255, about 60)\nmore to come...\nchangelog (newest on top):\nnew in v 8.7:\ntrailer 5th wheel unlocking by servo ch4 can now also be used in combination with my \"micro rc\" remote. use \"#define mode2_trailer_unlocking\" in \"7_adjustmentsservos.h\"\nkenworth sounds reworked\nnew option for flickering lights during engine cranking in \"6_adjustmentslights.h\": \"#define flickering_while_cranking\"\nnew option for old vehicles with unsynchronised transmissions in \"4_adjustmentstransmission.h\": \"#define double_clutch\"\nnew vehicles: saurer 2dm swiss truck, peterbilt with detroit diesel 8v92, kenworth with open pipes cat 3408\nnew in v 8.6:\nmagirus mercur 125 air cooled v6 diesel truck sound\nnew in v 8.5:\nesp-now is only transmitting, if a variable in the packet has changed. advantages: longer battery life, esp32 stays cooler, less noise in the speaker\nsupport for multiple trailer slaves (intended for articulated cattle trailer)\nsupport for trailer servos (legs, ramps, rotating beacon control). controlled via horn pot (if hazards on / 5th wheel uncoupled)\nnew in v 8.4:\ntrailer software version for esp8266 added\ngerman magirus deutz 256 v8 truck sound added\nmaster volume scale is now logarythmic\nnew options in \"vehicle.h\": \"#define rpm_dependent_knock\", \"minknockvolumepercentage\", \"knockstartrpm\" allow to adjust the knock volume depending on engine rpm as well, not just depending on throttle input. a lot of vehicle sounds were optimised, using these options.\nnew in v 8.3:\nesp-now based 2.4ghz wireless trailer lights control. enable it in \"10_adjustmentstrailer.h\". you can use a 2nd controller in your trailer as a slave.\ntrailer software can be found in \"trailer/wirelesstrailer\" for now.\nnew in v 8.2:\nvisual studio code can now be used as an arduino ide replacement. libraries and board definitions are downloaded and configured automatically in this case.\nimportant: \"rc_engine_sound_esp32.ino\" is now named \"src.ino\" and located in the \"src\" folder. see chapter \"software\" above\nplease note, that the folder structure has changed. for example the \"audio2header.html\" sound conversion tool is now located in the \"tools\" folder.\nall vehicle- & sound-files are the same as before and fully compatible.\nnew in v 8.11:\nserious bug fixed: pwm communication mode was broken (thanks to benny for reporting this issue)! -> semaphore for multi tasking access to \"pwmbuf\" variable added, rtc watchdog timer changed\ndashboard lcd: jumpy instruments needle start animation bug fixed\ntested wit flysky fs-i6x in pwm mode and micro rc in sbus mode. both including lcd dashboard.\nnew in v 8.1:\nvariable tire squeal, depending on steering angle and speed as well as during heavy braking\nsee vehicle \"mercedesactrosv6.h\" race truck\nenable it with \"#define tire_squeal\"\nnew in v 8.0:\nautomatic rpm lowering, if not digging for 5s in excavator mode\nnew \"dashrotation\" variable allows to mount the dashboard lcd upside down: 3 = normal, 1 = upside down\nmaster volume bug fixed\nnew mercedes v6 fia race truck sound\nnew in v 7.9:\nhydraulic load dependent engine rpm drop for excavator mode\nbucket rattle sound, if bucket or dipper stick moved fast\nnew in v 7.8:\ncaterpillar 323 excavator sounds added including hydraulic and track rattling sounds\nsupport for hydlaulic excavators (hydraulic pump, hydraulic flow, track rattling sounds). use #define flysky_fs_i6s_excavator profile for remote\ni'm using it for my kabolite k336. connect rx to the ibus servo connector on the kabolite receiver\nnew in v 7.7:\nsupport for 0.96 inch 80x160 st7735 lcd dashboard (details and wiring see \"9_adjustmentsdashboard.h\", thanks to gamadril)\nsupport for 2812 neopixel led (details and wiring see \"6_adjustmentslights.h\", thanks to gamadril)\nsupport for graupner sumd protocol (thanks to gamadril)\nnew in v 7.6:\nactros sound optimised. more bass.\nmore light options in \"6_adjustmentslights.h\". xenon etc. this is more convenient than inside the vehicle files.\nservo output compiling error solved\nsupport for rotating beacons control in \"7_adjustmentsservos.h\": #define ch3_beacon. connect this beacon to ch3 (bus mode only): https://www.ebay.ch/itm/303979210629\nnew \"headlightparkingbrightness\" option in \"6_adjustmentslights.h\" allows to use the headlights as parking lights.\nnew in v 7.5:\nsupport for non linear throttle and steering curves (for more accurate control around center position). use \"exponential_throttle\" & \"exponential_steering\" in \"2_adjustmentsremote.h\"\nsupport for hobbywing quicrun fusion motor / esc combo. use \"#define quicrun_fusion\" in \"3_adjustmentsesc.h\"\nsupport for winch, connected to ch3 (bus communication mode only). use \"#define mode2_winch\" in \"7_adjustmentsservo.h\" the mode 2 button is then used to switch between horn / siren sontrol and winch control via ch4. the winch is controlled by an old rc servo driver board. the speed and neutral settings are done using \"ch3l\", ch3c\" and ch3r\" positions.\nnew in v 7.4:\nin \"2_adjustmentsremote.h\": new remote profile for flysky gt5 / reely gt6 evo / absima cr6p (thanks to blackbirdxl1 for making this profile)\nin \"2_adjustmentsremote.h\": new remote profile for mt-305. this remote comes with the rgt ex86100 crawler\n\"no_siren\" option. siren is not triggered in this case\n\"maxpwmrpmpercentage\" lowered from 400 to 380 to prevent controller from random crashing in pwm mlode\nmicroseconds channel signal range limited to 1000 - 2000. required for rgt mt-305 @ full throttle dual rate\nnew in v 7.3:\nnew jeep wrangler 392 hemi v8 (bombastic with a good bass speaker!)\noptimised v8 vehicles, using the new \"rpm_dependent_knock\" (in vehicle file) option. this makes the engine sound way more realistic and aggressive @ high rpm. ideal for \"muffler deleted\" vehicles.\nnew \"servo_debug\" option makes the servo calibration process easier. see \"7_adjustmentsservos.h\" tab\"\n\"virtual_3_speed\" not interfering with automatic transmissions anymore\n\"overdrive\" option for 6 speed automatic transmission as well, not just for 4 speed. it's recommendet to leave it turned on, unless you have a double clutch vehicle.\nnew in v 7.2:\n\"no_cablights\" bug fixed\nus_firetruck memory problem fixed\nchannel auto zero calibration reworked. see serial monitor, if you have issues. never use \"channelautozero = true\" for unconnected channels or channels without spring centering!\nindicators used as a debugger: the amount of blinks shows you the channel, which is not in neutral position (outside of 1400 - 1600 microseconds, check channel trim settings). indicators constantly on means, that no sbus signal is detected (check \"sbusinverted\" true / false in \"2_adjustmentsremote.h\").\nunimog u1000 with engine brake for hermann\nnew in v 7.1:\nservo output for shifting transmission now usable in combination with simulated automatic transmission. use it as an off road reducer, don't shift it while driving fast or @ high engine rpm!\nnew in v 7.0:\nin \"6_adjustmentslights.h\" tab: no_cablights\" will skip the cablights step in the light control sequence, if defined. use it, if your vehicle does not have cab lights. more light brightness options\nnew \"8_adjustmentssound.h\" tab for global sound options\nvehicle specific configurations in \"7_adjustmentsservos.h\" allow to store servo endpoints for multiple vehicles. useful, if the sound controller is used as an sbus decoder.\nnew chevy 468 big block v8\nnew land rover v8 with open pipes\nadjustable reverse speed for automatic transmissions: \"automaticreverseaccelerationpercentage\"\nnew \"overdrive\" option in \"4_adjustmentstransmission.h\" allows to lower the engine rpm in 4th automatic gear\nblinkleds.ino sketch for led test in /tools\nnew in v 6.9:\nnew \"jakebrake_engine_slowdown\" option, used in volvo fh trucks with open pipe. if defined, the engine rpm is lowered, using the jake brake, while upshifting under full load as well as when the throttle is released quickly in neutral. you can hear it in this video: https://www.youtube.com/watch?v=mu1iwzl33zw&list=ll&index=4\nnew volvo fh with open pipes\nnew gmc sierra v8 pickup with 3 speed automatic transmission\na lot of new horn melodies from nenno\nnew in v 6.81:\nthird brakelight bug fixed\n\u0443\u0440\u0430\u043b375 renamed to ural375 (windows is not able to read a mix of western and cyrillic letters)\nnew in v 6.8:\n\"steering_ramp_time\" allows \"scale\" steering servo movements (bus communication mode only)\nnew in v 6.7:\nman kat v8 diesel german bundeswehr military truck for onkel_tom\nnew in v 6.64:\nknown issues added\nnew in v 6.63:\ntrailer coupling / uncoupling sound triggering switch debounced, correct sounds should now be played every time\ntypos in trailer sound playback section fixed\nnew in v 6.62:\nesc state machine not locking up anymore, if \"escbrakesteps\" is bigger than \"pulseneutral\". this allows to achieve a more aggressive brake deceleration.\nnew in v 6.61:\n\"'couplingsamplecount' was not declared in this scope\" bug fixed\nnew in v 6.6:\ntrailer coupling & uncoupling sounds now triggered by a normally open switch, connected between pin 32 and gnd. intended to use the original tamiya switch.\nnew \"#define third_braklelight\" setting in the \"6_adjustmentslights.h\" tab. comment it out, if you want to use the switch above.\na trailer coupler (5th wheel) servo can now be connectet to the \"ch4\" header\" (not available in pwm communication mode). see note (3 in \"adjustmentsremote.xlsx\"\nnew in v 6.5:\nmacos big sur 11.x compiling error fix explained. see: big sur fix\ntrailer coupling & uncoupling sounds in preparation, not yet working\nnew in v 6.4:\nch1 & ch2 input pins can be used as pwm output for the steering servo and for the shifting servo. the outputs are active, if a bus communication mode (sbus, ibus or ppm) is selected. this allows to use vers small \"bus-only\" receivers. in this case, the servos are connected to the sound controller instead.\nadditional servo adjustments parameters in tab \"7-adjustmentsservo.h\" added:\n\"servo_frequency\" 50hz is standard, some servos run smoother @ 100hz.\nservo limits: left, center, right (allows to adjust both end points as well as the center point separately\nnew in v 6.3:\nadditional esc adjustments parameters in tab \"3-adjustmentsesc.h\" added. allows to optimise the hobbywing 1060 esc, even if it has no internal adjustments parameters:\n\"esctakeoffpunch\" adds more power, if accelerating from zero. used, if your \"clutch\" is slipping too much while taking off.\n\"escreverseplus\" allows to make the reverse speed faster (only, if \"escpulsespan\" is more than 500)\nadditional \"6_adjustmentslights.h\" tab:\n\"no_foglights\" will skip the foglights step in the light control sequence, if defined. use it, if your vehicle does not have fog lights\n\"sidelightsbrightness\" allows to adjust the brightness\" of your parking lights / side markers\nnew vehicle configurations like diesel and petrol landcruisers, generic 6 cylinder diesel (optimised for smaller speakers)\nnew in v 6.2:\ngaz 66 redefinition bug fixed\nsmd version bom error fixed\ninstructions pdf for ordering of pre assembled boards added\nstl data for smd version bottom shell included\nwastegate not triggered anymore while downshifting\nnew in v 6.1:\nsmd version tested\n\"indicator_side_markers\" option: indicators are always on with dimmed brightness, if side markeers / parking light is on. this is often used in us trucks. see \"kenworthw900acat3408.h\" vehicle configuration\nyou need to install the latest version of the \"statusled\" library: https://github.com/thediyguy999/statusled\nexperimental new throttle array for heavy trucks in \"curves.h\" you need to comment / uncomment it manually for now.\nnew in v 6.0:\npig sound for onkel_tom ;-)\nkenwworth w900a with cat3408 made more aggressive (more bass) & alternative profile\nsmd version preview\nnew in v 5.9:\nled pwm frequency is now 20khz instead of 500 hz. no pwm noise anymore in the speakers\nnew \"separate_full_beam\" option. wire your high beam lamps to the roof lights pin in this case\nnew \"indicator_side_markers\" option. indicators are used as side markers as well in this mode\nnew in v 5.8:\nman tgx 680 vehicle profile\nsmd board v1.1, incl. gerbers, bom & pick and place file (still untestet)\nnew in v 5.7:\nexperimental support for virtual 16 speed sequential transmission \"virtual_16_speed_sequential\"\nnew, alternative ural-375d vehicle preset\nindicators are now swichting on and off \"soft\" like incandescent bulbs, using an on and off ramp, if not defined \"led_indicators\" in the vehicle preset file. you need to use the latest statusled update: https://github.com/thediyguy999/statusled\nnew, untested smd board version included\nnew in v 5.6:\nhorn & siren with variable length (as long as triggered). \"audio2header.html\" tool changed to add the required loop area (you need to adjust it manually) in the sound files.\nhorn & siren can play @ the same time\nnew us fire truck (with cat3408 v8 & allison 6 speed automatic transmission) vehicle preset (use it to test the new variable length sounds)\nnew in v 5.5 (another big update):\nway more flexible channel assignment, can easily be configured for my \"micro rc\" remote, for a flsky fs-i6x or others. new \"2_adjustmentsremote.h\" config file. you don't have to change the main code anymore in order to assign your channels. for details refer to \"adjustmentsremote.xlsx\"\nnew, state machine controlled lights control, if \"#define auto_lights\" commented out. otherwise lights are controlled by the engine state\nnew, optional xenon bulb ignition flash for headlights, if \"#define xenon_lights\" defined\nnew option \"#define esc_dir\" allows to change the motor spinning direction in software\nnew option \"#define virtual_3_speed\" lets you use the 3 position switch controlled 3 speed transmission, even if it doesn't exist ;-)\nengine can be started manually by ch5 or automatically with the throttle stick (or the \"momentary1\" button on the \"micro rc\" remote). depending on setting \"#define auto_engine_on_off\"\nserial communication mode for \"micro rc\" remote removed (replaced with sbus)\nactions triggering rewritten, using updated rctrigger library. you have to use the latest version: https://github.com/thediyguy999/rctrigger\nadded the missing \"shifting\" file type & german dropdown translations in \"audio2header.html\"\nbug in mack super liner configuration fixed\nibus interface tested, works fine, but \"max_rpm_percentage\" > 350 will crash the esp32. i recommend to use sbus instead, because current flysky firmware can generate sbus signals as well.\n\"max_rpm_percentage\" automatically limited according to communication mode. required to prevent the controller from crashing (see above)\nin pwm mode, we can now read 6 channels\nppm interface moved to rx pin, pins \"35\" & \"ppm\" are now used for pwm channels 5 & 6\nbug fixed: wasteghate not triggered anymore while releasing brake rapidly\ntwo-stage triggering for bluelight and siren, so we can use the bluelight separately\nchanging between jake braking and the normal engine sound is locked unless the current sample is looping back. this eliminates erratic klicking noises, if enabling or disabling the jake brake!\nto prevent issues with the mode buttons, you should install the latest software v3.5 on the \"micro rc\" receiver\nif you use your own vehicle preset, you have to edit them, so that they use the same structure as the pre made ones. example: remove \"const\" in front of \"uint32_t max_rpm_percentage\"\nnew jake brake sounds for: actros, ural 4320, ural 375d, tatra 813 & m35. new dixie horn.\nnew in v 5.4:\nnew: volvo fh16 750, dodge ram 2500 with cummins 12v\n\"r6\" knock pattern for inline 6 engines\nnew in v 5.3:\npwm rc signal processing completely rewritten. it's now using the interrupt based esp32 \"rmt\" core function rather than pulseread(). thanks to croky_b for the hint! no \"max_rpm_percentage\" limitations anymore in pwm mode. 400% can now be used as well.\npwm ch5 is now accessible on pin 35. this means, that the ch5 functions can also be used in pwm mode!\ngear manual shifting sound not triggered anymore in automatic or doubleclutch mode. no need to disable it in automatic vehicles anymore.\nural4320, unimog 1000 optimised\nnew: kirovets k700 v12 diesel monster tractor with extreme turbo sound!\nnew in v 5.2 (a big update):\nnew, comfortable .wav to .h sound file converting tool (\"audio2header.html\" included). based on bitluni's work\nexperimental flysky ibus support (see comunications settings, untested, you need to install this library: https://github.com/bmellink/ibusbm)\nnew vehicle configuration structure: separate .h preset files for vehicles. select them in \"adjustments.h\". makes vehicle selection a lot easier.\nvehicle presets complely reworked. most of them are now including a rev sound, which is seamlessly mixed together with the idle sound. huge sound quality improvements!\nall vehicle specific presets and sound files are now located in \"/vehicles\"\nnew vehicles: defender td5, vw k\u00e4fer, actros 1863, scania v8 trucks, ural 375d, jaguar xjs, mgb gt v8, ford powerstroke 7.3l v8 diesel\nidle and rev sounds are now throttle dependent es well, not just rpm dependent. adjustable with \"fullthrottlevolumepercentage\". useful, if you don't want to use the separate knock sound.\n\"top_speed_multiplier\" renamed to \"max_rpm_percentage\", max. engine rpm now adjustable in % of idle rpm instead of integer multiplier. allows to do finer adjustments.\n\"adaptive_knock_volume\" renamed to \"v8\", added \"v2\" (these are ignition volume patterns for different engine types)\n\"caterpillar_mode\" renamed to \"tracked_mode\" (for track based vehicles with dual esc)\nnew \"super_slow\" option for very heavy, slow responding engines like locomotive diesels (see unionpacific2002.h)\n\"numberofautomaticgears\" setting moved from \"curves.h\" to \"adjustments.h\"\ngear ratio of 6 speed automatic transmission 1st gear changed, was too high\nexperimental pulseread function (using interrupts) for pwm mode (disabled)\nless aggressive rpm rise while downshifting the manual transmission\nremoved experimental \"multi slot knock samples\", takes too much processing power in interrupt and does not sound good\nnew in v 5.1:\ncompiler warnings issue solved\nrctrigger function moved to core 1 (current arduino ide required, 1.8.7 does not work!)\na lot of new functions (see below, triggered in \"void rctrigger()\")\njake brake sound added (ch5, sbus only) uncomment //#define jake_brake_sound, if you want to use it\nheadlight flasher and high / low beam switching added (ch5, sbus only)\nswitchable master volume: indoor and outdoor mode (ch5, sbus only)\nswitchable, virtual neutral for transmission, allows to rev the engine while standing still! (ch5, sbus only)\nkenworth w900a example configurations in caterpillar 3408 (v8 4 stroke) and detroit diesel 8v71 (v8 2 stroke) version\nnote, that you have to use the latest version of the rctrigger library\nnew in v 5.01:\nconfiguration mistake solved: \"adaptive_knock_volume\" (for v8) was not enabled in \"cat3408settings\" and *master\" setting\"\ncat 3408 peterbilt added\nnew in v 5.0:\nthe already existing \"rev_sound\" option is now fading over between the idle sound and the rev sound. this provides a very realistic behavior for heavy truck engines. example see \"cat3408settings\", \"messerschmitt bf109\", \"unimog u1000\". the fading threshold can be adjusted with the \"revswitchpoint\" variable\noptimized throttle fader for more realistic sound while gear shifting\noptimised wastegate triggering\noptimised and new sound examples: unimog u 1000 turbo, caterpillar 3408 (for king hauler)\nnote, that only the \"master\" settings example is listing all the .h files. use this as a base for own settings\nnew in v 4.9:\nignition knock sound is now triggered by the optional revving sound as well\nsounds and configuration example for messerschmitt bf 109 added (first example, which uses rev sound)\nnew in v 4.82:\nmissing .h files for the ural 2 setting added\nonce again thanks to man tgx for pointing out this issue\nnew in v 4.81:\nbugfix: several file names contained \"scan\u0131a\" (with turkish i) instead of \"scania\". this appears to be a problem under windows but works fine under macos\nexample configurations and .h files were reworked accordingly\nthanks to man tgx on the german rc modellbau portal for reporting this bug: https://www.rc-modellbau-portal.de/index.php?threads/esp32-arduino-rc-sound-und-licht-controller.7183/page-14#post-229253\nnew in v 4.8:\nthrottle fader for more natural knock behavior during take off\nimproved wiring and adjustments instructions down below\nnew insanely loud supercharger sound option\nexample see \"jeepcherokeetrackhawksettings\" (use 6 gears in \"curves.h)\nnew in v 4.7:\nexperimental support for my new rctrigger library added\nallows to trigger multiple latching and non latching actions per analog channel\nnote, that you have to install this library: https://github.com/thediyguy999/rctrigger\nnew in v 4.6:\n75mm tank cannon fire sound and flash added\ntriggered via ch4\nflash is using \"beacon 1\" output\nexample settings: caterpillar_mode\nnew in v 4.5:\ncaterpillar_mode (dual throttle input on ch2 & ch3 for tanks, diggers, bulldozers etc.\nno esc control support in this mode! wire two crawler type esc (with direct brake) in partallel with ch2 & ch3 inputs, use dual headers)\nexample settings: caterpillar_mode_settings (copy and paste it in \"adjustments.h\")\nalso working in sbus mode (allows to use additional sounds)\nnew v12 tank sound from jps952\nnew in v 4.4:\njeep grand cherokee trackhawk added. speaker with good bass reproduction needed!\ndaf xf truck added\nadaptive knock volume added (the first knock per engine cycle will be louder, if defined \"adaptive_knock_volume\", adjust volume for others with \"dieselknockadaptivevolumepercentage\" (see daf xf settings)\n\"settings\" files cleaned up\nnew in v 4.3:\nsimulated sequential double clutch transmission added. variable \"doubleclutch\" in \"adjustments.h\". see ferrari setting (use 6 gears in \"curves.h\")\nautomatic transmission shifting strategy is now more robust, no oscillation anymore. see chevy nova v8 setting (use 3 gears in \"curves.h\")\nknock sound for chevy nova v8 added. sounds just great in combination with the 3 speed automatic transmission!\nnew in v 4.2:\ndynamic, adaptive shift points for automatic transmission, depending on engine load allows economic driving\nkick down detection will shift back, if instant full throttle is applied\nreplaced \"sawtooth\" arrays for automatic gear ratios with three one dimensional arrays for 3, 4 or 6 gears\nreverse detection, only one gear in this case\ngear ratios according to allison datasheet (adjust reverse gear ratio according to your esc reverse top speed)\nprototype_36-pin renamed to prototype_36 to prevent compiler warnings\nsettings profiles for ferrari & trophy truck with 6 speed automatic transmission & chevy nova with 3 speed automatic transmission added\nnew in v 4.12:\nfurther automatic transmission fine tuning after big test drive with the actros\nnew in v 4.11:\nautomatic transmission optimised in 1/14 scale actros truck with hobbywing 1080 esc\nnew in v 4.1:\ninspired by wombii's fork of this repo: optimised simulated automatic transmission: load dependent \"torque converter slip\" added, optimised \"4 speed sawtooth array\", which is simulating the shifting points. now we have 4 gears instead of 3, but you still can uncomment the 3 speed version array and use it instead. i recommend to use \"automatic = true\" in \"adjustments.h\", if your rc vehicle does not have a real shifting transmission. my solution is way more simplistic than wombii's, but still sounding good. example settings see land rover and fire truck\nharley davidson optimised\nnew in v 4.0:\nfailsafe for sbus now implemented and tested in the king hauler build. the vehicle will do a controlled stop, if the sbus wire is disconnected\nthe sbus failsafe flag from the receiver should in theory do the same, but i was not yet able to test it\nnew in v 3.9:\ninitial sbus support on pin 36 \"vp\". tested in combination with my \"micro rc\" receiver (sw v3.4). only one single signal wire required!\nit's working fine, but failsafe is not yet ready. use it at your own risk!\nuse variables \"sbus_communication\" & \"sbusinverted\" (changing signal polarity without an additional transistor) in \"adjustments.h\" for configuration\nif you want to change the channel assignment, do it in readsbuscommands()\nthrottle overflow bug solved\nnew, optimized detroit diesel mix for the kinghauler see \"kinghaulersettings2\"\nnew in v 3.8:\nexperimental support for automatic transmission simulation. use \"automatic = true\" to activate it\neagle schematic now including .brd pcb file -> upload it on www.oshpark.com to order your boards easily\nnew in v 3.7:\n\"prototype_36-pin\" allows switching headlights pin between d0 & tx0 pin. required for the change to a 30 pin esp32 board, which will be used on the final pcb.\non the final pcb, the esp32 will be powered from the esc, the amplifier, the shaker and the led from the on board 5v regulator. this requires to remove the popping noise, which is generated, when the dac offset of 128 is activated. so i added a fader for the dac offset.\nnew in v 3.61:\ntatra 813 v12 8x8 sound optimised\nnew cooling fan & knock sounds\nnew in v 3.6:\nengine cooling fan sound added\nscania 50 ton truck added\nair cooled tatra 813 v12 8x8 truck added\nnew in v 3.5:\n\"dieselknockstartpoint\" variable allows to adjust the point where the volume of the knock sound is starting to increase\ndiesel knock sound triggering bug fixed\nmercedes actros & harley davidson sounds added\nexample files for vehicle specific settings added\nnew in v 3.4:\nexperimental support for separate engine revving sound. see \"rev_sound\" in adjustments.h (don't use it)\nnew diesel ignition \"knock\" sound (fixed sample rate), played in synch with the engine sound (variable sample rate). this results in a way more realistic diesel sound, because the ignition \"knock\" does not vary in pitch.\nengine sound is now mixed together from up to 4 sounds: idle, turbo, wastegate, diesel knock. all of them are variable in volume, depending on throttle position or engine rpm. you can adjust everything, using a lot of variables in \"adjustments,h\". the result is a very realistic engine sound. allows to use an engine rpm range of 3 instead of 2 without sounding strange\nnew squeaky brake sound\nup to 11 sounds are now played in parallel!\nnew in v 3.3:\ndimmed headlights during engine start\ninternational dt-466 sounds added\nnew scania v8 added\nbrake sound moved to the fixed sample rate playback interrupt\ncleaned up playback interrupt functions\ndac offset 128 moved to dacwrite()\nbrake sounds don't have to start & end @ -128 anymore\nparking brake sound added\npneumatic shifting sound added\nnew in v 3.2:\nadded the new \"wastegate\" sound. it is triggered, if the throttle is dropped rapidly\nadded unimog u 1000, uses the new wastegate sound\nadded am general m35 truck\nnew in v 3.1:\nadded a new, pretty realistic scania r620 \"straight pipe\" engine sound (scaniar620uphill2.h). pure goose flesh!\ndetroit diesel sounds with more bass added\na speaker with good bass reproduction is required!\nnew in v 3.0:\nramping esc signal faster below \"clutchengagingpoint\" to prevent clutch from excessive slipping\nsolved a 2nd engine rpm bug during braking\nnew in v 2.91:\nengine sound was slowing down too much during braking. this bug is now solved\nno turbo sound while braking: bug solved\nking hauler parameters fine adjusted\n\"clutchclosingpoint\" renamed to \"clutchengagingpoint\"\nnew in v 2.9:\n\"shiftingautothrottle\" is altering throttle for synchronizing while shifting the tamiya 3 speed transmission -> gearbox is protected, extreme realism in engine sound!\nmore inertia added, engine idle volume lowered to 40%\nnew in v 2.8:\n\"clutchclosingpoint\" configuration variable added. prevents engine sound from \"rubber band effect\". engine sound is in synch (clutch engaged) with esc power above this value\nvirtual clutch is also disengaging during gear shifting, allowing the engine rpm to settle down during shifting\nacceleration speed now variable, depending on throttle position\nadded way more inertia to make vehicle behavior even more realistic\nbrake has now much finer granularity\nnew in v 2.7:\nhornblasters train horns added\nhorns are now louder\ntrash removed\nacceleratoin & deceleration now shifting transmission gear dependent\nnew in v 2.6:\nindicator activation point adjustable with \"indicatoron\"\nnorwegian siren, new air brake sound\ndoor noise\nsound files moved to /sounds\noptimized bluelight patterns, using the new, optional \"delay\" variable. latest statusled library update required: https://github.com/thediyguy999/statusled\nnew in v 2.5:\n3rd brake light on pin 32 added\n\"escpulsespan\" > 1400 now working properly. allows to accelerate and decelerate even smoother as well as limiting the top speed to a realistic level\nnew in v 2.4:\nbug fixed: direct transition from state \"braking backwards\" to \"driving backwards\" now working\nfailsafe function for serial signal added. emergency brake is triggered in case of rc signal loss (serial & pwm mode only, ppm will follow)\nnew in v 2.3:\nreversing light, reversing beep and brake light behaviour changed in order to interact correctly with the new vehicle mass simulation\nesc is locked, if engine is not running ;-)\nair brake sound now triggered correctly, as soon as the brake pedal is released\ni'm really amazed about this update! the vecihle almost behaves like a real truck now.\nnew in v 2.2:\nsupport for crawler esc (with direct brake) on pin 33. vehicle mass simulation with proportional brake! tested in tamiya king hauler (reely model no h0050 esc) and working fine, but use it at your own risk! if you want to test it, connect esc to pin 33 of the esp32 instead of the receiver output.\nled pins rearranged to fit my board layout (you can change it in the pin assignment section)\nscania r620 sound added\nnew in v 2.1:\nadditional turbo sound (playing in parallel with engine sound), volume and throttle dependent volume adjustable\ncaterpillar 3406b sound added\nvw beetle sound added\nindicator direction adjustable with \"indicator_dir\" = \"true\" or \"false\"\nshaker rpm now adjustable for engine start, idle, full throttle & shutdown\nnew in v 2.0:\nswiss post bus horn moved to category \"sirens\" ---> replace existing .h file!\nexperimental esc output (do not use it). latest statusled library update required: https://github.com/thediyguy999/statusled\nmack truck sounds added\nnew in v 1.9:\nkenworth w900 added\ninitial ppm signal input on pin 34 added. for now usable for steering and throttle signal. uncomment \"#define ppm_communication\", if you want to use it.\nnew in v 1.8:\nled pins changed for trailer light driver\nhorn sounds, siren sounds & additional sounds variable names changed! ---> replace them all!\nadded more horns\nadded indicator (blinker) ticking sound\nadded independent volume adjustment for every sound\nengine sound volume is now throttle dependent (adjustable)\nnew in v 1.7:\nadded shaker motor control on pin 23. simulates engine vibration. irlz44n mosfet and freewheel diode 1n5819 required\nshaker power can be adjusted with the variables \"shakermin\" & \"shakermax\" in adjustments.h\ndriver schematic down below\ni'm using a shaker motor from the g.t.power kit 103061 (this controller is crap, but the accessories are useful)\nfoglight and side light pins moved to pins 18 & 19\nnew in v 1.6:\nservo input channels rearranged to match the pinout of the \"micro rc\" receiver (you can change it in the pin assignment section)\ncleaned up the code a bit\nan updated version (16 timers) of my \"statusled\" library is required: https://github.com/thediyguy999/statusled\nadded experimental support for serial communication with my \"micro rc\" receiver: https://github.com/thediyguy999/micro_rc_receiver\nuncomment \"#define serial_communication\" in adjustments.h\nconnect pin 36 \"vp\" to pin \"txo\" of the receiver (disable \"txo_momentary1\" & \"txo_toggle1\" in vehicleconfig.h)\nthe \"rc servo signals\" are not required in this mode!\nadded scania r500 v8 sounds\nnew in v 1.51:\nsolved issue: redefinition of 'const unsigned int samplerate'\nnew in v 1.5:\nmore detroit diesels added\nnew in v 1.4:\nindicator (turn signal) support added\nrc signals now handled as arrays in order to simplify auto zero calibration of multiple channels\nnew in v 1.3:\nirish fire truck horn\ndouble flash blue lights option\nus fire truck air horn and air siren\nnew in v 1.2:\nlight functions added: reversing light, beacons (blue light), headlights, taillights with integrated brake lights\nmy \"statusled\" library is required: https://github.com/thediyguy999/statusled\nnew in v 1.1:\ntruck reversing beep sound added\ncan play in parallel with other additional sound and with variable speed engine sound!\nnew in v 1.0:\nengine now slowing down, if switched off, not just fading out\nfader bug fixed, now working smoothly\nhg p408 sounds added\nnew in v 0.9:\nhumvee diesel engine sound added\ntruck pneumatic brake release sound added\nnew in v 0.8:\nvolume offset bug was back and is fixed again!\nimproved sound quality of union pacific 2002\ndetroit diesel truck added\nsine test tones added\nm2 sound added\nnew in v 0.7:\nfixed auto throttle zero calibration bug\nfixed \"gap\" bug, if sounds were triggered in pwm mode\npwm mode now allows to trigger 2 sounds\nnew in v 0.6:\nfixed slow engine rpm response: the rc signal pulsewidth is now only read every 100ms, so much more processing time is available for other things\nnew in v 0.5:\nadded idle sound volume adjustment variable \"idlevolumepercentage\" in \"adjustments.h\"\nadded union pacific 2002 sd70m 16 cylinder diesel locomotive sounds\nadded jaguar xjs he car sound (bad quality)\nadded \"pwmhorntrigger\" variable in adjustments.h\", which allows to trigger the horn, using a pwm signal. allows to use standard receivers\nnew in v 0.4:\nvolume offset bug fixed\nadded the typical swisss post bus horn, an american police siren, a european feuerwehr martinshorn and a car horn\nadded the varible \"shifted\", which allows to select between linear and shifted engine rpm response\nadded schematic\nnew in v 0.3:\nengine start / stop implemented, including starter sounds\nthree different start sounds available\nhorn implemented. it is played on pin 26 (see wiring instructions in code) triggered by switch on input 12\ntwo different horn sounds available\nthe horn can play in parallel with the variable speed engine sound!\nfor easier access, the \"settings.h\" file was renamed in \"adjustments.h\"\nnew in v 0.2:\nmany new 22'050hz, 8bit sound files generated, mostly the same as in the atmega 328 version, but in better quality :-)\nnew in v 0.1:\nruns on an esp32 (240mhz)\nit's still quick and dirty, but works with the included v8 short course truck idle sound\nsounds way better than the atmega 328 version, thanks to 22'050hz sampling rate (instead of 8'000hz)\nprototypes:\n2019 - 2020, thediyguy999", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000387, "year": null}], "name": "excavatorarduino"}