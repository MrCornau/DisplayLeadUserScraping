{"interestingcomments": [{"Unnamed: 0": 315, "autor": 315, "date": null, "content": "OSHMI - Open Substation HMI\nA modern SCADA HMI for substations, IoT and other automation applications.\nSee demo here: http://vmi233205.contaboserver.net:51909/\nThis project exists because we believe that by combining existing open source projects and tools we can create a very capable, mobile and cloud-friendly HMI system that can rival proprietary software. This approach makes it possible to sum the forces of each project (Chromium, SVG/HTML5, PHP, Lua, SQLite, Inkscape, OpenDNP3, Nginx, Vega, PostgreSQL, Grafana,\u2026) to achieve a great set of open, evergreen, modular and customizable tools for building great HMIs for automation projects. If you also believe this is possible, please give OSHMI a try and collaborate with the project!\nMobile and Cloud friendly.\nCreated for substation automation and control centers, but can be used for IoT and general SCADA HMI automation applications.\nJSON over UDP data and control interface for easy integration with IoT devices and other systems.\nBuilt with open source, web based technologies and tools: SVG, HTML5, Javascript, PHP, Lua, QT, SQLite, Nginx, Inkscape, Vega.\nStrong focus on UX and High Performance HMI / ISA101 compatible graphics.\nRedundant mode of operation, dual server/ ?n? clients. Unlimited points, clients, monitors and viewers.\nEasy configuration with plain text files.\nIEC 60870-5-104 (QTester104), DNP3, MODBUS, OPC UA/DA, Siemens S7 and ICCP protocol drivers. Can connect to IEC61850 devices using protocol converters.\nThe client web interface can be accessed by modern IOS, Android devices or by an HTML5 browser.\nPlease notice that OSHMI does NOT function by itself as a protocol gateway!\nSome Features:\nScreen Viewer: full-graphics, vector based, lossless zoom (SVG). Amazing Vega charts engine. Scale great graphics from the cellphone to the video-wall.\nEvents Viewer: millisecond resolution; can operate with field time tags or local time tags; 2 stage acknowledgement/elimination; historical mode.\nTabular Viewer: point list shown filtered by substation and bay.\nAlarms Viewer: displays alarms, with filters by substation and priority.\nTrend Viewer: follow measurements plot in real time.\nCurves Viewer: historical measurement plot.\nExcel Worksheet w/ macros to manage configuration.\nRecording of historical data to a SQLite database.\nIntegration with MS PowerBI and Tableau using OData and JSON.\nLua Scripting language for the server environment. Javascript language for screen (client side) scripts.\nAutomation functions can be implemented in LUA (e.g. substation restoration, tap control).\nDistinct treatment for digital states, alarms and protection events. Range check for analog values. Calculation of points.\nDedicated Shell that can replace the standard Windows Shell and can restrict access only to the HMI functions.\nExcellent Inkscape-based graphics editor to create SVG graphics with SCADA animations.\nUse of Desktop Notifications for breaker opening by protection.\nNo need for any browser plugin!\nSoftware languages: english and portuguese. Can be easily translated to other languages (UTF-8 user interface).\nContact me here: https://www.linkedin.com/in/ricardo-olsen/\nFollow my blog: http://ricolsen1supervc.wordpress.com\nSee configuration tips on Youtube channel: https://www.youtube.com/channel/UCgpwj3TdP5jYrfr80_0eHYQ\nArticles:\nUse cases: https://goo.gl/5fPSfp\nInstallation: https://goo.gl/DRgBzG\nSome graphics designed and obtained from Freepik https://www.freepik.com/\nThis is not a toy project! It's been actually used in dozens of substations up to 230kV level and in control centers.\nFeel free to ask any question.", "link": "https://github.com/riclolsen/OSHMI", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "plot", "selectorShort": "plot", "MarkedSent": "oshmi - open substation hmi\na modern scada hmi for substations, iot and other automation applications.\nsee demo here: http://vmi233205.contaboserver.net:51909/\nthis project exists because we believe that by combining existing open source projects and tools we can create a very capable, mobile and cloud-friendly hmi system that can rival proprietary software. this approach makes it possible to sum the forces of each project (chromium, svg/html5, php, lua, sqlite, inkscape, opendnp3, nginx, vega, postgresql, grafana,\u2026) to achieve a great set of open, evergreen, modular and customizable tools for building great hmis for automation projects. if you also believe this is possible, please give oshmi a try and collaborate with the project!\nmobile and cloud friendly.\ncreated for substation automation and control centers, but can be used for iot and general scada hmi automation applications.\njson over udp data and control interface for easy integration with iot devices and other systems.\nbuilt with open source, web based technologies and tools: svg, html5, javascript, php, lua, qt, sqlite, nginx, inkscape, vega.\nstrong focus on ux and high performance hmi / isa101 compatible graphics.\nredundant mode of operation, dual server/ ?n? clients. unlimited points, clients, monitors and viewers.\neasy configuration with plain text files.\niec 60870-5-104 (qtester104), dnp3, modbus, opc ua/da, siemens s7 and iccp protocol drivers. can connect to iec61850 devices using protocol converters.\nthe client web interface can be accessed by modern ios, android devices or by an html5 browser.\nplease notice that oshmi does not function by itself as a protocol gateway!\nsome features:\nscreen viewer: full-graphics, vector based, lossless zoom (svg). amazing vega charts engine. scale great graphics from the cellphone to the video-wall.\nevents viewer: millisecond resolution; can operate with field time tags or local time tags; 2 stage acknowledgement/elimination; historical mode.\ntabular viewer: point list shown filtered by substation and bay.\nalarms viewer: displays alarms, with filters by substation and priority.\ntrend viewer: follow measurements -----> plot !!!  in real time.\ncurves viewer: historical measurement plot.\nexcel worksheet w/ macros to manage configuration.\nrecording of historical data to a sqlite database.\nintegration with ms powerbi and tableau using odata and json.\nlua scripting language for the server environment. javascript language for screen (client side) scripts.\nautomation functions can be implemented in lua (e.g. substation restoration, tap control).\ndistinct treatment for digital states, alarms and protection events. range check for analog values. calculation of points.\ndedicated shell that can replace the standard windows shell and can restrict access only to the hmi functions.\nexcellent inkscape-based graphics editor to create svg graphics with scada animations.\nuse of desktop notifications for breaker opening by protection.\nno need for any browser plugin!\nsoftware languages: english and portuguese. can be easily translated to other languages (utf-8 user interface).\ncontact me here: https://www.linkedin.com/in/ricardo-olsen/\nfollow my blog: http://ricolsen1supervc.wordpress.com\nsee configuration tips on youtube channel: https://www.youtube.com/channel/ucgpwj3tdp5jyrfr80_0ehyq\narticles:\nuse cases: https://goo.gl/5fpsfp\ninstallation: https://goo.gl/drgbzg\nsome graphics designed and obtained from freepik https://www.freepik.com/\nthis is not a toy project! it's been actually used in dozens of substations up to 230kv level and in control centers.\nfeel free to ask any question.", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000315, "year": null}, {"Unnamed: 0": 951, "autor": 951, "date": null, "content": "What's LetsHack About\nLetsHack provides a collection of notes and howto's that have been put together since 2016. A lot of the learning that you will find here is based on the long hours spent hacking on my numerous Raspberry Pi's, Arduino's, ESP8266, ESp32's, etc. i've got lying around the house. This website is labour of love documenting my learning including lessons learned along the way.\nLetsHack initially started as a collection of notes and howto's that I put together mostly written up to serve as guides, notes to myself. These notes to myself were intended to serve as a reminder for the various systems administration, setup and programming tasks i would usually need to perform when i pick up a new Raspberry Pi, Arduino, ESP, etc. This site initially started with a primary focus on the Raspberry Pi but over a period of time as I began hacking with the Arduino Uno, Ardino MEGA, ESP8266, ESP32, etc. I've ended up listing all of those relevant notes, howto's documenting learning on each of these devices along the way.\nHopefully some of the information here will be useful to some of you out there who might stumble across simliar issues when hacking with your own Raspberry Pi, Arduino, ESP8266 or ESP32.\n!!! Keep hacking !!!\nHowTos -\nBrowser Controlled Robot with Streaming Video\nCustom Node Red Installation\nCurses based Command Line Radio Player\nConfiguring Wireless Adapter for the Raspberry Pi on the Command Line\nConfiguring your Arduino IDE for use with the ESP32 (NodeMCU - DevKit v1 - DOIT)\nConfiguring your Arduino IDE for use with the ESP8266 (NodeMCU - DOIT)\nGit Tutorial\nGit SSL Issues and how you might fix them\nHacking the Disk Layout on a Raspberry Pi Model A\nInstalling Alexa on the Raspberry Pi\nIoT - Building a Temperature, Humidity monitoring setup using the NodeMCU ESP8266 and the DHT11, DHT22 sensors\nIntegrating Scratch with micro:bit for MS windows\nConfiguring Raspbian on the Raspberry Pi 3\nSetting up your Raspberry Pi to monitor your home remotely using Rpi Cam\nSSH and SCP connections hang on launch\nSSH and SCP connection failures when connecting from remote machines\nTurn your Raspberry Pi 3 into a smart audio streaming solution using Mopidy\nYoutube on the Command Line\nJust Code : Projects Completed + Projects Under Development -\nObtain MAC address on the NodeMCU ESP8266\nObtain MAC address on the NodeMCU ESP32\nBlink LED's - Interacting with LED's through GPIO\nDetect motion using a PIR Sensor and raising an alarm\nInteracting with Analog Sensors (PIR Module) using the ADC (MCP 3008) and the Raspberry Pi\nIoT - Measure Soil Moisture using the ESP8266, Soil Moisture Sensor, Relay & send data to Twitter\nIoT - Obtain Temperature & Humidity using DHT11, DHT22 on the NodeMCU ESP8266\nIoT - ESP8266 Web Server + Remote Relay Control + Display Temp & Humidity data obtained from DHT11 : RoboIndia board\nIoT - Obtain Temperature & Humidity data from ESP8266 on RoboIndia Blynk Board\nIoT - Obtain Temperature & Humidity using the DHT11, Raspberry Pi & uploading data to ThingSpeak\nIoT - Obtain Temperature & Humidity data from the Arduino MEGA (DHT 11) & uploading data to ThingSpeak\nIoT - Weather data acquisition on the Raspberry Pi using OWM and upload to ThingSpeak\nIoT - Weather data acquisition and write to LCD on the Raspberry PI\nIoT - Weather data acquisition and write to Twitter on the Raspberry PI\nIoT - Obtain sensor data using Arduino MEGA2560, ENCj2860 (Ethernet Module) and display data on a web page\nRobotics - GoPiGo keyboard controlled robot\nRobotics - GoPiGo browser controlled robot\nRobotics - GoPiGo GUI (PyGame Framework) controlled robot\nRobotics - GoPiGo obstacle avoidance robot\nFace detection usuing : Python + OpenCV + Raspberry Pi Camera + Amazon Web Services (AWS)\nSimple Face detection : Python + OpenCV + AWS Rekognition\nDetecting faces in a video stream : Python + OpenCV + AWS Rekognition\nDetecting faces in a video stream + STT (Speech To Text) : Python + OpenCV + AWS S3 + AWS Rekognition\nFace detection using Python + OpenCV + AWS S3 + AWS Rekognition with multiple faces within the source image\nSensing light using the Photo Resistor Light Sensor Module\nIn The Works -\nDocumentation / HowTo's\nEvolution of the Raspberry Pi\nOverview of the Raspberry Pi 3\nBurning the SD Card & Booting up your Raspberry Pi\nConfiguring your Raspberry Pi to connect to a Wireless Network\nPerforming basic configuration on your Raspberry Pi using \"raspi-config\"\nSetting up your Raspberry Pi for remote (Command Line) access using SSH\nSetting up your Raspberry Pi for remote (GUI) access using VNC\nSetting up your RaspberryPi 3 to able to VNC (remote connection) to the main display\nLinux survival basics - Introduction to the BASH shell and key commands\nMounting an external Windows recoginzed USB Device (& File System) on the RaspberryPi 3\nSetting up a USB Web Camera on Raspberry Pi 3\nConfiguring the Raspberry Pi to play audio, video\nInteracting with the real world using GPIO. Build simple circuits.\nChanging the default sound output on the Raspberry Pi 3\nInstalling and testing a USB mike on the Raspberry Pi 3\nBrowser controlled robot with streaming video.\nSetting up your Raspberry Pi to monitor your home remotely using Rpi Cam\nInstalling Alexa on the Raspberry Pi\nOpenCV - Face detection using AWS S3, AWS Rekognition, AWS Lambda. Read out current weather on positive match.\nTurn your Raspberry Pi into a smart audio streaming solution using Mopidy\nHacking the disk layout on a Raspberry Pi Model A\nCustom Node Red Installation\nCurses based command line radio player.\nGit Introductory Tutorial\nDealing with Git SSL issues on windows.\nYoutube on the Command Line\nIoT - Building a Temperature, Humidity monitoring setup using the NodeMCU ESP8266, DHT11/ DHT22 sensors.\nSSH and SCP connections hang when connecting from remote machines\nTurn your Raspberry Pi 3 into a smart audio streaming solution using Mopidy\nProjects\nMy connected Smart Home\nGraph data collected via sensors, plot in real time\nConnect up RF 433mHz to NodeMCU ESP8266 to open/close Garage Door\nImportant Links -\nRaspberry Pi Foundation\nBBC Microbit\nArduino.cc\nArduino.org\nCicrcuito - Drag and drop interface to design circuits and auto-generate code\nPiBakery - Create pre-configured SD card images for your Raspberry Pi\nEtcher - Write Raspberry Pi Image to the SD Card\nWin32DiskImager - Write Raspberry Pi Images to the SD Card\nFritzing - Software to design circuits\nPiNet - Centralised user accounts & file storage system for a Raspberry Pi Classroom\nPi-Finder\nDocumentation & Tutorials -\nAdafruit Electronics Tutorials\nSparkfun Electronics Tutorials\nAll About Circuits\nCircuitbasics\nDIYProjects.IO\nHackster.io\nHackaday\nInstructables\nInitialstate\nAll About Circuits\nMaker.Pro\nCactus.io\nDIY Hacking\nRandom Nerd Tutorials\nProgramming Electronics\nHello World Magazine\nRaspberry Pi Learning Resources for kids\nRaspberry Pi Magazine\nInstalling OpenCV 3 on the Raspberry Pi 3 (Raspbian Jessie)\nPi Moroni Tutorials\nPi My Life Up\nMakezine's guide to boards for makers\nMakezine - Magazine for makers\nESP8266 - IoT\nA Begginers Guide to the ESP8266\nESP8266 Wifi Shield for Arduino Uno, Arduino MEGA 2560 by Diot.AM\nESP Tutorials by RandomNerdTutorials\nESP32 - IoT\nESP32 Tutorials by Luca Dentella\nESP32 Tutorials by TechTutorialsX\nKolban's Tutorials @ Youtube\nPCBReflux's Tutorials @ Youtube\nAndreas Spiess's Tutorials @ Youtube\nArduino.cc\nArduino Basics - Blog\nArduino Blog - http://arduino-er.blogspot.com.au\nA Beginners Guide to the Arduino\nJaycar Arduino Projects\nRobotics - Custom Raspberry Pi Robots\nMaker Projects For Kids\nGetting started with Scratch on the Raspberry Pi\nScratch for Arduino\nExperimental Extensions for Scratch - Arduino, BBC Microbit, etc.\nScratch GPIO\nCode Club\nRaspberryPi Digital Maker Curriculum for kids\nRaspberry Pi Learning Resources for kids\nHello World Magazine\nCoderDojo\nCoderDojo Resources for volunteers\nEdublocks\nSonicPi\nComputing At School - UK\nBBC Microbit\nCamJam Edu Kit\nRaspberry Pi Education Manual\nMaking Science With Google\nPurchasing Electronics, Arduino's, Rapberry Pi's Online -\nAdafruit\nSparkfun\nLittle Bird Electronics\nTronix Labs\nCore Electronics\nJaycar\nRobotgear Australia\nFreetronics\nPakronics\nAusElectronicsDirect\nDigikey\nThanks for visiting -\nHopefully you have found some value in the guides that have been published at this site. If you have any input or feedback please drop me an email at trevor at practical performance analyst dot com. You can see the rest of my open contributions at Github\nWho is tangowhisky37 -\ntangowhisky37 is the pseudonym that Trevor (Warren) has used for a while now. Its inspired by his love for the physics of aviation. Trevor (Warren) is passionate about challenging the status-quo and finding reasons to innovate. Over the past 15 years he has been delivering complex systems, has worked with very large clients across the world and constantly is looking for opportunities to bring about change.\nHis love for working with people and harnessing the power of the collective human intellect he believes helps him deliver the expected outcomes. Trevor constantly strives to combine his passion for delivering outcomes with his ability to build long lasting professional relationships. You can learn more about the work he does at LinkedIn. You can download a copy of his CV at VisualCV. Visit the Github for details of the projects he's been hacking with.", "link": "https://github.com/tangowhisky37/LetsHack", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "plot", "selectorShort": "plot", "MarkedSent": "what's letshack about\nletshack provides a collection of notes and howto's that have been put together since 2016. a lot of the learning that you will find here is based on the long hours spent hacking on my numerous raspberry pi's, arduino's, esp8266, esp32's, etc. i've got lying around the house. this website is labour of love documenting my learning including lessons learned along the way.\nletshack initially started as a collection of notes and howto's that i put together mostly written up to serve as guides, notes to myself. these notes to myself were intended to serve as a reminder for the various systems administration, setup and programming tasks i would usually need to perform when i pick up a new raspberry pi, arduino, esp, etc. this site initially started with a primary focus on the raspberry pi but over a period of time as i began hacking with the arduino uno, ardino mega, esp8266, esp32, etc. i've ended up listing all of those relevant notes, howto's documenting learning on each of these devices along the way.\nhopefully some of the information here will be useful to some of you out there who might stumble across simliar issues when hacking with your own raspberry pi, arduino, esp8266 or esp32.\n!!! keep hacking !!!\nhowtos -\nbrowser controlled robot with streaming video\ncustom node red installation\ncurses based command line radio player\nconfiguring wireless adapter for the raspberry pi on the command line\nconfiguring your arduino ide for use with the esp32 (nodemcu - devkit v1 - doit)\nconfiguring your arduino ide for use with the esp8266 (nodemcu - doit)\ngit tutorial\ngit ssl issues and how you might fix them\nhacking the disk layout on a raspberry pi model a\ninstalling alexa on the raspberry pi\niot - building a temperature, humidity monitoring setup using the nodemcu esp8266 and the dht11, dht22 sensors\nintegrating scratch with micro:bit for ms windows\nconfiguring raspbian on the raspberry pi 3\nsetting up your raspberry pi to monitor your home remotely using rpi cam\nssh and scp connections hang on launch\nssh and scp connection failures when connecting from remote machines\nturn your raspberry pi 3 into a smart audio streaming solution using mopidy\nyoutube on the command line\njust code : projects completed + projects under development -\nobtain mac address on the nodemcu esp8266\nobtain mac address on the nodemcu esp32\nblink led's - interacting with led's through gpio\ndetect motion using a pir sensor and raising an alarm\ninteracting with analog sensors (pir module) using the adc (mcp 3008) and the raspberry pi\niot - measure soil moisture using the esp8266, soil moisture sensor, relay & send data to twitter\niot - obtain temperature & humidity using dht11, dht22 on the nodemcu esp8266\niot - esp8266 web server + remote relay control + display temp & humidity data obtained from dht11 : roboindia board\niot - obtain temperature & humidity data from esp8266 on roboindia blynk board\niot - obtain temperature & humidity using the dht11, raspberry pi & uploading data to thingspeak\niot - obtain temperature & humidity data from the arduino mega (dht 11) & uploading data to thingspeak\niot - weather data acquisition on the raspberry pi using owm and upload to thingspeak\niot - weather data acquisition and write to lcd on the raspberry pi\niot - weather data acquisition and write to twitter on the raspberry pi\niot - obtain sensor data using arduino mega2560, encj2860 (ethernet module) and display data on a web page\nrobotics - gopigo keyboard controlled robot\nrobotics - gopigo browser controlled robot\nrobotics - gopigo gui (pygame framework) controlled robot\nrobotics - gopigo obstacle avoidance robot\nface detection usuing : python + opencv + raspberry pi camera + amazon web services (aws)\nsimple face detection : python + opencv + aws rekognition\ndetecting faces in a video stream : python + opencv + aws rekognition\ndetecting faces in a video stream + stt (speech to text) : python + opencv + aws s3 + aws rekognition\nface detection using python + opencv + aws s3 + aws rekognition with multiple faces within the source image\nsensing light using the photo resistor light sensor module\nin the works -\ndocumentation / howto's\nevolution of the raspberry pi\noverview of the raspberry pi 3\nburning the sd card & booting up your raspberry pi\nconfiguring your raspberry pi to connect to a wireless network\nperforming basic configuration on your raspberry pi using \"raspi-config\"\nsetting up your raspberry pi for remote (command line) access using ssh\nsetting up your raspberry pi for remote (gui) access using vnc\nsetting up your raspberrypi 3 to able to vnc (remote connection) to the main display\nlinux survival basics - introduction to the bash shell and key commands\nmounting an external windows recoginzed usb device (& file system) on the raspberrypi 3\nsetting up a usb web camera on raspberry pi 3\nconfiguring the raspberry pi to play audio, video\ninteracting with the real world using gpio. build simple circuits.\nchanging the default sound output on the raspberry pi 3\ninstalling and testing a usb mike on the raspberry pi 3\nbrowser controlled robot with streaming video.\nsetting up your raspberry pi to monitor your home remotely using rpi cam\ninstalling alexa on the raspberry pi\nopencv - face detection using aws s3, aws rekognition, aws lambda. read out current weather on positive match.\nturn your raspberry pi into a smart audio streaming solution using mopidy\nhacking the disk layout on a raspberry pi model a\ncustom node red installation\ncurses based command line radio player.\ngit introductory tutorial\ndealing with git ssl issues on windows.\nyoutube on the command line\niot - building a temperature, humidity monitoring setup using the nodemcu esp8266, dht11/ dht22 sensors.\nssh and scp connections hang when connecting from remote machines\nturn your raspberry pi 3 into a smart audio streaming solution using mopidy\nprojects\nmy connected smart home\ngraph data collected via sensors, -----> plot !!!  in real time\nconnect up rf 433mhz to nodemcu esp8266 to open/close garage door\nimportant links -\nraspberry pi foundation\nbbc microbit\narduino.cc\narduino.org\ncicrcuito - drag and drop interface to design circuits and auto-generate code\npibakery - create pre-configured sd card images for your raspberry pi\netcher - write raspberry pi image to the sd card\nwin32diskimager - write raspberry pi images to the sd card\nfritzing - software to design circuits\npinet - centralised user accounts & file storage system for a raspberry pi classroom\npi-finder\ndocumentation & tutorials -\nadafruit electronics tutorials\nsparkfun electronics tutorials\nall about circuits\ncircuitbasics\ndiyprojects.io\nhackster.io\nhackaday\ninstructables\ninitialstate\nall about circuits\nmaker.pro\ncactus.io\ndiy hacking\nrandom nerd tutorials\nprogramming electronics\nhello world magazine\nraspberry pi learning resources for kids\nraspberry pi magazine\ninstalling opencv 3 on the raspberry pi 3 (raspbian jessie)\npi moroni tutorials\npi my life up\nmakezine's guide to boards for makers\nmakezine - magazine for makers\nesp8266 - iot\na begginers guide to the esp8266\nesp8266 wifi shield for arduino uno, arduino mega 2560 by diot.am\nesp tutorials by randomnerdtutorials\nesp32 - iot\nesp32 tutorials by luca dentella\nesp32 tutorials by techtutorialsx\nkolban's tutorials @ youtube\npcbreflux's tutorials @ youtube\nandreas spiess's tutorials @ youtube\narduino.cc\narduino basics - blog\narduino blog - http://arduino-er.blogspot.com.au\na beginners guide to the arduino\njaycar arduino projects\nrobotics - custom raspberry pi robots\nmaker projects for kids\ngetting started with scratch on the raspberry pi\nscratch for arduino\nexperimental extensions for scratch - arduino, bbc microbit, etc.\nscratch gpio\ncode club\nraspberrypi digital maker curriculum for kids\nraspberry pi learning resources for kids\nhello world magazine\ncoderdojo\ncoderdojo resources for volunteers\nedublocks\nsonicpi\ncomputing at school - uk\nbbc microbit\ncamjam edu kit\nraspberry pi education manual\nmaking science with google\npurchasing electronics, arduino's, rapberry pi's online -\nadafruit\nsparkfun\nlittle bird electronics\ntronix labs\ncore electronics\njaycar\nrobotgear australia\nfreetronics\npakronics\nauselectronicsdirect\ndigikey\nthanks for visiting -\nhopefully you have found some value in the guides that have been published at this site. if you have any input or feedback please drop me an email at trevor at practical performance analyst dot com. you can see the rest of my open contributions at github\nwho is tangowhisky37 -\ntangowhisky37 is the pseudonym that trevor (warren) has used for a while now. its inspired by his love for the physics of aviation. trevor (warren) is passionate about challenging the status-quo and finding reasons to innovate. over the past 15 years he has been delivering complex systems, has worked with very large clients across the world and constantly is looking for opportunities to bring about change.\nhis love for working with people and harnessing the power of the collective human intellect he believes helps him deliver the expected outcomes. trevor constantly strives to combine his passion for delivering outcomes with his ability to build long lasting professional relationships. you can learn more about the work he does at linkedin. you can download a copy of his cv at visualcv. visit the github for details of the projects he's been hacking with.", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000951, "year": null}, {"Unnamed: 0": 995, "autor": 995, "date": null, "content": "OpenIoT\nLightweight open source IoT platform for makers\nControl your IoT devices from the cloud with OpenIoT. The platform allows you to update code over the air, set up custom notifications and access its components in real time. OpenIoT currently supports ESP8266 boards with programming using Arduino environment.\nInstallation\nYou need an Arduino environment IDE with ESP8266 support. Arduino IDE and PlatformIO are recommended.\nAdd the OpenIoT Library to Arduino IDE or PlatformIO.\nRegister on the platform, add a new thing and follow the steps for a quick start.\nUsage\nOpenIoT works by attaching components (GPIO, Variables and Functions) to the platform, using the library.\nLearn how to use the library in the docs. Examples can be found in the examples directory.\nOTA Updates\nOver the air firmware updates\nFuture development of the platform will include an IDE (like Arduino Create). Current OTA only allows uploading of a compiled binary file. Future development will also optimize the process and allow a ~70% flash size usage, but current process limits you to 50% flash size. It means that if your board has flash size (PROGRAM) of 4MB, then your sketch can only use 50% of it (2MB). That is because the new firmware has to be stored alongside current firmware for update. You can extract your compiled binary file quite easily with Arduino IDE and PlatformIO.\nSelf Hosting\nYou can host the platform and all communication handling on your own server. You are going to need a linux machine and a firebase account. Check out the step by step tutorial\nAPI\nOpenIoT provides support for a REST API to enable you to programmatically communicate with your Thing (reboot, read/write operations, data history, logs and more). Learn more in the API docs.\nSupported Boards\nAs of now, only ESP8266 is supported. I do wish to add support for as many boards as possible. Any help with this task is appreciated.\nNodeMCU - Before starting to use, make sure you're familiar with its pinout.\nTo Do\nBridge pub/sub to Firebase and control MQTT (input + output) from there for better performance.\nCreate OTA temp file to allow better usage of flash size.\nTry the library with other ESP8266 boards (Wemos D1, Generic ESP8266 etc)\nGithub sign in\nFeatures Roadmap\nSuggestions and \"voting\" for certain urgancy of different features are welcome.\nWeb IDE - for OTA firmware updates\nMobile App\nGithub OTA - push OTA updates from Github\nAPI - http api for 3rd party applications\nData Charts - log components data on platform and plot charts with it.\nWifi Manager - add support for Wifi Manager (insert wifi credentials via web server instead of hard-coding)\nCoding Hub - create applications that can control multiple Things in one code\nContribute\nAll contributions and contributors are welcome. If you've ran into issues, please look if there's a similar one opened already. If not, open a new one. Contribution can also be done with future development in the form of:\nTesting the platform environment on different OS and devices.\nTesting the library on different devices (as long they are supported of course).\nAdjusting the library in order to support other devices and environments.\nHelp with developing new features.\nReport coding architacture and security issues.\nLibrary Release History\n0.1.3\nAdded support for WiFiManager and external wifi management in general.\n0.1.2\nAdded support for self hosting\n0.1.1\nFixed digital read/write operations\n0.1.0\nFirst release\nWhat's New\n13/05 - API Support\n08/05 - Data charts and logs for GPIO & Variable components\n05/05 - WiFi Manager support added to library\n02/05 - Self hosting capability added", "link": "https://github.com/ItayRosen/OpenIoT", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "plot", "selectorShort": "plot", "MarkedSent": "openiot\nlightweight open source iot platform for makers\ncontrol your iot devices from the cloud with openiot. the platform allows you to update code over the air, set up custom notifications and access its components in real time. openiot currently supports esp8266 boards with programming using arduino environment.\ninstallation\nyou need an arduino environment ide with esp8266 support. arduino ide and platformio are recommended.\nadd the openiot library to arduino ide or platformio.\nregister on the platform, add a new thing and follow the steps for a quick start.\nusage\nopeniot works by attaching components (gpio, variables and functions) to the platform, using the library.\nlearn how to use the library in the docs. examples can be found in the examples directory.\nota updates\nover the air firmware updates\nfuture development of the platform will include an ide (like arduino create). current ota only allows uploading of a compiled binary file. future development will also optimize the process and allow a ~70% flash size usage, but current process limits you to 50% flash size. it means that if your board has flash size (program) of 4mb, then your sketch can only use 50% of it (2mb). that is because the new firmware has to be stored alongside current firmware for update. you can extract your compiled binary file quite easily with arduino ide and platformio.\nself hosting\nyou can host the platform and all communication handling on your own server. you are going to need a linux machine and a firebase account. check out the step by step tutorial\napi\nopeniot provides support for a rest api to enable you to programmatically communicate with your thing (reboot, read/write operations, data history, logs and more). learn more in the api docs.\nsupported boards\nas of now, only esp8266 is supported. i do wish to add support for as many boards as possible. any help with this task is appreciated.\nnodemcu - before starting to use, make sure you're familiar with its pinout.\nto do\nbridge pub/sub to firebase and control mqtt (input + output) from there for better performance.\ncreate ota temp file to allow better usage of flash size.\ntry the library with other esp8266 boards (wemos d1, generic esp8266 etc)\ngithub sign in\nfeatures roadmap\nsuggestions and \"voting\" for certain urgancy of different features are welcome.\nweb ide - for ota firmware updates\nmobile app\ngithub ota - push ota updates from github\napi - http api for 3rd party applications\ndata charts - log components data on platform and -----> plot !!!  charts with it.\nwifi manager - add support for wifi manager (insert wifi credentials via web server instead of hard-coding)\ncoding hub - create applications that can control multiple things in one code\ncontribute\nall contributions and contributors are welcome. if you've ran into issues, please look if there's a similar one opened already. if not, open a new one. contribution can also be done with future development in the form of:\ntesting the platform environment on different os and devices.\ntesting the library on different devices (as long they are supported of course).\nadjusting the library in order to support other devices and environments.\nhelp with developing new features.\nreport coding architacture and security issues.\nlibrary release history\n0.1.3\nadded support for wifimanager and external wifi management in general.\n0.1.2\nadded support for self hosting\n0.1.1\nfixed digital read/write operations\n0.1.0\nfirst release\nwhat's new\n13/05 - api support\n08/05 - data charts and logs for gpio & variable components\n05/05 - wifi manager support added to library\n02/05 - self hosting capability added", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000995, "year": null}], "name": "plotIot"}