{"interestingcomments": [{"Unnamed: 0": 502, "autor": 502, "date": null, "content": "SquirrelJME\nSquirrelJME is a Java ME 8 Virtual Machine for embedded and Internet of Things devices. It has the ultimate goal of being 99.9% compatible with the Java ME standard.\nThis project is purely written in Java, with a small secondary C project, and is very easy to port to different hardware. For running on native hardware, a compiler handles the conversion of Java byte code to machine code (in an intermediate format). Any system specific APIs are accessed via standardized system calls that handle the logic the compiler cannot provide. An execution engine which is written in C, it offers a lightweight method of code execution.\nAdditionally, there is a port of SquirrelJME to RetroArch which enables the ability to play older J2ME software and games designed for flip-phones.\nCopyright (C) 2013-2021 Stephanie Gawroriski xer@multiphasicapps.net\n\"SquirrelJME\" and \"Lex\" are trademarked by Stephanie Gawroriski 2016-2021\nLex and The SquirrelJME Logo were illustrated by...\nKat Adam-MacEwen\nKat@CMYKat Designs & Illustrations http://www.cmykat-designs.com/\nPlease support me on Patreon!\nDedicated to Emily (1998-2020), the developer of Mu, you will not be forgotten. Rest in peace.\nDedicated to Near (1983-2021), the developer of Higan, Ares, etc., may your soul rest in peace. You will not be forgotten.\nBadges:\nChecks and Quality\nSocial and Community\nDownloads and Activity\nDonations\nInformation:\nUser Guide\nCode of Conduct\nLicense\nSource: GNU General Public License, Version 3 or later\nAssets: Creative Commons CC-BY-SA 4.0\nFonts : SIL Open Font License Version 1.1\nThird Party Licenses\nContributing to SquirrelJME\nEnd-User Documents\nBuilding\nChangelog\nCompatibility\nHistory\nRelease Roadmap\nDeveloper Resources\nCircleCI Status\nDeveloper Guide\nDeveloper Notes\nDesign Document\nPorting SquirrelJME\nProject Scope\nCLDC 1.8 API (docs.oracle.com)\nRepository\nOnline repository (HTTPS, Tor (A), Tor (B))\nSquirrelJME uses fossil http://fossil-scm.org/.\nThe repository may be cloned using Fossil:\nOne of these commands:\nfossil clone -u http://squirreljme.cc/ squirreljme.fossil\nfossil clone -u https://squirreljme.cc/ squirreljme.fossil\nfossil clone -u http://vzwveldr7djnlpg7ujslaqre632htbl3unkmfbltpgumevw63jn47dad.onion/ squirreljme.fossil\nfossil clone -u http://hrkzpyi33og6j5z3anfpjuqkawvkw4kxyasrp64elg3i6dffihmdhxad.onion/ squirreljme.fossil\nfossil clone -u http://squirrelmfbf2udn.onion/ squirreljme.fossil\nmkdir squirreljme\ncd squirreljme\nfossil open ../squirreljme.fossil\nAlternatively via GitHub:\ngit clone https://github.com/SquirrelJME/SquirrelJME\ncd SquirrelJME\nAlternatively via repo.or.cz:\ngit clone https://repo.or.cz/SquirrelJME.git\ncd SquirrelJME\nTrunk Source Snapshot (Main website or fossil serve only):\nTAR.GZ\nZIP\nLinks\nMy Portfolio\nMy Public PGP Key\nSquirrelJME Twitter\nSquirrelJME Mastodon\nLocations where you can get support:\nDiscord\nLiberaChat (IRC) (Bridged to Discord)\n#squirreljme -- Main Support\n#squirreljme-softwares -- Software channel\n##squirreljme -- Off-Topic\nReddit\nFront facing social media:\nYouTube\nTwitter\nDocker Hub\nSourceForge\nPersonal Accounts (If you wish to contact me this way)\nGitHub\nKeybase\nLinkedIn\nMastodon (awoo.space)\nTwitter\nYouTube (Personal)\nE-Mail: xer@multiphasicapps.net\nGoals\nTo be small - Smaller programs are easier to maintain and are usually simpler.\nTo be fast - With the potential of AOT/JIT, systems that do not normally have a port of an existing virtual machine will usually only have an interpreter.\nTo be compatible - So that existing Java ME 8 applications can run on this virtual machine, along with J2ME applications when required. This has the added bonus of allowing one to use older software to catalog for preservation.\nTo compile once and run anywhere - Current and up to date Java implementations are limited only to a few select systems (Solaris, Linux, BSD, Mac OS X, and Windows). Java ME 8 as of this writing only supports the FRDM-K64F (dropped), STM32429I-EVAL, Raspberry Pi, Intel Galileo Gen2 (preview), and STM 32F746G DISCOVERY (preview) all of which are either out of date or discontinued by their manufacturers. There are multitudes of devices that support J2ME, however that is horribly out of date when compared with the Java that is used today (J2ME is equal to Java 1.4 which was released in 2002).\nDonations\nYou may donate to SquirrelJME to which would be used by the author to keep the web server online, the purchasing of new hardware/software, and for the purchasing of food items for consumption.\nKo-Fi\nPatreon\nLiberapay\nBitCoin (BTC/XBT): 3NEF6Pyt2JfWnb6hn7WFcwH5jpkHYPkTNj\nBitCoin Cash (BCH): qrgww4z9aalgxyyddh5ax8jyy34c89phxuklp3hcwd\nEthereum (ETH): 0x7C2316f5336C63855C199784a6e145921145B74a\nEthereum Classic (ETC): 0x1b30e6411bd7da6dd72cA35dabD5b98BA25A0Ae7\nLiteCoin (LTC): MAogNXdjPQ7ZABtpeXztCHf4UXvfiwTuGX\nStellar Lumens (XLM): GB4O2MAMTINKS6GM6RH34KO32TJMF4QZKZTFJBE4HIPFMKRBXFQ7IAF6.\nXRP (XRP):\nTag: 2912047087\nAddress: rw2ciyaNshpHe7bCHo4bRWq6pqqynnWKQg\nZCash (ZEC): t1cBD4dJYNWs5TQk1JKFNy1Qkg3TBx8noXQ\nImportant Statements\nJAVA AND ALL OTHER RELATED TRADEMARKS AND COPYRIGHTS ARE OWNED BY ORACLE CORPORATION http://www.oracle.com/.\nSQUIRRELJME IS NEITHER PRODUCED BY, ENDORSED BY, NOR SUPPORTED BY ORACLE CORPORATION.\nALL SOURCE CODE IS WRITTEN BY MYSELF WITH FUNCTIONALITY DETERMINED BY THE DOCUMENTED APIS AND RUN-TIME BEHAVIOR. I HAVE NOT LOOKED AT THE SOURCE CODE FOR OTHER IMPLEMENTATIONS, NEITHER FREE SOFTWARE NOR PROPRIETARY IMPLEMENTATIONS. ESSENTIALLY SQUIRRELJME IS A CLEAN-ROOM IMPLEMENTATION OF THE DESIGN OF JAVA ME 8. THE IMPLEMENTATIONS OF THE JAVA ME 8 APIS AND ASSOCIATED JSRS/JEPS IS CONSIDERED BY MYSELF (STEPHANIE GAWRORISKI) TO BE IN THE FAIR USE.\nTHIS SOFTWARE IS INCOMPLETE AND IN ITS CURRENT STATE IS NOT CURRENTLY 100% COMPATIBLE WITH JAVA ME 8. THERE ARE CURRENTLY NO STABLE RELEASED VERSIONS OF THIS SOFTWARE. AS SUCH THE FIRST MAJOR VERSION RELEASE WILL BE WHEN IT IS COMPATIBLE SO AS TO NOT VIOLATE POTENTIAL LICENSES, AND IF POSSIBLE BE VERIFIED WITH ANY APPLICABLE TCKS (SO IT WOULD BE AN \"OFFICIAL\" IMPLEMENTATION).", "link": "https://github.com/SquirrelJME/SquirrelJME", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "trunk", "selectorShort": "trunk", "MarkedSent": "squirreljme\nsquirreljme is a java me 8 virtual machine for embedded and internet of things devices. it has the ultimate goal of being 99.9% compatible with the java me standard.\nthis project is purely written in java, with a small secondary c project, and is very easy to port to different hardware. for running on native hardware, a compiler handles the conversion of java byte code to machine code (in an intermediate format). any system specific apis are accessed via standardized system calls that handle the logic the compiler cannot provide. an execution engine which is written in c, it offers a lightweight method of code execution.\nadditionally, there is a port of squirreljme to retroarch which enables the ability to play older j2me software and games designed for flip-phones.\ncopyright (c) 2013-2021 stephanie gawroriski xer@multiphasicapps.net\n\"squirreljme\" and \"lex\" are trademarked by stephanie gawroriski 2016-2021\nlex and the squirreljme logo were illustrated by...\nkat adam-macewen\nkat@cmykat designs & illustrations http://www.cmykat-designs.com/\nplease support me on patreon!\ndedicated to emily (1998-2020), the developer of mu, you will not be forgotten. rest in peace.\ndedicated to near (1983-2021), the developer of higan, ares, etc., may your soul rest in peace. you will not be forgotten.\nbadges:\nchecks and quality\nsocial and community\ndownloads and activity\ndonations\ninformation:\nuser guide\ncode of conduct\nlicense\nsource: gnu general public license, version 3 or later\nassets: creative commons cc-by-sa 4.0\nfonts : sil open font license version 1.1\nthird party licenses\ncontributing to squirreljme\nend-user documents\nbuilding\nchangelog\ncompatibility\nhistory\nrelease roadmap\ndeveloper resources\ncircleci status\ndeveloper guide\ndeveloper notes\ndesign document\nporting squirreljme\nproject scope\ncldc 1.8 api (docs.oracle.com)\nrepository\nonline repository (https, tor (a), tor (b))\nsquirreljme uses fossil http://fossil-scm.org/.\nthe repository may be cloned using fossil:\none of these commands:\nfossil clone -u http://squirreljme.cc/ squirreljme.fossil\nfossil clone -u https://squirreljme.cc/ squirreljme.fossil\nfossil clone -u http://vzwveldr7djnlpg7ujslaqre632htbl3unkmfbltpgumevw63jn47dad.onion/ squirreljme.fossil\nfossil clone -u http://hrkzpyi33og6j5z3anfpjuqkawvkw4kxyasrp64elg3i6dffihmdhxad.onion/ squirreljme.fossil\nfossil clone -u http://squirrelmfbf2udn.onion/ squirreljme.fossil\nmkdir squirreljme\ncd squirreljme\nfossil open ../squirreljme.fossil\nalternatively via github:\ngit clone https://github.com/squirreljme/squirreljme\ncd squirreljme\nalternatively via repo.or.cz:\ngit clone https://repo.or.cz/squirreljme.git\ncd squirreljme\n-----> trunk !!!  source snapshot (main website or fossil serve only):\ntar.gz\nzip\nlinks\nmy portfolio\nmy public pgp key\nsquirreljme twitter\nsquirreljme mastodon\nlocations where you can get support:\ndiscord\nliberachat (irc) (bridged to discord)\n#squirreljme -- main support\n#squirreljme-softwares -- software channel\n##squirreljme -- off-topic\nreddit\nfront facing social media:\nyoutube\ntwitter\ndocker hub\nsourceforge\npersonal accounts (if you wish to contact me this way)\ngithub\nkeybase\nlinkedin\nmastodon (awoo.space)\ntwitter\nyoutube (personal)\ne-mail: xer@multiphasicapps.net\ngoals\nto be small - smaller programs are easier to maintain and are usually simpler.\nto be fast - with the potential of aot/jit, systems that do not normally have a port of an existing virtual machine will usually only have an interpreter.\nto be compatible - so that existing java me 8 applications can run on this virtual machine, along with j2me applications when required. this has the added bonus of allowing one to use older software to catalog for preservation.\nto compile once and run anywhere - current and up to date java implementations are limited only to a few select systems (solaris, linux, bsd, mac os x, and windows). java me 8 as of this writing only supports the frdm-k64f (dropped), stm32429i-eval, raspberry pi, intel galileo gen2 (preview), and stm 32f746g discovery (preview) all of which are either out of date or discontinued by their manufacturers. there are multitudes of devices that support j2me, however that is horribly out of date when compared with the java that is used today (j2me is equal to java 1.4 which was released in 2002).\ndonations\nyou may donate to squirreljme to which would be used by the author to keep the web server online, the purchasing of new hardware/software, and for the purchasing of food items for consumption.\nko-fi\npatreon\nliberapay\nbitcoin (btc/xbt): 3nef6pyt2jfwnb6hn7wfcwh5jpkhypktnj\nbitcoin cash (bch): qrgww4z9aalgxyyddh5ax8jyy34c89phxuklp3hcwd\nethereum (eth): 0x7c2316f5336c63855c199784a6e145921145b74a\nethereum classic (etc): 0x1b30e6411bd7da6dd72ca35dabd5b98ba25a0ae7\nlitecoin (ltc): maognxdjpq7zabtpexztchf4uxvfiwtugx\nstellar lumens (xlm): gb4o2mamtinks6gm6rh34ko32tjmf4qzkztfjbe4hipfmkrbxfq7iaf6.\nxrp (xrp):\ntag: 2912047087\naddress: rw2ciyanshphe7bcho4brwq6pqqynnwkqg\nzcash (zec): t1cbd4djynws5tqk1jkfny1qkg3tbx8noxq\nimportant statements\njava and all other related trademarks and copyrights are owned by oracle corporation http://www.oracle.com/.\nsquirreljme is neither produced by, endorsed by, nor supported by oracle corporation.\nall source code is written by myself with functionality determined by the documented apis and run-time behavior. i have not looked at the source code for other implementations, neither free software nor proprietary implementations. essentially squirreljme is a clean-room implementation of the design of java me 8. the implementations of the java me 8 apis and associated jsrs/jeps is considered by myself (stephanie gawroriski) to be in the fair use.\nthis software is incomplete and in its current state is not currently 100% compatible with java me 8. there are currently no stable released versions of this software. as such the first major version release will be when it is compatible so as to not violate potential licenses, and if possible be verified with any applicable tcks (so it would be an \"official\" implementation).", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000502, "year": null}, {"Unnamed: 0": 526, "autor": 526, "date": null, "content": "miZy - tiny fast embedded linux\nSupport Us - Donate\nhttps://hyphop.github.io/donate/\nmiZy - tiny fast embedded linux\nhttps://hyphop.github.io/mizy/\nsupported Boards\nmiZy special optimized for Allwinner H3 H2+ (SoC features a Quad-Core Cortex-A7 ARM CPU) boards\nhttps://linux-sunxi.org/Category:H3_Boards\nhttps://linux-sunxi.org/Category:H2%2B_Boards\nhttps://linux-sunxi.org/H2%2B#Variants\nFrendly Arm boards\nFrendly Arm - testing ... plz wait https://github.com/hyphop/miZy/wiki/friendly-arm\nOrange Pi boards\nOrange Pi Zero h2+ - TESTED OK\nOrange Pi Zero Plus2 h3 - TESTED OK\nOrange Pi Zero R1 - TESTED OK\nOrange Pi One - TESTED OK\nOrange Pi PC - TESTED OK\nOrange Pi PC+ -\nOrange Pi Plus2E -\nOrange Pi Lite -\ncheck more there http://www.orangepi.org/\nOther boards\nand many other Allwinner H2+ H3 boards...\nPartial ( NAND InProgress ) (04/30/2019)\nSunvell H3 2GB RAM + 16GB ROM TV Box\nOriginal M95 PRO Android TV Box Allwinner H3\nWechip R69 Allwinner H3 TV Box\nSmart TV Box CX-968/Allwinner H3\nMXpro Android 7.1 tv box 1g 8g Allwinner H3\nmake request for test & support other boards by email or via commit\nmiZy main features\nbest for embedded or IOT usage (hi stable and tolerant for power off/lost and boot in any case again )\nfast boot just 5-10sec\nextreme tiny image size 8-16M\nusable for SPI flash - 8M-16M (any another system not usable for spi flash)\nloaded from any FEL / SPI / mmc / sd / usb sources / NET / ETH\nmizy is ALL IN RAM system + zero disk write mode ( write by user requst only ) flash friendly + maximum flash life time\ndiskless mode, ramfs + squashfs + overlay system ready\noptimized for low power usage 0.1A + low temp+ no need active cooling\neasy fast firmware image builder + Development kit - make custom firmware just for several minutes\nmizy suitable for any usage like IOT, audio, music, video, wireless, network, storage, automate system, rescue, sunxi device test\nhigh optimized legacy linux kernel + special mizy patches\nfully sunxi soc hardware support : CPU freq i2s + SPDIF +DAC + ACD / SPI / i2c / HDMI CVBS / IR / USB OTG / SERIAL / MMC / SSD / WIFI + ethernet ...\nadvaced U-boot + special mizy patches ( i2c display splash / full read write SPI flash support, FEL mode, rescue mode.... )\ncompitable with OpenWrt trunk software repository\nmiZy is full open source project ( 1 year more active development )\nmany other features check it https://hyphop.github.io/mizy#news\nPlans! What to do next\nnext improve miZy code\nwrite good wiki manuals docs and annotation\nusage examples / more demo firmware\nprepare and open another miZy parts in public access as opensource\nmake bigger community - ( because now i'm only one + some users testers from hobbyist forums and sites )\nmake quality support\nand many other\nlets Try\nsome miZy firmware images in free access available for download\nhttps://github.com/hyphop/miZy/releases\nhttps://github.com/hyphop/miZy-images-collection\nSources\nsome parts of miZy project already is opened for public usage:\nhttps://github.com/hyphop/miZy\nhttps://github.com/hyphop/miZy-uboot\nhttps://github.com/hyphop/miZy-linux-kernel\nhttps://github.com/hyphop/miZy-spi-image-builder\nhttps://github.com/hyphop/miZy-openwrt-sdk\nhttps://github.com/hyphop/miZy-builder\nhttps://github.com/hyphop/miZy-tools\nhttps://github.com/hyphop/miZy-images-collection\nhttps://github.com/hyphop/miZy-busybox\nWiKi / Mans / Docs\nhttps://github.com/hyphop/miZy/wiki\nHelper channel\nhttps://hyphop.github.io/mizy/helper/\nLINKS\nhttps://twitter.com/mizy_linux\nAUTHOR\n## hyphop ##", "link": "https://github.com/hyphop/miZy", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "trunk", "selectorShort": "trunk", "MarkedSent": "mizy - tiny fast embedded linux\nsupport us - donate\nhttps://hyphop.github.io/donate/\nmizy - tiny fast embedded linux\nhttps://hyphop.github.io/mizy/\nsupported boards\nmizy special optimized for allwinner h3 h2+ (soc features a quad-core cortex-a7 arm cpu) boards\nhttps://linux-sunxi.org/category:h3_boards\nhttps://linux-sunxi.org/category:h2%2b_boards\nhttps://linux-sunxi.org/h2%2b#variants\nfrendly arm boards\nfrendly arm - testing ... plz wait https://github.com/hyphop/mizy/wiki/friendly-arm\norange pi boards\norange pi zero h2+ - tested ok\norange pi zero plus2 h3 - tested ok\norange pi zero r1 - tested ok\norange pi one - tested ok\norange pi pc - tested ok\norange pi pc+ -\norange pi plus2e -\norange pi lite -\ncheck more there http://www.orangepi.org/\nother boards\nand many other allwinner h2+ h3 boards...\npartial ( nand inprogress ) (04/30/2019)\nsunvell h3 2gb ram + 16gb rom tv box\noriginal m95 pro android tv box allwinner h3\nwechip r69 allwinner h3 tv box\nsmart tv box cx-968/allwinner h3\nmxpro android 7.1 tv box 1g 8g allwinner h3\nmake request for test & support other boards by email or via commit\nmizy main features\nbest for embedded or iot usage (hi stable and tolerant for power off/lost and boot in any case again )\nfast boot just 5-10sec\nextreme tiny image size 8-16m\nusable for spi flash - 8m-16m (any another system not usable for spi flash)\nloaded from any fel / spi / mmc / sd / usb sources / net / eth\nmizy is all in ram system + zero disk write mode ( write by user requst only ) flash friendly + maximum flash life time\ndiskless mode, ramfs + squashfs + overlay system ready\noptimized for low power usage 0.1a + low temp+ no need active cooling\neasy fast firmware image builder + development kit - make custom firmware just for several minutes\nmizy suitable for any usage like iot, audio, music, video, wireless, network, storage, automate system, rescue, sunxi device test\nhigh optimized legacy linux kernel + special mizy patches\nfully sunxi soc hardware support : cpu freq i2s + spdif +dac + acd / spi / i2c / hdmi cvbs / ir / usb otg / serial / mmc / ssd / wifi + ethernet ...\nadvaced u-boot + special mizy patches ( i2c display splash / full read write spi flash support, fel mode, rescue mode.... )\ncompitable with openwrt -----> trunk !!!  software repository\nmizy is full open source project ( 1 year more active development )\nmany other features check it https://hyphop.github.io/mizy#news\nplans! what to do next\nnext improve mizy code\nwrite good wiki manuals docs and annotation\nusage examples / more demo firmware\nprepare and open another mizy parts in public access as opensource\nmake bigger community - ( because now i'm only one + some users testers from hobbyist forums and sites )\nmake quality support\nand many other\nlets try\nsome mizy firmware images in free access available for download\nhttps://github.com/hyphop/mizy/releases\nhttps://github.com/hyphop/mizy-images-collection\nsources\nsome parts of mizy project already is opened for public usage:\nhttps://github.com/hyphop/mizy\nhttps://github.com/hyphop/mizy-uboot\nhttps://github.com/hyphop/mizy-linux-kernel\nhttps://github.com/hyphop/mizy-spi-image-builder\nhttps://github.com/hyphop/mizy-openwrt-sdk\nhttps://github.com/hyphop/mizy-builder\nhttps://github.com/hyphop/mizy-tools\nhttps://github.com/hyphop/mizy-images-collection\nhttps://github.com/hyphop/mizy-busybox\nwiki / mans / docs\nhttps://github.com/hyphop/mizy/wiki\nhelper channel\nhttps://hyphop.github.io/mizy/helper/\nlinks\nhttps://twitter.com/mizy_linux\nauthor\n## hyphop ##", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000526, "year": null}], "name": "trunkIot"}