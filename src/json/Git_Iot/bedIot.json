{"interestingcomments": [{"Unnamed: 0": 37, "autor": 37, "date": null, "content": "Bear Stone Smart Home Documentation\nBe sure to \u2b50 my configuration repo so you can keep up to date on any daily progress!\nThis Repo is designed for Smart Home inspiration. The configuration, devices, layout, linked Blog posts and YouTube videos should help inspire you to jump head first into the IOT world. This is the live working configuration of my Smart Home. Use the menu links to jump between sections. All of the code is under the config directory and free to use and contribute to. Be sure to subscribe to the Blog Mailing list and YouTube Channel. (https://YouTube.com/vCloudInfo)\nBlog | Devices | Todo List | Smart Home Stats | Follow Me | Code | Diagram | Youtube | Merch\nAs of 2018, I have migrated everything to a Docker based platform. You can read all about it here: Migration Blog Post\nNotable Software on my Laptop Host:\nDocker - Docker runs on a Ubuntu Server Core base. Video on Ubuntu Upgrades\nYoutube Video on Upgrading Home Assistant in Docker - Be sure to Subscribe to get all Home Assistant videos.\nHome Assistant Container - It all starts here.\nThe amazing Floorplan project to help visualize my smarthome.\nSSL via SSLS - 5 Bucks A Year! - Keeps me safe! - Youtube Video on Port Forwarding - On my Arris TG1682 Modem\nDocker-Compose.yaml - Realtime list of all the Containers.\nDasher Container to leverage those cheap Amazon Dash Buttons\nHomeBridge Container for full HA <-> Homekit compatibility.\nUnifi controller Container to manage APs\nLots of my gear comes from BetaBound for Beta Testing and reviews. Be sure to use the referral code 'Reliable jaguar' so we both get priority for Beta Tests!\nSmart Home Diagram - Get your icons (here).\nHere is how all the parts talk to each other. Keep reading to see code examples and explanations.\nSmart Home diagram (PNG). Made with Draw.io (XML source file).\nBatteries | Networking | Alexa | Mobile Devices | Nest | Voice | Hubs | Lights | Switches | Landscaping | DIY LED Lights | Garage | TV Streaming | Security | Cameras | Sensors\nBattery Backups - UPS Blog write-up\n3 Prong UPS\n2 Prong UPS\nTesla Powerwall 2\nThere aren't really automations for the Batteries yet. Electricity is the life blood for the house and only really the Tesla Battery has smarts so maybe in the future, you'll see a Powerwall automation in this space. But be sure to check out the Videos below:\nHow To Port Forward Home Assistant on Arris TG1682\nAdding Powerwall Sensors to Home Assistant\nNetworking\nUbiquiti Networks Unifi 802.11ac Pro\nUnifi Controller in the Cloud\nNetGear 16 Port unmanaged Switch\nCircle by Disney\nUsing the APs (3 of them), The house monitors all Connected devices for Online/Offline status and uses '' for presence detection. Any critical device down for more than 5 minutes and an alert is sent out. Circle is a Parental Control device. When a new device is discovered on the network, HA notifies us and also plays a TTS reminder over the speakers to classify in Circle. Most things are Wifi connected but a good gigabit switch is needed for a good foundation.\nTips to avoid WiFi Interference with your APs\nAlexa Echo Devices - Alexa Device Blog Post\nAmazon Echo\nAmazon Echo DOT\nAmazon Echo Tap\nAmazon Dash Wand\nThe Alexa devices in my house are for automation overrides. They are primarily an input device into Home Assistant. Using HA Cloud component, I am able to turn on /off most HA devices even if they don't have native Alexa support. The DOTs are littered around the house, the Tap is for Shower and Garage since it is super portable and the main echo fills the upstairs with Music. Voice input and playing Whole House Music are where Echoes excel! The Wand is pool side for quick commands and controlling the music if need be.\nAbility to ask Alexa to repeat the last Voice notification - 'Alexa, Turn on Last message'.\nGuest mode to disable certain interior automations. Trigger via Alexa. 'Alexa, Turn on Guest Mode.'\nTrack garbage days and chore days for the kids. Voice reminders and Alexa intergration/request for info.'\nContext aware lighting control.\nView the Alexa related videos on the vCloudInfo Youtube Channel.\nMobile Devices and Tablets - FloorPlan Blog post\niPads\niPhones\nDash Buttons\nAmazon Fire Tablets Gen 7\nMobile devices are a critical part of my Home Automation. They establish presence in the house and are the basis for many automations. Home? Turn on the lights. Leave? Turn them all off kind of thing. We use NMAP for presence detection.\nIOS Notifications for Offline Devices, BadLogins, HA Startups, new HA versions and IP Changes for DNS.\nReminders to take my medicine sent as IOS notifications ONLY when I arrive back home for the night.\nThe Tablets are for the awesome FloorPlan that you see in the images. We have 2 in the house mounted for quick consumption of all the HA data in a glance. We also leverage them as TTS endpoints. During certain times of the day, TTS is only played on the tablets rather than over the whole house. Other times, Notifications are sent only to the Mobile Devices rather than using speech.\nCustom Component Fire Tablet Media Player\nNest Products and SleepIQ - Thermostat Basics Blog post\nNest Thermostats\nNest Protects\nSleepNumber Bed i8\nWithings\nThis group of devices is basically for additional presence control. The Nest thermostats and Protects basically run themselves. The thermostat 'away' mode triggers my away scripts which turn items off. The Protects are SOLID smoke detectors. They really came in handy during Irma. The SleepIQ bed adds to my presence detection. It will notify HA if either side of the bed is occupied. More controls are coming but I use this extensively. The WiThings scale also triggers morning and goodnight routines depending on when I step on it during the day.\nTurn off lights when Nest Thermostats detects we are away. (Upstairs and Downstairs)\nTurn on Upstairs lights if Nest Thermostats detects people and it's nighttime.\n(IFTTT) Trigger Good Night routine when I step on the Withings scale after 10pm.\nTurn on bathroom accent lights when either of us steps out of bed at night. Turns them back off when we are back in bed.\nTurn off all interior lights when the last person gets into bed.\nSilence all Voice notifications if anyone is in bed. Redirect to Fire Tablets.\nVoice Notifications - Giving Voice to the Smart Home Blog Post\nChromeCast Audios\nAMPs\nMixer\nTP-Link Smart Plug\nTo me, Voice is the coolest part of the smart home. It gives it personality. It's something not just anyone has and helps your house stand apart from the pack. I use the Amazon Polly TTS component since it sounds the closest to Alexa. This gives a seemless transition from Alexa to Home Assistant responding. Most think it is just one system. The mixer allows TTS to mix right in over Music. The TP-Link Outlet is used to turn off the Mixer and AMP when we do not need it. It's a great inexpensive solution.\nTurn off all the voice devices when we are not home or in bed.\nAll voice notifications are pushed though a speech engine. Random words and sentences are used to give the house some personality.\nVoice announcements whenever someone comes home.\nVoice notifications for all sorts of things related to the house. (Temps, presence, doors open, windows open, garage door statuses, sunset.)\nDigital Cuckoo Clock that goes off each hour and on the half just like a real Cuckoo Clock.\nClick here for YouTube Videos related to Voice.\nOnce you can teach your house to talk, you just keep expanding on its vocabulary. It's addicting. :)\nVarious Hubs - Smart Home Parts/Sum Blog Post\nPhilips Hue Hub Gen 2\nWink Hub\nRM Pro by Broadlink\nPhilips Hue Hub Gen 1\nThe Hubs help the home communicate across all the various protocols running in the house. The Hue hubs (I have 2 actually) talk to most of the lights. The Gen 1 handles upstairs and outside and the gen 2 handles everything else. Some lights and switches talk over Zwave to the Wink Hub. The RM Pro talks 433Mhz to my EtekCity outlets.\nUsing [Etekcity Outlets](https://amzn.to/2efNoBP) to control accent lighting above kitchen cabinets and room cutouts.\nTurn on Hallway light for no more than 20 minutes when Pantry door is opened.\nDetects when lights are turned on and adjusts them to correct brightness based on time of day.\nThink of the Hubs each as bridges for HA to talk to various hardware around the house.\nLights Smart Home Parts/Sum Blog Post\nHue Colored lights\nGE Link Lightbulbs\nHue Go\nHue Lightstrip\nAlmost all my lights (40+) are white GE Link lights. I bought them early on before Hue came out with inexpensive white A19s. Even Ikea has great lights now. Colored lights are in the front sconces and also used in the living room. The Go lights are specifically for the kids since they are both wireless and also have a button on them making them very tactile for kids. I use the Lightstrips for TV backlighting and also couch accent lighting.\nTurn on TV Time Lights (dim and color) at Sunset (if home and TV is on)\nSets up the front lights in the house with preset colors depending on the ~~month~~ day!.\nTurns living room lights `red` when a Window or Door is opened past sunset. Resets to `yellow/gold` when all doors/windows are closed.\nTwo part series on replacing a fluorescent light with a Hue Smart Light - Step by Step\nClick here for YouTube Demos of the Holiday lights\nSwitches\nNoon Switches\nNunet Smart Plug\nSwitches Get Stitches\nEtekcity Outlets\nIn the Master Bedroom and Bathroom, I have deployed a starter set of 5 Noon Switches. These switches control the toilet light, both vanities and bedroom overhead light. They work on the wall and are also IFTTT compatible. The EtekCity outlets are the most inexpensive ($6) yet reliable outlets out there. I have them deployed all over the house as accent lighting with some rope lights in most of the home's cut outs.\nWhen interior light script is triggered, IFTTT is notified to turn off the Bathroom Noon switches.\nI've taken the Smart plugs and put them in a weatherproof case for holiday lights\nSecurity\nNodeMCU Development Boards\nAura Home Monitoring Motion Alarm\nHue Go\nFake Dog\nThe ESPs while technically not a Hub do bridge the connection to all the windows and door sensors that are hardwired in my house. One set acts as my DIY alarm system while the other act as DIY Motion Sensors. The Aura system uses Wifi waves to detect motion through walls. It covers the entire house. Scenes are activated via IFTTT/HA integration. When all else fails though, a good recording of a Bull Mastiff is sure to do the trick!\nShut down HVAC system if a Window or Door is left open for more than 5 minutes.\nPlay chime on all window and door open/closes.\nChange Aura scenes based on presence and sleep.\nCameras\nSkyBell HD\nFoscam 1080p Outdoor Camera\nSurveillance Drives\nMeraki MS220 8 port PoE switch\nCameras are both for security and data sensors. They can trigger motion events, lighting conditions or for doorbells, when someone presses it. Cameras and Access points are feed power via the Meraki PoE switch.\nOn motion from Doorbell turns front lights to Bright White lights for 10 minutes and then back to original colors. Fake Dog barking when there is motion by the house.\nWhen someone rings the Doorbell, the backyard and Bathroom lights Flash - Since we might not hear the doorbell. Fake Dog barks as well (which can be snoozed for 30 minutes via Alexa).\nOutdoor Landscaping\nRachio Sprinkler system\nGE ZWave Outdoor Power Module\nTeckin SS31 Outdoor Outlets\nOutdoor LED Lighting\nThe great outdoors can be automated too! Mainly lights but also the sprinkler system and water supply. The Phyn leak detector was announced in CES. It looks for abnormal flows and if senses them, alerts me and shuts water main. The Teckin SS31 outlets are hooked up to my 12v transformers allowing me to turn the landscaping lights on and off. The LED strips are DIY and the recipe is in the next section.\nClick Here for YouTube Videos!\n(IFTTT) Add a 1 day rain delay to Rachio Sprinkler system if it is going to rain tomorrow also logged to MQTT.\n(IFTTT) Blink ALL lights if Winds get to 70MPH - Hurricane warning.\nTurn on some outdoor Lights at Sunset, Turn off 4 hours before sunrise.\nTurn off interior and backyardlights when we go to sleep.\nOutdoor LED Accents - DIY Blog Post - #71\nLED RGB Wifi Controller - flux_led compatible\nLED Strip kits\nAluminum light Diffusers\nOutdoor Housing\nMentioned above, this is one of my favorite projects for the house. The ability to completely change the look of the house on the drop of a dime and on a dime budget is awesome. Read the blog post linked above for all the parts details but here are some automations I love. You can also watch the following Video (https://www.vcloudinfo.com/2018/10/easy-smart-home-gadgets-i-use-for-my.html)\nChange the front colors of the LED lights based on holidays. The best part is the LED controller works with HA right out of the box. No fiddling around with it at all. HUGE Plus in my book.\nWhen the garage doors open, change all lights in the front of the house to bright white.\nOn motion, turn all the lights to a bright white outside for a random amount of time before resuming the daily color choice.\nClick Here for YouTube Demos of the Holiday lights\nGarage Gadgets\nGaradget\nJuiceBox Pro 40 EVSE\nChevy Bolt Electric Car\nSiri, are my garage doors closed?\nGarage doors, Cars, charging stations. Going green. All part of a complete home automation setup. The garage door openers are probably the most important. No one wants to forget that they left them open when they've left or gone to bed. Closing forgotten garage doors makes it all worth it.\nNotifications when the garage door is left open at night or when we leave the house.\nVideos and Write up on Garadget Garage Door Opener\nMonitor the reflection rates of Garadget and notify when they being to drop too low when closed (indicating a shift in the controller)\nTweet out charging status of the car and how many KwH were charged in a session. #Stat\nMonitor AMPs and Voltage and alert if charge ever goes over 24A to prevent breaker tripping. (Juicebox is software derated to 24A on a 30A circuit.) Also restart Unit if unable to connect to eMotorWerks servers.\nTVs and Streaming Devices\nSamsung Smart TV\nRokus\nAmazon Fire TV\nSynology NVR 1218\nTV Automations are super cool. Turn on a movie and the lights begin to dim automatically. It's super cool. Out TVs are back lit with Hue Lightstrips so we can do some pretty neat effects with automations. We are #CordCutters as well so all out TV is streamed to the Rokus. FireTV for party games and the Snyology, I'll talk about later in the Survellance section.\nClick here for YouTube Video\nIf any Doors or Windows are open, the TV backlights turn Red.\nWhen the Roku reports we are watching Plex or TabloTV, TV Time scene is triggered dimming 2 of 4 living room lights.\nRainy days trigger extra subtle light (TV back lights and other accent lighting) inside the house.\nSensors\nDoor Sensors (AEON Labs)\nPi Zero\nWireless Nub\nEpson ET-7700 Printer\nSensors add data to Home Assistant. Most of my Doors and windows are hardwired but for some interior doors, I also have the wireless sensors. They connect to my Wink Hub. PiHole is running on my PiZero. It's super easy to install and runs DNS, DHCP and ad blocking for the whole house on a great little 5v form factor.\nTweet out daily Pi Hole stats. (Ads Blocked and % of bandwidth saved.)\nLeverage Alexa and Elekcity outlet to control Printer On/Off via Voice. Turns off automatically after 20 minutes.\nClick here for YouTube Videos!\nSound door chimes whenever doors open or close.\nWatch and alert on Home Assistant's Disk usage and Pi Zero.\nTodo List\nThe issues section on github is where I store all my wishful ideas and future enhancements. Feel free to join the conversations there.\nAll files are now being edited with Atom.\nAll of my configuration files are tested against the most stable version of home-assistant using Travis.\nStill have questions on my Config?\nMessage me on twitter : or\nYou can buy me a coffee\nAffiliate Disclosure", "link": "https://github.com/CCOSTAN/Home-AssistantConfig", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "bed", "selectorShort": "bed", "MarkedSent": "bear stone smart home documentation\nbe sure to \u2b50 my configuration repo so you can keep up to date on any daily progress!\nthis repo is designed for smart home inspiration. the configuration, devices, layout, linked blog posts and youtube videos should help inspire you to jump head first into the iot world. this is the live working configuration of my smart home. use the menu links to jump between sections. all of the code is under the config directory and free to use and contribute to. be sure to subscribe to the blog mailing list and youtube channel. (https://youtube.com/vcloudinfo)\nblog | devices | todo list | smart home stats | follow me | code | diagram | youtube | merch\nas of 2018, i have migrated everything to a docker based platform. you can read all about it here: migration blog post\nnotable software on my laptop host:\ndocker - docker runs on a ubuntu server core base. video on ubuntu upgrades\nyoutube video on upgrading home assistant in docker - be sure to subscribe to get all home assistant videos.\nhome assistant container - it all starts here.\nthe amazing floorplan project to help visualize my smarthome.\nssl via ssls - 5 bucks a year! - keeps me safe! - youtube video on port forwarding - on my arris tg1682 modem\ndocker-compose.yaml - realtime list of all the containers.\ndasher container to leverage those cheap amazon dash buttons\nhomebridge container for full ha <-> homekit compatibility.\nunifi controller container to manage aps\nlots of my gear comes from betabound for beta testing and reviews. be sure to use the referral code 'reliable jaguar' so we both get priority for beta tests!\nsmart home diagram - get your icons (here).\nhere is how all the parts talk to each other. keep reading to see code examples and explanations.\nsmart home diagram (png). made with draw.io (xml source file).\nbatteries | networking | alexa | mobile devices | nest | voice | hubs | lights | switches | landscaping | diy led lights | garage | tv streaming | security | cameras | sensors\nbattery backups - ups blog write-up\n3 prong ups\n2 prong ups\ntesla powerwall 2\nthere aren't really automations for the batteries yet. electricity is the life blood for the house and only really the tesla battery has smarts so maybe in the future, you'll see a powerwall automation in this space. but be sure to check out the videos below:\nhow to port forward home assistant on arris tg1682\nadding powerwall sensors to home assistant\nnetworking\nubiquiti networks unifi 802.11ac pro\nunifi controller in the cloud\nnetgear 16 port unmanaged switch\ncircle by disney\nusing the aps (3 of them), the house monitors all connected devices for online/offline status and uses '' for presence detection. any critical device down for more than 5 minutes and an alert is sent out. circle is a parental control device. when a new device is discovered on the network, ha notifies us and also plays a tts reminder over the speakers to classify in circle. most things are wifi connected but a good gigabit switch is needed for a good foundation.\ntips to avoid wifi interference with your aps\nalexa echo devices - alexa device blog post\namazon echo\namazon echo dot\namazon echo tap\namazon dash wand\nthe alexa devices in my house are for automation overrides. they are primarily an input device into home assistant. using ha cloud component, i am able to turn on /off most ha devices even if they don't have native alexa support. the dots are littered around the house, the tap is for shower and garage since it is super portable and the main echo fills the upstairs with music. voice input and playing whole house music are where echoes excel! the wand is pool side for quick commands and controlling the music if need be.\nability to ask alexa to repeat the last voice notification - 'alexa, turn on last message'.\nguest mode to disable certain interior automations. trigger via alexa. 'alexa, turn on guest mode.'\ntrack garbage days and chore days for the kids. voice reminders and alexa intergration/request for info.'\ncontext aware lighting control.\nview the alexa related videos on the vcloudinfo youtube channel.\nmobile devices and tablets - floorplan blog post\nipads\niphones\ndash buttons\namazon fire tablets gen 7\nmobile devices are a critical part of my home automation. they establish presence in the house and are the basis for many automations. home? turn on the lights. leave? turn them all off kind of thing. we use nmap for presence detection.\nios notifications for offline devices, badlogins, ha startups, new ha versions and ip changes for dns.\nreminders to take my medicine sent as ios notifications only when i arrive back home for the night.\nthe tablets are for the awesome floorplan that you see in the images. we have 2 in the house mounted for quick consumption of all the ha data in a glance. we also leverage them as tts endpoints. during certain times of the day, tts is only played on the tablets rather than over the whole house. other times, notifications are sent only to the mobile devices rather than using speech.\ncustom component fire tablet media player\nnest products and sleepiq - thermostat basics blog post\nnest thermostats\nnest protects\nsleepnumber -----> bed !!!  i8\nwithings\nthis group of devices is basically for additional presence control. the nest thermostats and protects basically run themselves. the thermostat 'away' mode triggers my away scripts which turn items off. the protects are solid smoke detectors. they really came in handy during irma. the sleepiq bed adds to my presence detection. it will notify ha if either side of the bed is occupied. more controls are coming but i use this extensively. the withings scale also triggers morning and goodnight routines depending on when i step on it during the day.\nturn off lights when nest thermostats detects we are away. (upstairs and downstairs)\nturn on upstairs lights if nest thermostats detects people and it's nighttime.\n(ifttt) trigger good night routine when i step on the withings scale after 10pm.\nturn on bathroom accent lights when either of us steps out of bed at night. turns them back off when we are back in bed.\nturn off all interior lights when the last person gets into bed.\nsilence all voice notifications if anyone is in bed. redirect to fire tablets.\nvoice notifications - giving voice to the smart home blog post\nchromecast audios\namps\nmixer\ntp-link smart plug\nto me, voice is the coolest part of the smart home. it gives it personality. it's something not just anyone has and helps your house stand apart from the pack. i use the amazon polly tts component since it sounds the closest to alexa. this gives a seemless transition from alexa to home assistant responding. most think it is just one system. the mixer allows tts to mix right in over music. the tp-link outlet is used to turn off the mixer and amp when we do not need it. it's a great inexpensive solution.\nturn off all the voice devices when we are not home or in bed.\nall voice notifications are pushed though a speech engine. random words and sentences are used to give the house some personality.\nvoice announcements whenever someone comes home.\nvoice notifications for all sorts of things related to the house. (temps, presence, doors open, windows open, garage door statuses, sunset.)\ndigital cuckoo clock that goes off each hour and on the half just like a real cuckoo clock.\nclick here for youtube videos related to voice.\nonce you can teach your house to talk, you just keep expanding on its vocabulary. it's addicting. :)\nvarious hubs - smart home parts/sum blog post\nphilips hue hub gen 2\nwink hub\nrm pro by broadlink\nphilips hue hub gen 1\nthe hubs help the home communicate across all the various protocols running in the house. the hue hubs (i have 2 actually) talk to most of the lights. the gen 1 handles upstairs and outside and the gen 2 handles everything else. some lights and switches talk over zwave to the wink hub. the rm pro talks 433mhz to my etekcity outlets.\nusing [etekcity outlets](https://amzn.to/2efnobp) to control accent lighting above kitchen cabinets and room cutouts.\nturn on hallway light for no more than 20 minutes when pantry door is opened.\ndetects when lights are turned on and adjusts them to correct brightness based on time of day.\nthink of the hubs each as bridges for ha to talk to various hardware around the house.\nlights smart home parts/sum blog post\nhue colored lights\nge link lightbulbs\nhue go\nhue lightstrip\nalmost all my lights (40+) are white ge link lights. i bought them early on before hue came out with inexpensive white a19s. even ikea has great lights now. colored lights are in the front sconces and also used in the living room. the go lights are specifically for the kids since they are both wireless and also have a button on them making them very tactile for kids. i use the lightstrips for tv backlighting and also couch accent lighting.\nturn on tv time lights (dim and color) at sunset (if home and tv is on)\nsets up the front lights in the house with preset colors depending on the ~~month~~ day!.\nturns living room lights `red` when a window or door is opened past sunset. resets to `yellow/gold` when all doors/windows are closed.\ntwo part series on replacing a fluorescent light with a hue smart light - step by step\nclick here for youtube demos of the holiday lights\nswitches\nnoon switches\nnunet smart plug\nswitches get stitches\netekcity outlets\nin the master bedroom and bathroom, i have deployed a starter set of 5 noon switches. these switches control the toilet light, both vanities and bedroom overhead light. they work on the wall and are also ifttt compatible. the etekcity outlets are the most inexpensive ($6) yet reliable outlets out there. i have them deployed all over the house as accent lighting with some rope lights in most of the home's cut outs.\nwhen interior light script is triggered, ifttt is notified to turn off the bathroom noon switches.\ni've taken the smart plugs and put them in a weatherproof case for holiday lights\nsecurity\nnodemcu development boards\naura home monitoring motion alarm\nhue go\nfake dog\nthe esps while technically not a hub do bridge the connection to all the windows and door sensors that are hardwired in my house. one set acts as my diy alarm system while the other act as diy motion sensors. the aura system uses wifi waves to detect motion through walls. it covers the entire house. scenes are activated via ifttt/ha integration. when all else fails though, a good recording of a bull mastiff is sure to do the trick!\nshut down hvac system if a window or door is left open for more than 5 minutes.\nplay chime on all window and door open/closes.\nchange aura scenes based on presence and sleep.\ncameras\nskybell hd\nfoscam 1080p outdoor camera\nsurveillance drives\nmeraki ms220 8 port poe switch\ncameras are both for security and data sensors. they can trigger motion events, lighting conditions or for doorbells, when someone presses it. cameras and access points are feed power via the meraki poe switch.\non motion from doorbell turns front lights to bright white lights for 10 minutes and then back to original colors. fake dog barking when there is motion by the house.\nwhen someone rings the doorbell, the backyard and bathroom lights flash - since we might not hear the doorbell. fake dog barks as well (which can be snoozed for 30 minutes via alexa).\noutdoor landscaping\nrachio sprinkler system\nge zwave outdoor power module\nteckin ss31 outdoor outlets\noutdoor led lighting\nthe great outdoors can be automated too! mainly lights but also the sprinkler system and water supply. the phyn leak detector was announced in ces. it looks for abnormal flows and if senses them, alerts me and shuts water main. the teckin ss31 outlets are hooked up to my 12v transformers allowing me to turn the landscaping lights on and off. the led strips are diy and the recipe is in the next section.\nclick here for youtube videos!\n(ifttt) add a 1 day rain delay to rachio sprinkler system if it is going to rain tomorrow also logged to mqtt.\n(ifttt) blink all lights if winds get to 70mph - hurricane warning.\nturn on some outdoor lights at sunset, turn off 4 hours before sunrise.\nturn off interior and backyardlights when we go to sleep.\noutdoor led accents - diy blog post - #71\nled rgb wifi controller - flux_led compatible\nled strip kits\naluminum light diffusers\noutdoor housing\nmentioned above, this is one of my favorite projects for the house. the ability to completely change the look of the house on the drop of a dime and on a dime budget is awesome. read the blog post linked above for all the parts details but here are some automations i love. you can also watch the following video (https://www.vcloudinfo.com/2018/10/easy-smart-home-gadgets-i-use-for-my.html)\nchange the front colors of the led lights based on holidays. the best part is the led controller works with ha right out of the box. no fiddling around with it at all. huge plus in my book.\nwhen the garage doors open, change all lights in the front of the house to bright white.\non motion, turn all the lights to a bright white outside for a random amount of time before resuming the daily color choice.\nclick here for youtube demos of the holiday lights\ngarage gadgets\ngaradget\njuicebox pro 40 evse\nchevy bolt electric car\nsiri, are my garage doors closed?\ngarage doors, cars, charging stations. going green. all part of a complete home automation setup. the garage door openers are probably the most important. no one wants to forget that they left them open when they've left or gone to bed. closing forgotten garage doors makes it all worth it.\nnotifications when the garage door is left open at night or when we leave the house.\nvideos and write up on garadget garage door opener\nmonitor the reflection rates of garadget and notify when they being to drop too low when closed (indicating a shift in the controller)\ntweet out charging status of the car and how many kwh were charged in a session. #stat\nmonitor amps and voltage and alert if charge ever goes over 24a to prevent breaker tripping. (juicebox is software derated to 24a on a 30a circuit.) also restart unit if unable to connect to emotorwerks servers.\ntvs and streaming devices\nsamsung smart tv\nrokus\namazon fire tv\nsynology nvr 1218\ntv automations are super cool. turn on a movie and the lights begin to dim automatically. it's super cool. out tvs are back lit with hue lightstrips so we can do some pretty neat effects with automations. we are #cordcutters as well so all out tv is streamed to the rokus. firetv for party games and the snyology, i'll talk about later in the survellance section.\nclick here for youtube video\nif any doors or windows are open, the tv backlights turn red.\nwhen the roku reports we are watching plex or tablotv, tv time scene is triggered dimming 2 of 4 living room lights.\nrainy days trigger extra subtle light (tv back lights and other accent lighting) inside the house.\nsensors\ndoor sensors (aeon labs)\npi zero\nwireless nub\nepson et-7700 printer\nsensors add data to home assistant. most of my doors and windows are hardwired but for some interior doors, i also have the wireless sensors. they connect to my wink hub. pihole is running on my pizero. it's super easy to install and runs dns, dhcp and ad blocking for the whole house on a great little 5v form factor.\ntweet out daily pi hole stats. (ads blocked and % of bandwidth saved.)\nleverage alexa and elekcity outlet to control printer on/off via voice. turns off automatically after 20 minutes.\nclick here for youtube videos!\nsound door chimes whenever doors open or close.\nwatch and alert on home assistant's disk usage and pi zero.\ntodo list\nthe issues section on github is where i store all my wishful ideas and future enhancements. feel free to join the conversations there.\nall files are now being edited with atom.\nall of my configuration files are tested against the most stable version of home-assistant using travis.\nstill have questions on my config?\nmessage me on twitter : or\nyou can buy me a coffee\naffiliate disclosure", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000037, "year": null}, {"Unnamed: 0": 165, "autor": 165, "date": null, "content": "Xiaomi Miot For HomeAssistant\nEnglish | \u7b80\u4f53\u4e2d\u6587\nMIoT-Spec: The protocol specification for Xiaomi IoT devices, is a standard designed by the Xiaomi IoT platform to describe the function definition of hardware products according to the networking mode of hardware products, the characteristics of product functions, the characteristics of user usage scenarios and the user's requirements for hardware product use experience specification.\nThis component uses the miot protocol to automatically integrate Xiaomi devices into HomeAssistant, and currently supports most Xiaomi IoT devices. And it supports HA Web UI, and you can easily integrate Xiaomi devices into HA without configuring yaml.\nInstalling\nDownload and copy custom_components/xiaomi_miot folder to custom_components folder in your HomeAssistant config folder\n# Auto install via terminal shell\nwget -q -O - https://cdn.jsdelivr.net/gh/al-one/hass-xiaomi-miot/install.sh | bash -\nOr you can install component with HACS\nConfig\n\u2699\ufe0f Configuration > \ud83e\udde9 Integrations > \u2795 Add Integration > \ud83d\udd0d Search Xiaomi Miot Auto\nOr click:\nAdd devices using Mi Account:\nStarting from the v0.4.4 version, the component has added support for selecting the connection device mode when integrated by account:\nAutomatic: The component will regularly update the devices that support miot-spec in LAN, and automatically use the local connection for the supported devices (recommended)\nLocal: All devices filtered by the integrated configuration will use local connection. If you check the devices that do not support miot in LAN, they will be unavailable\nCloud: All devices filtered by the integrated configuration will use cloud connection. It is recommended that miio, BLE, ZigBee devices use this mode\nAdd device using host/token:\nSuitable for devices support miot-spec protocol in LAN\nConfig Xiaomi Cloud:\nConfig Xiaomi cloud for the devices integrated by host/token\n# configuration.yaml\nxiaomi_miot:\nusername: xiaomi_username\npassword: xiaomi_password\n# server_country: cn # location of xiaomi cloud: cn(default), de, i2, ru, sg, us\n\u2699\ufe0f Configuration > \ud83e\udde9 Integrations > Xiaomi Miot Auto > Options > \u2611\ufe0f Enable miot cloud\nConfig translation languages:\n# configuration.yaml\nxiaomi_miot:\nlanguage: zh # Using the built-in dictionary, currently only `zh` is supported\n# https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/translation_languages.py\ntranslations:\n# Global dictionary\nidle: '\u7a7a\u95f2'\nbusy: '\u5de5\u4f5c\u4e2d'\n# Dictionary for specifying fan modes\nfan.mode:\n'straight wind': '\u76f4\u5439\u6a21\u5f0f'\n'natural wind': '\u81ea\u7136\u98ce'\n# Dictionary for specifying the drying modes of the washer\nwasher.drying_level:\nmoist: '\u5fae\u6e7f'\nextra: '\u7279\u5e72'\nCustomize entity\n# configuration.yaml\nhomeassistant:\ncustomize: !include customize.yaml\n# Customize via device model\nxiaomi_miot:\n# https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/device_customizes.py\ndevice_customizes:\n'chuangmi.plug.212a01':\nmiot_local: true\nchunk_properties: 7\n# Customize via parent entity\n# customize.yaml\ndomain.your_entity_id:\nmiot_local: true # Force to read and write data in LAN (integrate by account)\nmiot_cloud: true # Enable miot cloud for entity (read, write, action)\nmiot_cloud_write: true # Enable miot cloud (only write)\nmiot_cloud_action: true # Enable miot cloud (only action)\ncheck_lan: true # Check LAN connection in cloud mode\nmiio_properties: power,battery # Get miio properties to state attributes\nmiio_cloud_props: prop.power,event.dev_online\n# Custom sub entities\ndomain.parent_entity_id:\nsensor_properties: temperature,humidity,illumination # Miot properties\nbinary_sensor_properties: is_volume_muted,any_boolen_property\nswitch_properties: on,power\nnumber_properties: volume\nselect_properties: mode\nfan_properties: mode,fan_level\ncover_properties: motor_control\nlight.your_entity_id:\ncolor_temp_reverse: false # Reverse color temperature (Requires reload config entry)\nclimate.your_entity_id:\nbind_sensor: sensor.temperature_entity,sensor.humidity_entity # Sensor entities\ncamera.your_entity_id:\nvideo_attribute: 1 # https://github.com/al-one/hass-xiaomi-miot/issues/11#issuecomment-773054167\nkeep_streaming: true # Continuously update stream address\ncover.your_entity_id:\nclosed_position: 5 # Change cover state to closed when position <= 5%\ndeviated_position: 2 # Current position deviation 2% -> 0%, 98% -> 100%\nmotor_reverse: true # Reverse motor state (Requires reload config entry)\nposition_reverse: true # Reverse motor position (Requires reload config entry)\nopen_texts: Open,Up\nclose_texts: Close,Down\nmedia_player.mitv_entity_id:\nbind_xiaoai: media_player.xiaoai_entity_id # Bind xiaoai speaker for turn on TV\ndoamin.your_entity_id:\ninterval_seconds: 30 # Seconds between each update state (Requires reload config entry)\nchunk_properties: 10 # Chunk miot properties on update state (LAN)\nreverse_state: true # Reverse the On/Off state of a binary sensor\nRecommended Customization Using The UI:\n\u2699\ufe0f Configuration > \ud83d\udd8c Customize > \ud83d\udd0d Select Entity > Add Other Attribute\nSupported Devices\n\ud83d\udd0c outlet / switch\n\ud83d\udca1 light\n\u2744\ufe0f air-conditioner / air-conditioner-outlet / thermostat\n\ud83c\udf00 fan / ceiling-fan\n\ud83d\udec0 bath-heater / \ud83d\udd25 heater\n\ud83d\udcf7 camera / video-doorbell \u2753\ufe0f\n\ud83d\udcfa television / \ud83d\udcfd\ufe0f projector / tv-box\n\ud83d\udde3\ufe0f intelligent-speaker \u2753\ufe0f\n\ud83c\udfae\ufe0f ir-remote-control \u2753\ufe0f\n\ud83d\udd10 lock / \ud83d\udeaa door\n\ud83d\udc55 washer / fridge\n\ud83d\udeb0 water-purifier / kettle\n\u267b\ufe0f air-purifier / air-fresh\n\ud83c\udf21 temperature-humidity-sensor / submersion-sensor / smoke-sensor\n\ud83e\udd58 cooker / pressure-cooker\n\ud83c\udf72 induction-cooker / oven / microwave\n\ud83c\udf57 air-fryer / multifunction-cooking-pot\n\ud83c\udf75 health-pot / \u2615\ufe0f coffee-machine\n\ud83c\udf79 juicer\n\u2668\ufe0f water-heater / hood / dishwasher\n\ud83e\ude9f curtain / window-opener / airer\n\ud83e\uddf9 vacuum / mopping-machine\n\ud83d\udca6 humidifier / dehumidifier\n\ud83c\udf43 air-monitor / \ud83e\udeb4 plant-monitor\n\ud83d\udecf bed / blanket / \ud83d\ude34 sleep-monitor\n\ud83d\udc86 massager / magic-touch\n\ud83c\udfc3 walking-pad\n\ud83d\udebd toilet /\ufe0f towel-rack\n\ud83d\udc31 pet-feeder / \u26f2 pet-drinking-fountain / \ud83d\udc1f fish-tank\n\ud83e\udd9f mosquito-dispeller / germicidal-lamp\n\ud83d\ude98 rearview-mirror / head-up-display\n\u231a\ufe0f watch / bracelet\n\ud83d\udeb6 motion-sensor / \ud83e\uddf2 magnet-sensor \u2753\ufe0f\n\ud83d\udcf3 vibration-sensor\n\ud83c\udf10 router / \ud83d\udda8 printer\nServices\nxiaomi_miot.set_property\nservice: xiaomi_miot.set_property\ndata:\nentity_id: camera.isa_hlc7_xxxx\nfield: camera_control.on\nvalue: true\nxiaomi_miot.set_miot_property\nservice: xiaomi_miot.set_miot_property\ndata:\nentity_id: camera.isa_hlc7_xxxx\nsiid: 2\npiid: 1\nvalue: true\nxiaomi_miot.get_properties\nservice: xiaomi_miot.get_properties\ndata:\nentity_id: camera.isa_hlc7_1ab7\nmapping:\npower:\nsiid: 2\npiid: 1\nnight:\nsiid: 2\npiid: 3\nthrow: true # throw result to HA notifications\nxiaomi_miot.call_action\nservice: xiaomi_miot.call_action\ndata:\nentity_id: vacuum.dreame_p2259_entity_id\nsiid: 4 # vacuum-extend\naiid: 1 # start-clean\nparams:\n- 18 # piid: 1 - work-mode\n- '{\"selects\":[[7,1,0,2,1]]}' # piid: 10 - clean-extend-data\nthrow: true # throw result to HA notifications\nxiaomi_miot.send_command\nservice: xiaomi_miot.send_command\ndata:\nentity_id: switch.your_entity_id\nmethod: set_power\nparams:\n- on\nthrow: true # throw result to HA notifications\nxiaomi_miot.get_token\nservice: xiaomi_miot.get_token\ndata:\nname: Light # Keyword of device name in Mihome / IP / Model.\nxiaomi_miot.intelligent_speaker\nservice: xiaomi_miot.intelligent_speaker\ndata:\nentity_id: media_player.xiaoai_lx04_xxxx\ntext: Turn on the light\nexecute: true # Execute text directive.\nsilent: true # Silent execution.\nxiaomi_miot.xiaoai_wakeup\nservice: xiaomi_miot.xiaoai_wakeup\ndata:\nentity_id: media_player.xiaoai_lx04_xxxx\nMore services\nDebug\nGet Entity State Attributes\n\ud83d\udd28 Developer tools > \u2139\ufe0f State > \ud83d\udd0d Filter Entity\nGet Debug Logs\n# configuration.yaml\nlogger:\ndefault: warning\nlogs:\ncustom_components.xiaomi_miot: debug\n\u2699\ufe0f Configuration > \u270d\ufe0f Logs\nObtain miio token\nUse HomeAssistant Service\nGoto HomeAssistant service developer tool\nSelect xiaomi_miot.get_token, Enter the keyword of device name\nFind the token from the HA notifications\nUse MiHome mod by @vevsvevs\nDown apk from \u0421\u041a\u0410\u0427\u0410\u0422\u042c \u0412\u0415\u0420\u0421\u0418\u042e 6.x.x and install\nStart Mihome APP > Profile > Experimental features\nCheck on Write custom log files and Enable app's debug mode\nFind the token from vevs/logs/misc/devices.txt after restart app\nXiaomi Cloud Tokens Extractor\nDownload and run token_extractor.exe for Windows or install for Python\nEnter username, password and your server region\nExtracts tokens from your cloud account. Also reveals the bind_key for BT devices", "link": "https://github.com/al-one/hass-xiaomi-miot", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "bed", "selectorShort": "bed", "MarkedSent": "xiaomi miot for homeassistant\nenglish | \u7b80\u4f53\u4e2d\u6587\nmiot-spec: the protocol specification for xiaomi iot devices, is a standard designed by the xiaomi iot platform to describe the function definition of hardware products according to the networking mode of hardware products, the characteristics of product functions, the characteristics of user usage scenarios and the user's requirements for hardware product use experience specification.\nthis component uses the miot protocol to automatically integrate xiaomi devices into homeassistant, and currently supports most xiaomi iot devices. and it supports ha web ui, and you can easily integrate xiaomi devices into ha without configuring yaml.\ninstalling\ndownload and copy custom_components/xiaomi_miot folder to custom_components folder in your homeassistant config folder\n# auto install via terminal shell\nwget -q -o - https://cdn.jsdelivr.net/gh/al-one/hass-xiaomi-miot/install.sh | bash -\nor you can install component with hacs\nconfig\n\u2699\ufe0f configuration > \ud83e\udde9 integrations > \u2795 add integration > \ud83d\udd0d search xiaomi miot auto\nor click:\nadd devices using mi account:\nstarting from the v0.4.4 version, the component has added support for selecting the connection device mode when integrated by account:\nautomatic: the component will regularly update the devices that support miot-spec in lan, and automatically use the local connection for the supported devices (recommended)\nlocal: all devices filtered by the integrated configuration will use local connection. if you check the devices that do not support miot in lan, they will be unavailable\ncloud: all devices filtered by the integrated configuration will use cloud connection. it is recommended that miio, ble, zigbee devices use this mode\nadd device using host/token:\nsuitable for devices support miot-spec protocol in lan\nconfig xiaomi cloud:\nconfig xiaomi cloud for the devices integrated by host/token\n# configuration.yaml\nxiaomi_miot:\nusername: xiaomi_username\npassword: xiaomi_password\n# server_country: cn # location of xiaomi cloud: cn(default), de, i2, ru, sg, us\n\u2699\ufe0f configuration > \ud83e\udde9 integrations > xiaomi miot auto > options > \u2611\ufe0f enable miot cloud\nconfig translation languages:\n# configuration.yaml\nxiaomi_miot:\nlanguage: zh # using the built-in dictionary, currently only `zh` is supported\n# https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/translation_languages.py\ntranslations:\n# global dictionary\nidle: '\u7a7a\u95f2'\nbusy: '\u5de5\u4f5c\u4e2d'\n# dictionary for specifying fan modes\nfan.mode:\n'straight wind': '\u76f4\u5439\u6a21\u5f0f'\n'natural wind': '\u81ea\u7136\u98ce'\n# dictionary for specifying the drying modes of the washer\nwasher.drying_level:\nmoist: '\u5fae\u6e7f'\nextra: '\u7279\u5e72'\ncustomize entity\n# configuration.yaml\nhomeassistant:\ncustomize: !include customize.yaml\n# customize via device model\nxiaomi_miot:\n# https://github.com/al-one/hass-xiaomi-miot/blob/master/custom_components/xiaomi_miot/core/device_customizes.py\ndevice_customizes:\n'chuangmi.plug.212a01':\nmiot_local: true\nchunk_properties: 7\n# customize via parent entity\n# customize.yaml\ndomain.your_entity_id:\nmiot_local: true # force to read and write data in lan (integrate by account)\nmiot_cloud: true # enable miot cloud for entity (read, write, action)\nmiot_cloud_write: true # enable miot cloud (only write)\nmiot_cloud_action: true # enable miot cloud (only action)\ncheck_lan: true # check lan connection in cloud mode\nmiio_properties: power,battery # get miio properties to state attributes\nmiio_cloud_props: prop.power,event.dev_online\n# custom sub entities\ndomain.parent_entity_id:\nsensor_properties: temperature,humidity,illumination # miot properties\nbinary_sensor_properties: is_volume_muted,any_boolen_property\nswitch_properties: on,power\nnumber_properties: volume\nselect_properties: mode\nfan_properties: mode,fan_level\ncover_properties: motor_control\nlight.your_entity_id:\ncolor_temp_reverse: false # reverse color temperature (requires reload config entry)\nclimate.your_entity_id:\nbind_sensor: sensor.temperature_entity,sensor.humidity_entity # sensor entities\ncamera.your_entity_id:\nvideo_attribute: 1 # https://github.com/al-one/hass-xiaomi-miot/issues/11#issuecomment-773054167\nkeep_streaming: true # continuously update stream address\ncover.your_entity_id:\nclosed_position: 5 # change cover state to closed when position <= 5%\ndeviated_position: 2 # current position deviation 2% -> 0%, 98% -> 100%\nmotor_reverse: true # reverse motor state (requires reload config entry)\nposition_reverse: true # reverse motor position (requires reload config entry)\nopen_texts: open,up\nclose_texts: close,down\nmedia_player.mitv_entity_id:\nbind_xiaoai: media_player.xiaoai_entity_id # bind xiaoai speaker for turn on tv\ndoamin.your_entity_id:\ninterval_seconds: 30 # seconds between each update state (requires reload config entry)\nchunk_properties: 10 # chunk miot properties on update state (lan)\nreverse_state: true # reverse the on/off state of a binary sensor\nrecommended customization using the ui:\n\u2699\ufe0f configuration > \ud83d\udd8c customize > \ud83d\udd0d select entity > add other attribute\nsupported devices\n\ud83d\udd0c outlet / switch\n\ud83d\udca1 light\n\u2744\ufe0f air-conditioner / air-conditioner-outlet / thermostat\n\ud83c\udf00 fan / ceiling-fan\n\ud83d\udec0 bath-heater / \ud83d\udd25 heater\n\ud83d\udcf7 camera / video-doorbell \u2753\ufe0f\n\ud83d\udcfa television / \ud83d\udcfd\ufe0f projector / tv-box\n\ud83d\udde3\ufe0f intelligent-speaker \u2753\ufe0f\n\ud83c\udfae\ufe0f ir-remote-control \u2753\ufe0f\n\ud83d\udd10 lock / \ud83d\udeaa door\n\ud83d\udc55 washer / fridge\n\ud83d\udeb0 water-purifier / kettle\n\u267b\ufe0f air-purifier / air-fresh\n\ud83c\udf21 temperature-humidity-sensor / submersion-sensor / smoke-sensor\n\ud83e\udd58 cooker / pressure-cooker\n\ud83c\udf72 induction-cooker / oven / microwave\n\ud83c\udf57 air-fryer / multifunction-cooking-pot\n\ud83c\udf75 health-pot / \u2615\ufe0f coffee-machine\n\ud83c\udf79 juicer\n\u2668\ufe0f water-heater / hood / dishwasher\n\ud83e\ude9f curtain / window-opener / airer\n\ud83e\uddf9 vacuum / mopping-machine\n\ud83d\udca6 humidifier / dehumidifier\n\ud83c\udf43 air-monitor / \ud83e\udeb4 plant-monitor\n\ud83d\udecf -----> bed !!!  / blanket / \ud83d\ude34 sleep-monitor\n\ud83d\udc86 massager / magic-touch\n\ud83c\udfc3 walking-pad\n\ud83d\udebd toilet /\ufe0f towel-rack\n\ud83d\udc31 pet-feeder / \u26f2 pet-drinking-fountain / \ud83d\udc1f fish-tank\n\ud83e\udd9f mosquito-dispeller / germicidal-lamp\n\ud83d\ude98 rearview-mirror / head-up-display\n\u231a\ufe0f watch / bracelet\n\ud83d\udeb6 motion-sensor / \ud83e\uddf2 magnet-sensor \u2753\ufe0f\n\ud83d\udcf3 vibration-sensor\n\ud83c\udf10 router / \ud83d\udda8 printer\nservices\nxiaomi_miot.set_property\nservice: xiaomi_miot.set_property\ndata:\nentity_id: camera.isa_hlc7_xxxx\nfield: camera_control.on\nvalue: true\nxiaomi_miot.set_miot_property\nservice: xiaomi_miot.set_miot_property\ndata:\nentity_id: camera.isa_hlc7_xxxx\nsiid: 2\npiid: 1\nvalue: true\nxiaomi_miot.get_properties\nservice: xiaomi_miot.get_properties\ndata:\nentity_id: camera.isa_hlc7_1ab7\nmapping:\npower:\nsiid: 2\npiid: 1\nnight:\nsiid: 2\npiid: 3\nthrow: true # throw result to ha notifications\nxiaomi_miot.call_action\nservice: xiaomi_miot.call_action\ndata:\nentity_id: vacuum.dreame_p2259_entity_id\nsiid: 4 # vacuum-extend\naiid: 1 # start-clean\nparams:\n- 18 # piid: 1 - work-mode\n- '{\"selects\":[[7,1,0,2,1]]}' # piid: 10 - clean-extend-data\nthrow: true # throw result to ha notifications\nxiaomi_miot.send_command\nservice: xiaomi_miot.send_command\ndata:\nentity_id: switch.your_entity_id\nmethod: set_power\nparams:\n- on\nthrow: true # throw result to ha notifications\nxiaomi_miot.get_token\nservice: xiaomi_miot.get_token\ndata:\nname: light # keyword of device name in mihome / ip / model.\nxiaomi_miot.intelligent_speaker\nservice: xiaomi_miot.intelligent_speaker\ndata:\nentity_id: media_player.xiaoai_lx04_xxxx\ntext: turn on the light\nexecute: true # execute text directive.\nsilent: true # silent execution.\nxiaomi_miot.xiaoai_wakeup\nservice: xiaomi_miot.xiaoai_wakeup\ndata:\nentity_id: media_player.xiaoai_lx04_xxxx\nmore services\ndebug\nget entity state attributes\n\ud83d\udd28 developer tools > \u2139\ufe0f state > \ud83d\udd0d filter entity\nget debug logs\n# configuration.yaml\nlogger:\ndefault: warning\nlogs:\ncustom_components.xiaomi_miot: debug\n\u2699\ufe0f configuration > \u270d\ufe0f logs\nobtain miio token\nuse homeassistant service\ngoto homeassistant service developer tool\nselect xiaomi_miot.get_token, enter the keyword of device name\nfind the token from the ha notifications\nuse mihome mod by @vevsvevs\ndown apk from \u0441\u043a\u0430\u0447\u0430\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u044e 6.x.x and install\nstart mihome app > profile > experimental features\ncheck on write custom log files and enable app's debug mode\nfind the token from vevs/logs/misc/devices.txt after restart app\nxiaomi cloud tokens extractor\ndownload and run token_extractor.exe for windows or install for python\nenter username, password and your server region\nextracts tokens from your cloud account. also reveals the bind_key for bt devices", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000165, "year": null}, {"Unnamed: 0": 334, "autor": 334, "date": null, "content": "Home Assistant Configuration\nHome Assistant configuration files.\nSome detailed information about setting various parts of this up on DIY Futurism.\nHardware\nPresence Detection\nAutomations\nHouse Modes\nOther Projects Used\nMy HA is an Hassbian install on a Raspberry Pi 3 with an GoControl Z-Wave/Zigbee USB stick.\nRunning HA version: 0.50.1\nHardware\nLights\nLimitlessLED - Milight RGB Bulbs using MiLight WiFi Bridge x2\nIkea Tradfri - several bulbs via gateway\nESP8266 bulb with AiLight firmware - TESTING\nWall Switches\nGE Z-Wave 12727 Wall Toggle Switch x1\nGE Z-Wave 12729 Wall Toggle Dimmer Switch x2\nEnerwave Z-Wave ZWN-RSM2 Dual In-Wall Relay x1\nSmart Devices\nWEMO Mr. Coffee\nWithings Body Scale\nFitbit\nSwitches\nTP-Link HS100 Smart Switch\nSonoff Switches running Sonoff-HomeAssistant firmware\nMedia Players\nVolumio Raspberry Pi streaming player for stereo\nPlex (Roku)\nMPD - plays radio through speaker on HA Raspberry Pi\nVLC - for Amazon Polly TTS output\nSensors\nWemos D1 Mini (esp8266) nodes with sensors for motion, temps, etc. via MQTT\nMi Flora plant sensors x9\nZ-Wave Motion Sensor (battery powered)\nOther Hardware\nEcho Dot Voice control\nBluetooth iBeacons\nold iPhones with IPCam app\nSynology DS413j - NAS\nAmazon Dash Buttons\nPresence\nTracking with:\nOwntracks - 'significant changes' mode, iBeacon\nHomeAssistant iOS app - enable location tracking, enable iBeacon\nping - Is my phone pingable on my network?\nBluetooth\nI use a python script to filter 'home' and 'not_home' signals by platform.\nAll platforms update 'home'\nOnly GPS platforms (Owntracks, iOS app) update 'not_home'\nDelayed by 10 minutes to avoid turning everything off on quick dog walks / bodega runs\nRetain the most recent GPS coordinates and battery state regardless of platform\nThis script creates a new device_tracker with the most recent information and state, using the most platforms in the most reliable way.\nPosition in house is located using variable.last_motion\nAutomations\nAlarm\nAlarm Away - when no one is home\nAlarm Home - when coming home\nTTS Announce Disarm, Pending, and Armed Status\nAudible Alert when Front Door opens and Armed Home\nTrigger Alarm - Notify with security camera photo if Door Opened, \"Presence Detected\" announcement\nAlarm Clock\nMake Morning Coffee when Alarm goes off\nAlarm Clock - turn on lights and radio to wake me up\nTTS Annouce Weather & other Info\nUI - change default view to show commute times, weather info during morning\nAquarium\nTurn on 30 mins before sunrise and 1 hour after\nTurn on 1 hour before sunset, turn off 4 hours after or at 10PM (whichever is first)\nClimate\nIndoor Temperature & Humidity is a mean of all available sensors (using min_max component)\nIFTT Integration\nWhen plants need to be watered, add them to my Todoist todo list\nIf Fitbit logs new sleep but no alarm is set, wake house up\nWithings weigh in before bed 9pm - 12am, start goodnight sequence\nLights\nFlux - adjust color temp based on time (currently Tradfri lights only)\nSunset - 40m before sunset, turn on evening lights\nDay - during day turn on day dim lights and throttle Transmission\nEvening - turn on dim lights if I come home after 10pm\nAfter Midnight - turn on red lights if I come home 12a-430a\nTurn everything off when no one's home\nTurn Closet lights on/off by motion detector\nTurn Bathroom lights on/off by motion detector (off 12a-8:30a)\nTurn Office Lights on/off by motion detector\nTurn Crawl space light on/off by door sensor\nTurn kitchen lamps on/off using wall switch\nTurn on office lamps using switch\nNight Light - Kitchen on motion\nMedia\nDim house lights when Plex starts playing\nTurn on bathroom lights & lamp when movie pausd\nFade house lights up when Plex stops\nTurns off bandwidth throttling for Transmission/sabnzbd when I'm away from home\nPython Scripts\nare_any_lights_on.py - input_boolean for lights on/off, counts lights and switches on\nDoes not count nightlights\nmeta_device_tracker.py - Consolidate device tracking into one entity, only use GPS platforms for 'not_home'\nplant_problems.py - Count number of plants that need attention\nNotifications\nAlarm - security photo if door opens when armed_away\nAlarm Clock - send weather summary and image from window camera when alarm goes off\nSecurity - send image from front door camera if no one's home and door opens\nReminder - If I'm home at 10:30pm and coffee isn't ready but alarm is set, remind me\nReminder - Full moon\nPlants - Once a day reminder to water plants if more than 3 are thirsty\nSystem - Notify if disk use gets high\nSystem - Notify if new HA version available\nSystem - Notify when critical smart home device goes offline for more than 5 minutes\nTimelapse - record JPEGs of sunrise/sunset\nHouse Modes\nAlarm Override - Turns off all alarm automations, sound effects, and alerts.\nNight Light Override - Prevents red night lights from coming on\nVacation Mode\nGuest Mode\nOther Projects Used\nesp8266 related\nSonoff-HomeAssistant\nESPEasy\nAiLight\nesp8266-milight-hub\nBruh Multisensor\nHA addons\nFloorplan\ncustom-ui\ndasher\nforever-service For Python scripts as services\nMy Scripts\nraspi-pir-mqtt-homeassistant Publish connected PIR sensor to MQTT on a Raspberry Pi\nMedia Software\nTransmission torrent manager\nsabnzbd NZB queue manager\nPlex Media management & server", "link": "https://github.com/oakbrad/brad-homeassistant-config", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "bed", "selectorShort": "bed", "MarkedSent": "home assistant configuration\nhome assistant configuration files.\nsome detailed information about setting various parts of this up on diy futurism.\nhardware\npresence detection\nautomations\nhouse modes\nother projects used\nmy ha is an hassbian install on a raspberry pi 3 with an gocontrol z-wave/zigbee usb stick.\nrunning ha version: 0.50.1\nhardware\nlights\nlimitlessled - milight rgb bulbs using milight wifi bridge x2\nikea tradfri - several bulbs via gateway\nesp8266 bulb with ailight firmware - testing\nwall switches\nge z-wave 12727 wall toggle switch x1\nge z-wave 12729 wall toggle dimmer switch x2\nenerwave z-wave zwn-rsm2 dual in-wall relay x1\nsmart devices\nwemo mr. coffee\nwithings body scale\nfitbit\nswitches\ntp-link hs100 smart switch\nsonoff switches running sonoff-homeassistant firmware\nmedia players\nvolumio raspberry pi streaming player for stereo\nplex (roku)\nmpd - plays radio through speaker on ha raspberry pi\nvlc - for amazon polly tts output\nsensors\nwemos d1 mini (esp8266) nodes with sensors for motion, temps, etc. via mqtt\nmi flora plant sensors x9\nz-wave motion sensor (battery powered)\nother hardware\necho dot voice control\nbluetooth ibeacons\nold iphones with ipcam app\nsynology ds413j - nas\namazon dash buttons\npresence\ntracking with:\nowntracks - 'significant changes' mode, ibeacon\nhomeassistant ios app - enable location tracking, enable ibeacon\nping - is my phone pingable on my network?\nbluetooth\ni use a python script to filter 'home' and 'not_home' signals by platform.\nall platforms update 'home'\nonly gps platforms (owntracks, ios app) update 'not_home'\ndelayed by 10 minutes to avoid turning everything off on quick dog walks / bodega runs\nretain the most recent gps coordinates and battery state regardless of platform\nthis script creates a new device_tracker with the most recent information and state, using the most platforms in the most reliable way.\nposition in house is located using variable.last_motion\nautomations\nalarm\nalarm away - when no one is home\nalarm home - when coming home\ntts announce disarm, pending, and armed status\naudible alert when front door opens and armed home\ntrigger alarm - notify with security camera photo if door opened, \"presence detected\" announcement\nalarm clock\nmake morning coffee when alarm goes off\nalarm clock - turn on lights and radio to wake me up\ntts annouce weather & other info\nui - change default view to show commute times, weather info during morning\naquarium\nturn on 30 mins before sunrise and 1 hour after\nturn on 1 hour before sunset, turn off 4 hours after or at 10pm (whichever is first)\nclimate\nindoor temperature & humidity is a mean of all available sensors (using min_max component)\niftt integration\nwhen plants need to be watered, add them to my todoist todo list\nif fitbit logs new sleep but no alarm is set, wake house up\nwithings weigh in before -----> bed !!!  9pm - 12am, start goodnight sequence\nlights\nflux - adjust color temp based on time (currently tradfri lights only)\nsunset - 40m before sunset, turn on evening lights\nday - during day turn on day dim lights and throttle transmission\nevening - turn on dim lights if i come home after 10pm\nafter midnight - turn on red lights if i come home 12a-430a\nturn everything off when no one's home\nturn closet lights on/off by motion detector\nturn bathroom lights on/off by motion detector (off 12a-8:30a)\nturn office lights on/off by motion detector\nturn crawl space light on/off by door sensor\nturn kitchen lamps on/off using wall switch\nturn on office lamps using switch\nnight light - kitchen on motion\nmedia\ndim house lights when plex starts playing\nturn on bathroom lights & lamp when movie pausd\nfade house lights up when plex stops\nturns off bandwidth throttling for transmission/sabnzbd when i'm away from home\npython scripts\nare_any_lights_on.py - input_boolean for lights on/off, counts lights and switches on\ndoes not count nightlights\nmeta_device_tracker.py - consolidate device tracking into one entity, only use gps platforms for 'not_home'\nplant_problems.py - count number of plants that need attention\nnotifications\nalarm - security photo if door opens when armed_away\nalarm clock - send weather summary and image from window camera when alarm goes off\nsecurity - send image from front door camera if no one's home and door opens\nreminder - if i'm home at 10:30pm and coffee isn't ready but alarm is set, remind me\nreminder - full moon\nplants - once a day reminder to water plants if more than 3 are thirsty\nsystem - notify if disk use gets high\nsystem - notify if new ha version available\nsystem - notify when critical smart home device goes offline for more than 5 minutes\ntimelapse - record jpegs of sunrise/sunset\nhouse modes\nalarm override - turns off all alarm automations, sound effects, and alerts.\nnight light override - prevents red night lights from coming on\nvacation mode\nguest mode\nother projects used\nesp8266 related\nsonoff-homeassistant\nespeasy\nailight\nesp8266-milight-hub\nbruh multisensor\nha addons\nfloorplan\ncustom-ui\ndasher\nforever-service for python scripts as services\nmy scripts\nraspi-pir-mqtt-homeassistant publish connected pir sensor to mqtt on a raspberry pi\nmedia software\ntransmission torrent manager\nsabnzbd nzb queue manager\nplex media management & server", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000334, "year": null}, {"Unnamed: 0": 528, "autor": 528, "date": null, "content": "SmartMirror\nIt's a Magic Mirror, you all know what it is. This is a complete rewrite in React and Node.js of my original Magic Mirror written in Java. Everything is improved and it has lots of new functions.\nBoth voice recognition and the UI is in Swedish, however English is also supported by setting language to 'en-US' in the config. For porting to other languages take a look in the locales folder, should be pretty straight forward\nImages\nMy Home automation and monitoring app which can control the mirror supports iOS, however you must pay to be a developer to run it on an actual device, so I made a simple web app to control the mirror from.\nFeatures\nVoice Recognation using Google Cloud Speech\nSince Google Cloud Speech costs, I use Snowboy to listen for my hotword \"Spegel\" or \"Mirror\" on english. When it's detected the Mirror records untill end of speech and sends it to Google Cloud Speech.\nCreate reminders on my Home automation and monitoring backend.\nCreate tasks in a Wunderlist list.\nControl Philips Hue Lights. Turn on and off individual lamps or all, for example \"Turn the lights off in the bedroom\" or similar.\nHide/show individual elements on the Mirror\nTurning off the Mirror\nWhen reading articles/blogs you can skip to next article\nAll voice parsing is done very simple, however I tried to make all commands as dynamic as possible. My implementation is nothing fancy, but it works very well with the features I have right now. It looks for keywords in the spoken senetence and tries to extract it's meaning. Extending it with a lot of speech commands will most likely result in chaos.\nReminders can be created in various ways (In Swedish, but translated here to english):\nRemind [me] in 20 minutes/hours/days to take a walk.\nRemind [me] to walk the dog in 2 minutes/hours/days.\nRemind [me] tomorrow at 12:35 to do the dishes.\nRemind [me] on weekday to wash the car.\nRemind [me] to buy/shop [more/extra] milk. // Adds it to a Wunderlist list (Shopping list in my case)\nWhen a reminder is successfully created, the Mirror will speak something like \"Will remind you to do X\".\nLed strip\nBehind the Mirror I have a RGB led strip with individually controllable leds. The leds can be controlled from my Home automation and monitoring app.\nComponents\nAll components can be individually shown/hidden by the Web App/API endpoint. The default behaviour is configured in the config.\nShopping list\nIt displays the items on a Wunderlist list (in my case our shopping list).\nWeather\nDisplays current weather including temperature outside, feels like temperature wind speed and direction. Also sunrise/sunset and 5 day forecast.\nInside temperature\nWhich is retreived from a DS18B20 temperature sensor connected to the Raspberry PI running the Mirror.\nMotion detection\nMotion detection is retreived from a connected PIR motion detector connected to the Raspberry PI. When motion is detected, a message will appear on the Mirror. It changes depending on the time of the day. Also it notifies my Home automation and monitoring backend that motion was detected, so my Home automation and monitoring app will notify me if I'm not at home and someone is in my apartment.\nSwedish news from SVT\nHeadlines and short descriptions are changing in the bottom of the Mirror every 20 seconds or so.\nSpotify currently playing\nShows your currently playing track, because why not.\nMoisture level of a plant\nShows if your plant needs watering, data is sent from a battery powered esp8266 with a moisture sensor, placed in one of our plants.\nOctoPi\nShows some information of your current 3D print, such as the filename, bed/nozzle temperatures and the progress.\nRunning locally\nSet up config file\nCopy and rename config.js.default to config.js\nEdit config.js and select which modules/functions you want to enable\nexport const config = {\nYAHOO_WOEID: '897819',\nSMHI_COORD: {\nlongitude: '13',\nlatitude: '55.6'\n},\nsvtNewsUrl: 'https://api.rss2json.com/v1/api.json?rss_url=http%3A%2F%2Fwww.svt.se%2Fnyheter%2Frss.xml',\nserverBaseURL: process.env.NODE_ENV === 'production' ? 'http://localhost:3001' : 'http://localhost:3000',\nwsServerBaseURL: process.env.NODE_ENV === 'production' ? 'localhost:3001/' : 'localhost:3001/',\nmodules: {\ndateTime: true,\nwunderlistTasks: false,\ntransfer: false,\nweather: true,\nforecast: true,\nnews: true,\ntempPirSensor: false,\ngoogleCloudSpeech: false,\nphilipsHue: false,\ntemperatureGraph: false,\narticles: false,\n}\n};\nAdd .env file to add custom config parameters (optional)\nRuleThemAllBackendAccessToken=''\nwunderlistAccessToken=''\nwunderlistClientID=''\nwunderlistListID='' // The ID of the list to fetch/create tasks in.\nGOOGLE_APPLICATION_CREDENTIALS = '/home/user/../credentials.json'\nGCLOUD_PROJECT = 'project_ID'\nHUE_HOSTNAME='192.168.X.X' // Your bridge IP\nHUE_USERNAME='username' // See https://github.com/peter-murray/node-hue-api\ntarget='Krantz-Ubuntu' // Set to 'PI' on your Raspberry Pi. Avoids errors initializing gpio when not on Pi.\nRun it\nNOTE: This project is only tested on Node v7.6.0. New versions of Node may not work. If you get wierd errors, downgrade to Node v7.6.0.\ngit clone https://github.com/jakkra/SmartMirror.git\ncd SmartMirror\nnpm i\ncd client\nnpm i\ncd ..\nnpm start\nNote: The current package.json are compatible with node 7.6.0 If you get errors building with later version of node, use below to downgrade:\nsudo npm cache clean -f\nsudo npm install -g n\nsudo n 7.6.0\nCode style\nprettier --print-width 120 --jsx-bracket-same-line --single-quote --trailing-comma es5 --write ./**/*.js\nBuilding\nRunning npm run build creates the static bundle.\ncd client/\nnpm run build\nMove client/webApp-move2build to client/build and rename it to whatever. It's accessed on / afterwards.\nSolutions\nWebpack doesn't reload when saving:\n$echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\nAuto open chrome in SSH on RaspberryPi:\nexport DISPLAY=:0.0\nnpm start\nUseful commands\n$ sudo apt-get install unclutter\n$ unclutter -display :0.0 -idle 5 # Hides cursor after 5 seconds of inactivity\n$ export DISPLAY=:0.0 # When starting chromium over SSH this must be done\n$ chromium-browser --kiosk --incognito http://localhost:3001 # Launch Chromium in kiosk mode\n$ sudo apt-get install -y fonts-tlwg-sawasdee # Installs the font I use.\n$ sudo iptables -t nat -I PREROUTING --source 0/0 --destination 0/0 -p tcp --dport 80 -j REDIRECT --to-ports 3001 # Redirect traffic on port 80 to our server at 3001. Allows access on local network to web app on url <hostname>/app.\n$ sudo apt-get install iptables-persistent # Keep iptables after reboots\n# Flashing new software to the arduino from the terminal\n# Install libraries\n$ arduino --install-library \"Adafruit NeoPixel\"\n$ arduino --install-library \"MsTimer2\"\n$ arduino --board arduino:avr:uno --port /dev/ttyACM0 --save-prefs # store config\n$ arduino --upload $(pwd)/ledstrip.ino # Flashes the new software\n#Find port of CC2531 USB stick\n$ls -l /dev/serial/by-id\nStarting and updating the mirror on boot\nSave this file somewhere:\n#!/bin/sh\ncd /home/pi/Documents/SmartMirror # Edit to path of project\ngit fetch\nif [ $(git rev-parse HEAD) != $(git rev-parse @{u}) ]; then\necho \"Updating mirror\"\ngit stash # Just incase we wanted to save some change\ngit reset --hard origin/master\ncd client\nnpm run build\ncd ..\ncp -r client/webApp-move2build client/build/app\nfi\nNODE_ENV=production /usr/bin/npm run server > mirrorLog.txt &\nexport DISPLAY=:0.0\n/bin/sleep 30 # Let the server startup before trying to access the website, otherwise we get page not found.\nsudo -u pi chromium-browser --kiosk --incognito http://localhost:3001 # Chromium must not be ran as root.\nAdd @/home/pi/start.sh to ~/.config/lxsession/LXDE-pi/autostart", "link": "https://github.com/jakkra/SmartMirror", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "bed", "selectorShort": "bed", "MarkedSent": "smartmirror\nit's a magic mirror, you all know what it is. this is a complete rewrite in react and node.js of my original magic mirror written in java. everything is improved and it has lots of new functions.\nboth voice recognition and the ui is in swedish, however english is also supported by setting language to 'en-us' in the config. for porting to other languages take a look in the locales folder, should be pretty straight forward\nimages\nmy home automation and monitoring app which can control the mirror supports ios, however you must pay to be a developer to run it on an actual device, so i made a simple web app to control the mirror from.\nfeatures\nvoice recognation using google cloud speech\nsince google cloud speech costs, i use snowboy to listen for my hotword \"spegel\" or \"mirror\" on english. when it's detected the mirror records untill end of speech and sends it to google cloud speech.\ncreate reminders on my home automation and monitoring backend.\ncreate tasks in a wunderlist list.\ncontrol philips hue lights. turn on and off individual lamps or all, for example \"turn the lights off in the bedroom\" or similar.\nhide/show individual elements on the mirror\nturning off the mirror\nwhen reading articles/blogs you can skip to next article\nall voice parsing is done very simple, however i tried to make all commands as dynamic as possible. my implementation is nothing fancy, but it works very well with the features i have right now. it looks for keywords in the spoken senetence and tries to extract it's meaning. extending it with a lot of speech commands will most likely result in chaos.\nreminders can be created in various ways (in swedish, but translated here to english):\nremind [me] in 20 minutes/hours/days to take a walk.\nremind [me] to walk the dog in 2 minutes/hours/days.\nremind [me] tomorrow at 12:35 to do the dishes.\nremind [me] on weekday to wash the car.\nremind [me] to buy/shop [more/extra] milk. // adds it to a wunderlist list (shopping list in my case)\nwhen a reminder is successfully created, the mirror will speak something like \"will remind you to do x\".\nled strip\nbehind the mirror i have a rgb led strip with individually controllable leds. the leds can be controlled from my home automation and monitoring app.\ncomponents\nall components can be individually shown/hidden by the web app/api endpoint. the default behaviour is configured in the config.\nshopping list\nit displays the items on a wunderlist list (in my case our shopping list).\nweather\ndisplays current weather including temperature outside, feels like temperature wind speed and direction. also sunrise/sunset and 5 day forecast.\ninside temperature\nwhich is retreived from a ds18b20 temperature sensor connected to the raspberry pi running the mirror.\nmotion detection\nmotion detection is retreived from a connected pir motion detector connected to the raspberry pi. when motion is detected, a message will appear on the mirror. it changes depending on the time of the day. also it notifies my home automation and monitoring backend that motion was detected, so my home automation and monitoring app will notify me if i'm not at home and someone is in my apartment.\nswedish news from svt\nheadlines and short descriptions are changing in the bottom of the mirror every 20 seconds or so.\nspotify currently playing\nshows your currently playing track, because why not.\nmoisture level of a plant\nshows if your plant needs watering, data is sent from a battery powered esp8266 with a moisture sensor, placed in one of our plants.\noctopi\nshows some information of your current 3d print, such as the filename, -----> bed !!! /nozzle temperatures and the progress.\nrunning locally\nset up config file\ncopy and rename config.js.default to config.js\nedit config.js and select which modules/functions you want to enable\nexport const config = {\nyahoo_woeid: '897819',\nsmhi_coord: {\nlongitude: '13',\nlatitude: '55.6'\n},\nsvtnewsurl: 'https://api.rss2json.com/v1/api.json?rss_url=http%3a%2f%2fwww.svt.se%2fnyheter%2frss.xml',\nserverbaseurl: process.env.node_env === 'production' ? 'http://localhost:3001' : 'http://localhost:3000',\nwsserverbaseurl: process.env.node_env === 'production' ? 'localhost:3001/' : 'localhost:3001/',\nmodules: {\ndatetime: true,\nwunderlisttasks: false,\ntransfer: false,\nweather: true,\nforecast: true,\nnews: true,\ntemppirsensor: false,\ngooglecloudspeech: false,\nphilipshue: false,\ntemperaturegraph: false,\narticles: false,\n}\n};\nadd .env file to add custom config parameters (optional)\nrulethemallbackendaccesstoken=''\nwunderlistaccesstoken=''\nwunderlistclientid=''\nwunderlistlistid='' // the id of the list to fetch/create tasks in.\ngoogle_application_credentials = '/home/user/../credentials.json'\ngcloud_project = 'project_id'\nhue_hostname='192.168.x.x' // your bridge ip\nhue_username='username' // see https://github.com/peter-murray/node-hue-api\ntarget='krantz-ubuntu' // set to 'pi' on your raspberry pi. avoids errors initializing gpio when not on pi.\nrun it\nnote: this project is only tested on node v7.6.0. new versions of node may not work. if you get wierd errors, downgrade to node v7.6.0.\ngit clone https://github.com/jakkra/smartmirror.git\ncd smartmirror\nnpm i\ncd client\nnpm i\ncd ..\nnpm start\nnote: the current package.json are compatible with node 7.6.0 if you get errors building with later version of node, use below to downgrade:\nsudo npm cache clean -f\nsudo npm install -g n\nsudo n 7.6.0\ncode style\nprettier --print-width 120 --jsx-bracket-same-line --single-quote --trailing-comma es5 --write ./**/*.js\nbuilding\nrunning npm run build creates the static bundle.\ncd client/\nnpm run build\nmove client/webapp-move2build to client/build and rename it to whatever. it's accessed on / afterwards.\nsolutions\nwebpack doesn't reload when saving:\n$echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\nauto open chrome in ssh on raspberrypi:\nexport display=:0.0\nnpm start\nuseful commands\n$ sudo apt-get install unclutter\n$ unclutter -display :0.0 -idle 5 # hides cursor after 5 seconds of inactivity\n$ export display=:0.0 # when starting chromium over ssh this must be done\n$ chromium-browser --kiosk --incognito http://localhost:3001 # launch chromium in kiosk mode\n$ sudo apt-get install -y fonts-tlwg-sawasdee # installs the font i use.\n$ sudo iptables -t nat -i prerouting --source 0/0 --destination 0/0 -p tcp --dport 80 -j redirect --to-ports 3001 # redirect traffic on port 80 to our server at 3001. allows access on local network to web app on url <hostname>/app.\n$ sudo apt-get install iptables-persistent # keep iptables after reboots\n# flashing new software to the arduino from the terminal\n# install libraries\n$ arduino --install-library \"adafruit neopixel\"\n$ arduino --install-library \"mstimer2\"\n$ arduino --board arduino:avr:uno --port /dev/ttyacm0 --save-prefs # store config\n$ arduino --upload $(pwd)/ledstrip.ino # flashes the new software\n#find port of cc2531 usb stick\n$ls -l /dev/serial/by-id\nstarting and updating the mirror on boot\nsave this file somewhere:\n#!/bin/sh\ncd /home/pi/documents/smartmirror # edit to path of project\ngit fetch\nif [ $(git rev-parse head) != $(git rev-parse @{u}) ]; then\necho \"updating mirror\"\ngit stash # just incase we wanted to save some change\ngit reset --hard origin/master\ncd client\nnpm run build\ncd ..\ncp -r client/webapp-move2build client/build/app\nfi\nnode_env=production /usr/bin/npm run server > mirrorlog.txt &\nexport display=:0.0\n/bin/sleep 30 # let the server startup before trying to access the website, otherwise we get page not found.\nsudo -u pi chromium-browser --kiosk --incognito http://localhost:3001 # chromium must not be ran as root.\nadd @/home/pi/start.sh to ~/.config/lxsession/lxde-pi/autostart", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000528, "year": null}, {"Unnamed: 0": 701, "autor": 701, "date": null, "content": "About\nThis is my personal Home Assistant configuration, running my home automations.\nCustom components\nCovid-19 India tracker\nA Home assistant custom component to get information about Covid-19 status in India.\nGoogle Fit\nA Home assistant custom component to get your fitness information using Google Fitness API.\nScreenshots\nCovid-19 India tracker\nDefault view\nLiving room\nMaster bed room\nBed room\nKitchen\nGoogle fit\nDevice tracker\nBattery status\nSystem monitor\nLinks\nHome Assistant Homepage\nHome Assistant Forums\nHome Assistant Community on Reddit\nOther Featured Home Assistant Configurations\nHome Assistant GitHub Source Repository\nOfficial Home Assistant Demo\nPlease \u2b50 this repo if you find it useful. If you have questions on my configuration, ping me on twitter @hemantkamalakar\nIf my work helps you reduce time to develop, you can always consider buying me a cup of coffee.", "link": "https://github.com/hemantkamalakar/haconfigs", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "bed", "selectorShort": "bed", "MarkedSent": "about\nthis is my personal home assistant configuration, running my home automations.\ncustom components\ncovid-19 india tracker\na home assistant custom component to get information about covid-19 status in india.\ngoogle fit\na home assistant custom component to get your fitness information using google fitness api.\nscreenshots\ncovid-19 india tracker\ndefault view\nliving room\nmaster -----> bed !!!  room\n-----> bed !!!  room\nkitchen\ngoogle fit\ndevice tracker\nbattery status\nsystem monitor\nlinks\nhome assistant homepage\nhome assistant forums\nhome assistant community on reddit\nother featured home assistant configurations\nhome assistant github source repository\nofficial home assistant demo\nplease \u2b50 this repo if you find it useful. if you have questions on my configuration, ping me on twitter @hemantkamalakar\nif my work helps you reduce time to develop, you can always consider buying me a cup of coffee.", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000701, "year": null}, {"Unnamed: 0": 875, "autor": 875, "date": null, "content": "GeniSys NLU Engine\nAbout GeniSys AI\nGeniSys AI is an open source Artificial Intelligence Assistant Network using Computer Vision, Natural Linguistics and the Internet of Things. GeniSys uses a system based on TASS A.I for vision, an NLU engine for natural language understanding, in browser speech synthesis and speech recognition for speech and hearing, all homed on a dedicated Linux server in your home and managed via a secure UI.\nAbout GeniSys NLU Engine\nI orginally developed what is now the GeniSys NLU Engine back in 2017 (How I built a fully functional Deep Learning Neural Network chatbot platform (NLU Engine) in under a week....). The project was originally developed to be used in some commercial AI projects I had built, after I closed the business down it became a personal project for my home and as I have open sourced most of my other projects, it made sense to open source this one.\nThe NLU Engine includes a combination of a custom trained DNN (Deep Learning Neural Network) built using TFLearn for intent classification, and a custom trained MITIE model for entity classification. The engine can can handle not only named entities, but synonyms also and both features are used by the core training module.\nWhat Will We Do?\nThis tutorial will help you setup the NLU Engine required for your GeniSys network, and also takes you through setting up iotJumpWay devices. In detail this guide will cover the following:\nInstalling and setting up required software\nCreating your intent and entity training data\nTraining your intent and entity classifiers\nTesting your classifier locally in real time\nTesting your classifier API via a client\nExample Output\nThe following is an unedited conversation within the basic capabilities provided by the example training data (The full response print out has been removed to make it easy to follow the conversation):\n>Hi\n2018-09-30 22:58:37|Human|Intent: Hi\n2018-09-30 22:58:37|GeniSys|Reponse: Hello human, please tell me your GeniSys user\n>It is Adam of course!\n2018-09-30 22:58:44|Human|Intent: It is Adam of course!\n2018-09-30 22:58:44|GeniSys|Reponse: Hello Adam, what can I do for you?\n>If I was your friend, what would I call you?\n2018-09-30 22:58:54|Human|Intent: If I was your friend, what would I call you?\n2018-09-30 22:58:54|GeniSys|Reponse: Call me Geni\n>Ok but what is your real name?\n2018-09-30 22:59:01|Human|Intent: Ok but what is your real name?\n2018-09-30 22:59:01|GeniSys|Reponse: My name is GeniSys\n>Ok thanks\n2018-09-30 22:59:10|Human|Intent: Ok thanks\n2018-09-30 22:59:10|GeniSys|Reponse: Any time!\n>Please tell me, what is my name?\n2018-09-30 22:59:22|Human|Intent: Please tell me, what is my name?\n2018-09-30 22:59:22|GeniSys|Reponse: Your name is Adam, how can I help you?\n>I don't suppose you know what time it is?\n2018-09-30 22:59:32|Human|Intent: I don't suppose you know what time it is?\n2018-09-30 22:59:32|GeniSys|Reponse: The time is Sun Sep 30 22:59:32 2018\n>Ah cool thanks\n2018-09-30 22:59:37|Human|Intent: Ah cool thanks\n2018-09-30 22:59:37|GeniSys|Reponse: My pleasure\nIn the conversation above, when I asked the time, the extension attached to the related intent in the training data is triggered, basically an extension is the path to a function in one of your custom classes, you can find out more about this later in the tutorial. Although hardly any of the things I said were entirely provided in the training data, the AI was capable of identifying my intent.\nOperating System\nTested on Ubuntu 18.04.1 LTS (Bionic Beaver), previous versions have been tested in Windows successfully but you need to make sure you install MITIE correctly on your Windows machine.\nPython Versions\nTested with Python 3.5\nSoftware Requirements\nTensorflow 1.4.0\nTFLearn\nMITIE\nNTLK (Natural Language Toolkit)\niotJumpWay MQTT Client\nHardware Requirements\n1 x Desktop device or laptop for development and training, prefereably with an NVIDIA GPU\nInstallation & Setup\nThe following guides will give you the basics of setting up a GeniSys NLU Engine.\nPrerequisites\nYou must of already completed the setup following project:\nGeniSys Server\nThe following guides will give you the basics of setting up a GeniSys NLU Engine.\nClone The GeniSys NLU Engine Repo\nFirst you need to clone the NLU Engine repo to the machine you will be running it on. To do so, navigate to the directory you want to place it in terminal and execute the following command:\n$ git clone https://github.com/GeniSysAI/NLU.git\nOnce you have done this, you have all the code you need on your machine.\nInstall The Required Software\nNow you need to install the required software, I have provided a requirements file that will contain all required modules for the project. You can use it to install the modules using the following command:\n$ sh setup.sh\nThe command execute the setup shell file which will istall the required software for the project including NTLK, TFLearn, MITIE and iotJumpWay.\nSet Up iotJumpWay\nNow you need to setup some an iotJumpWay device that will represent your NLU Engine on the Internet of Things. The following part of the tutorial will guide you through the process.\nFind out about the iotJumpWay\nFind out about the iotJumpWay Dev Program\nGet started with the iotJumpWay Dev Program\nFirst of all you should register your free iotJumpWay account, all services provided by the iotJumpWay are also entirely free within fair limits. Once you have registered you need to:\nCreate your iotJumpWay location (Documentation)\nCreate your iotJumpWay zones (Documentation)\nCreate your iotJumpWay devices (Documentation)\nOnce you have set up your iotJumpWay device, you should update the configuration file with your iotJumpWay credentials.\nTraining Data\nNow it is time to think about training data. In the data/training.json file I have provided some starter data, it is not a lot but enough to have a good test and show the example further on in the tutorial.\nExtensions\nExtensions are external Python classes that you can use to extend the functionality used to generate a response. Extensions should be stored in the extensions directory. Below is an example configuration that is used to execute the gTime -> getTime function. Defined responses with placeholders specified by %%, once the function is ready it will return a modified response replacing %%TIME%% with the actual time. This response will override any response previously selected. For a more detailed extension, check out gHumans which uses MySql to manage the users GeniSys interacts with.\n\"extension\": {\n\"function\": \"extensions.gTime.getTime\",\n\"entities\": false,\n\"responses\": [\n\"The time is %%TIME%%\",\n\"Right now it is %%TIME%%\",\n\"It is around %%TIME%%\"\n]\n}\nTraining Your NLU Engine\nNow everything is set up, it is time to train. The main functionality for the training process can be found in Train.py, tools/Data.py, tools/Model.py and tools/Mitie.py, the configuration for training can be found and modified in required/confs.json. If you have modified your training data, you may need to update your configuration from time to time.\nTo begin training, make sure you are all set up, navigate to the root of the project and execute the following command:\n$ python3 run.py TRAIN\nTensorboard\nYou can use Tensorboard to see how your deep neural network has done during training. If you used the default Nginx configuration then you should be able to access Tensorboard on YourDomainName/tensorboard/, note the / at the end of tensorboard/ is required.\nOnce training has finished you can start Tensorboard with the following commands:\n$ tensorboard --logdir model/TFLearn\nCommunicating with your AI Locally\nNow you have trained your AI, it is time to test her out! In this tutorial I will base my explanation on the conversation block at the beginning of this tutorial.\nAs your AI is now trained, all you need to do (assuming you are in the project root), is execute the following code:\n$ python3 run.py INPUT\nIf you have looked through the example data, you may notice that almost none of the things that I said in the above dialogue had been directly trained to the AI. For example, with the question If I was your friend, what would I call you?, the actual training data provided to the AI related to this question is actually:\n\"intent\": \"NameQuery\",\n\"text\": [\n\"What is your name?\",\n\"What could I call you?\",\n\"What can I call you?\",\n\"What do your friends call you?\",\n\"Who are you?\",\n\"Tell me your name?\"\n]\nYou can see that the example above was not in the training data, but the AI was still able to classify and respond correctly.\nJoking With Your AI\nBasic functionality exists for parsing AIML documents into a format suitable for training the NLU and adding it to the training data. Below is an example after training with a few jokes found in an AIML file provided by Pandorabots, this file actually turned out to be written by one of my friends, 4 time Loebner Prize winner for most human like AI, Steve Worswick.\n2018-09-08 22:03:38|Inference|INFO: Inference Started In INPUT Mode\n2018-09-08 22:03:38|Session|INFO: NLU Session Ready For User #1\n>I bet you are not funny, can you tell me a joke?\n2018-09-08 22:03:51|Human|Intent: I bet you are not funny, can you tell me a joke?\n2018-09-08 22:03:51|GeniSys|Reponse: A man returns from an exotic holiday and is feeling very ill. He goes to see his doctor, and is immediately rushed to the hospital to undergo some tests. The man wakes up after the tests in a private room at the hospital, and the phone by his bed rings. 'This is your doctor. We have the results back from your tests and we have found you have an extremely nasty disease called M.A.D.S. It's a combination of Measles, AIDS, Diphtheria, and Shingles!' 'Oh my gosh', cried the man, 'What are you going to do, doctor?' 'Well we're going to put you on a diet of pizzas, pancakes, and pita bread.' replied the doctor. 'Will that cure me?' asked the man. The doctor replied, 'Well no, but, it's the only food we can slide under the door.'\n>Not bad, tell me another joke\n2018-09-08 22:04:12|Human|Intent: Not bad, tell me another joke\n2018-09-08 22:04:12|GeniSys|Reponse: A doctor thoroughly examined his patient and said, 'Look I really can't find any reason for this mysterious affliction. It's probably due to drinking.' The patient sighed and snapped, 'In that case, I'll come back when you're damn well sober!'\n>Alcohol jokes are always funny! You can tell me another joke\n2018-09-08 22:04:40|Human|Intent: Alcohol jokes are always funny! You can tell me another joke\n2018-09-08 22:04:40|GeniSys|Reponse: Man: Doctor, I've just swallowed a pillow. Doctor: How do you feel? Man: A little down in the mouth.\n>Haha\nCommunicating with your AI Via The Internet\nIn version 0.0.2, the functionality was added to enable accessing the NLU via a secure API endpoint. To start your NLU engine in server mode, you can enter the following commands into terminal:\n$ python3 run.py SERVER 0.5\nThis starts the server up and sets a threshold for classifications of 0.5.\nIf you used the provided NGINX configuration of the GeniSys Server guide,\nserver_name Subdomain.Domain.TLD;\nlocation ~ ^/communicate/ {\nproxy_pass http://###.###.#.###:5824/$uri$is_args$args;\n}\nyou will now be able to access your NLU by posting to http://www.YourDomain.com/communicate/infer/USERID, to do this, I provided an an API client programmed in Python which takes your input from console and sends it to the server for processing: GeniSys API Client.\nNavigate to the project root and execute the following command to send a query to your NLU engine, you can use any question or statement, but bear in mind it must be within the boundaries of variations of the training date.\n$ python3 client.py CLASSIFY 1 \"Do you know what I am saying?\"\nIn other GeniSys AI tutorials, you will build applications and use the UI to train and manage the engine.\nInteracting With TASS Computer Vision\nThe core and remote computer vision systems used by GeniSys are based on TASS AI, if you have set up your GeniSys AI Server and granted camera permissions to the UI, you will be able to see your self on the new dashboard. You can communicate with the NLU engine via the chat window to the right of the camera stream.\nA new feature recently added to the upcoming 0.0.3 release is the ability for you to ask the AI who you are. This feature uses a combination of the iotJumpWay TASS REST API, the local server camera and TASS to determine who it saw in the last 10 seconds.\nEach time a TASS device detects a known human or an intruder it updates the iotJumpWay enabling you to keep track as they move around the house, this allows the network to know where people at any one time as long as there are TASS units set up in each room.\nUsing an action, the system will contact the iotJumpWay securely and retrieve any and all people it saw in the last five seconds. If it has not seen any one it will ask the user to look at the camera.\nThese features are the first steps towards a system wide user management system which will include emotional analysis and a number of other features.\nUseful Links\nLinks to related articles that helped at various stages of the project for research / code examples:\nTFLearn Quickstart\nBag of Words Algorithm in Python Introduction\nChatbot Architecture\nContextual Chatbots with Tensorflow\nRasaNLU\nStay Tuned!!\nThere are more features from my original version that are still yet to be implemented plus some other cool features, pluse the combined system of all three GeniSys AI repos.\nContributing\nPlease read CONTRIBUTING.md for details on our code of conduct, and the process for submitting pull requests to us.\nVersioning\nWe use SemVer for versioning. For the versions available, see GeniSysAI/NLU/releases.\nLicense\nThis project is licensed under the MIT License - see the LICENSE file for details.\nBugs/Issues\nWe use the repo issues to track bugs and general requests related to using this project.\nAuthor", "link": "https://github.com/GeniSysAI/NLU", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "bed", "selectorShort": "bed", "MarkedSent": "genisys nlu engine\nabout genisys ai\ngenisys ai is an open source artificial intelligence assistant network using computer vision, natural linguistics and the internet of things. genisys uses a system based on tass a.i for vision, an nlu engine for natural language understanding, in browser speech synthesis and speech recognition for speech and hearing, all homed on a dedicated linux server in your home and managed via a secure ui.\nabout genisys nlu engine\ni orginally developed what is now the genisys nlu engine back in 2017 (how i built a fully functional deep learning neural network chatbot platform (nlu engine) in under a week....). the project was originally developed to be used in some commercial ai projects i had built, after i closed the business down it became a personal project for my home and as i have open sourced most of my other projects, it made sense to open source this one.\nthe nlu engine includes a combination of a custom trained dnn (deep learning neural network) built using tflearn for intent classification, and a custom trained mitie model for entity classification. the engine can can handle not only named entities, but synonyms also and both features are used by the core training module.\nwhat will we do?\nthis tutorial will help you setup the nlu engine required for your genisys network, and also takes you through setting up iotjumpway devices. in detail this guide will cover the following:\ninstalling and setting up required software\ncreating your intent and entity training data\ntraining your intent and entity classifiers\ntesting your classifier locally in real time\ntesting your classifier api via a client\nexample output\nthe following is an unedited conversation within the basic capabilities provided by the example training data (the full response print out has been removed to make it easy to follow the conversation):\n>hi\n2018-09-30 22:58:37|human|intent: hi\n2018-09-30 22:58:37|genisys|reponse: hello human, please tell me your genisys user\n>it is adam of course!\n2018-09-30 22:58:44|human|intent: it is adam of course!\n2018-09-30 22:58:44|genisys|reponse: hello adam, what can i do for you?\n>if i was your friend, what would i call you?\n2018-09-30 22:58:54|human|intent: if i was your friend, what would i call you?\n2018-09-30 22:58:54|genisys|reponse: call me geni\n>ok but what is your real name?\n2018-09-30 22:59:01|human|intent: ok but what is your real name?\n2018-09-30 22:59:01|genisys|reponse: my name is genisys\n>ok thanks\n2018-09-30 22:59:10|human|intent: ok thanks\n2018-09-30 22:59:10|genisys|reponse: any time!\n>please tell me, what is my name?\n2018-09-30 22:59:22|human|intent: please tell me, what is my name?\n2018-09-30 22:59:22|genisys|reponse: your name is adam, how can i help you?\n>i don't suppose you know what time it is?\n2018-09-30 22:59:32|human|intent: i don't suppose you know what time it is?\n2018-09-30 22:59:32|genisys|reponse: the time is sun sep 30 22:59:32 2018\n>ah cool thanks\n2018-09-30 22:59:37|human|intent: ah cool thanks\n2018-09-30 22:59:37|genisys|reponse: my pleasure\nin the conversation above, when i asked the time, the extension attached to the related intent in the training data is triggered, basically an extension is the path to a function in one of your custom classes, you can find out more about this later in the tutorial. although hardly any of the things i said were entirely provided in the training data, the ai was capable of identifying my intent.\noperating system\ntested on ubuntu 18.04.1 lts (bionic beaver), previous versions have been tested in windows successfully but you need to make sure you install mitie correctly on your windows machine.\npython versions\ntested with python 3.5\nsoftware requirements\ntensorflow 1.4.0\ntflearn\nmitie\nntlk (natural language toolkit)\niotjumpway mqtt client\nhardware requirements\n1 x desktop device or laptop for development and training, prefereably with an nvidia gpu\ninstallation & setup\nthe following guides will give you the basics of setting up a genisys nlu engine.\nprerequisites\nyou must of already completed the setup following project:\ngenisys server\nthe following guides will give you the basics of setting up a genisys nlu engine.\nclone the genisys nlu engine repo\nfirst you need to clone the nlu engine repo to the machine you will be running it on. to do so, navigate to the directory you want to place it in terminal and execute the following command:\n$ git clone https://github.com/genisysai/nlu.git\nonce you have done this, you have all the code you need on your machine.\ninstall the required software\nnow you need to install the required software, i have provided a requirements file that will contain all required modules for the project. you can use it to install the modules using the following command:\n$ sh setup.sh\nthe command execute the setup shell file which will istall the required software for the project including ntlk, tflearn, mitie and iotjumpway.\nset up iotjumpway\nnow you need to setup some an iotjumpway device that will represent your nlu engine on the internet of things. the following part of the tutorial will guide you through the process.\nfind out about the iotjumpway\nfind out about the iotjumpway dev program\nget started with the iotjumpway dev program\nfirst of all you should register your free iotjumpway account, all services provided by the iotjumpway are also entirely free within fair limits. once you have registered you need to:\ncreate your iotjumpway location (documentation)\ncreate your iotjumpway zones (documentation)\ncreate your iotjumpway devices (documentation)\nonce you have set up your iotjumpway device, you should update the configuration file with your iotjumpway credentials.\ntraining data\nnow it is time to think about training data. in the data/training.json file i have provided some starter data, it is not a lot but enough to have a good test and show the example further on in the tutorial.\nextensions\nextensions are external python classes that you can use to extend the functionality used to generate a response. extensions should be stored in the extensions directory. below is an example configuration that is used to execute the gtime -> gettime function. defined responses with placeholders specified by %%, once the function is ready it will return a modified response replacing %%time%% with the actual time. this response will override any response previously selected. for a more detailed extension, check out ghumans which uses mysql to manage the users genisys interacts with.\n\"extension\": {\n\"function\": \"extensions.gtime.gettime\",\n\"entities\": false,\n\"responses\": [\n\"the time is %%time%%\",\n\"right now it is %%time%%\",\n\"it is around %%time%%\"\n]\n}\ntraining your nlu engine\nnow everything is set up, it is time to train. the main functionality for the training process can be found in train.py, tools/data.py, tools/model.py and tools/mitie.py, the configuration for training can be found and modified in required/confs.json. if you have modified your training data, you may need to update your configuration from time to time.\nto begin training, make sure you are all set up, navigate to the root of the project and execute the following command:\n$ python3 run.py train\ntensorboard\nyou can use tensorboard to see how your deep neural network has done during training. if you used the default nginx configuration then you should be able to access tensorboard on yourdomainname/tensorboard/, note the / at the end of tensorboard/ is required.\nonce training has finished you can start tensorboard with the following commands:\n$ tensorboard --logdir model/tflearn\ncommunicating with your ai locally\nnow you have trained your ai, it is time to test her out! in this tutorial i will base my explanation on the conversation block at the beginning of this tutorial.\nas your ai is now trained, all you need to do (assuming you are in the project root), is execute the following code:\n$ python3 run.py input\nif you have looked through the example data, you may notice that almost none of the things that i said in the above dialogue had been directly trained to the ai. for example, with the question if i was your friend, what would i call you?, the actual training data provided to the ai related to this question is actually:\n\"intent\": \"namequery\",\n\"text\": [\n\"what is your name?\",\n\"what could i call you?\",\n\"what can i call you?\",\n\"what do your friends call you?\",\n\"who are you?\",\n\"tell me your name?\"\n]\nyou can see that the example above was not in the training data, but the ai was still able to classify and respond correctly.\njoking with your ai\nbasic functionality exists for parsing aiml documents into a format suitable for training the nlu and adding it to the training data. below is an example after training with a few jokes found in an aiml file provided by pandorabots, this file actually turned out to be written by one of my friends, 4 time loebner prize winner for most human like ai, steve worswick.\n2018-09-08 22:03:38|inference|info: inference started in input mode\n2018-09-08 22:03:38|session|info: nlu session ready for user #1\n>i bet you are not funny, can you tell me a joke?\n2018-09-08 22:03:51|human|intent: i bet you are not funny, can you tell me a joke?\n2018-09-08 22:03:51|genisys|reponse: a man returns from an exotic holiday and is feeling very ill. he goes to see his doctor, and is immediately rushed to the hospital to undergo some tests. the man wakes up after the tests in a private room at the hospital, and the phone by his -----> bed !!!  rings. 'this is your doctor. we have the results back from your tests and we have found you have an extremely nasty disease called m.a.d.s. it's a combination of measles, aids, diphtheria, and shingles!' 'oh my gosh', cried the man, 'what are you going to do, doctor?' 'well we're going to put you on a diet of pizzas, pancakes, and pita bread.' replied the doctor. 'will that cure me?' asked the man. the doctor replied, 'well no, but, it's the only food we can slide under the door.'\n>not bad, tell me another joke\n2018-09-08 22:04:12|human|intent: not bad, tell me another joke\n2018-09-08 22:04:12|genisys|reponse: a doctor thoroughly examined his patient and said, 'look i really can't find any reason for this mysterious affliction. it's probably due to drinking.' the patient sighed and snapped, 'in that case, i'll come back when you're damn well sober!'\n>alcohol jokes are always funny! you can tell me another joke\n2018-09-08 22:04:40|human|intent: alcohol jokes are always funny! you can tell me another joke\n2018-09-08 22:04:40|genisys|reponse: man: doctor, i've just swallowed a pillow. doctor: how do you feel? man: a little down in the mouth.\n>haha\ncommunicating with your ai via the internet\nin version 0.0.2, the functionality was added to enable accessing the nlu via a secure api endpoint. to start your nlu engine in server mode, you can enter the following commands into terminal:\n$ python3 run.py server 0.5\nthis starts the server up and sets a threshold for classifications of 0.5.\nif you used the provided nginx configuration of the genisys server guide,\nserver_name subdomain.domain.tld;\nlocation ~ ^/communicate/ {\nproxy_pass http://###.###.#.###:5824/$uri$is_args$args;\n}\nyou will now be able to access your nlu by posting to http://www.yourdomain.com/communicate/infer/userid, to do this, i provided an an api client programmed in python which takes your input from console and sends it to the server for processing: genisys api client.\nnavigate to the project root and execute the following command to send a query to your nlu engine, you can use any question or statement, but bear in mind it must be within the boundaries of variations of the training date.\n$ python3 client.py classify 1 \"do you know what i am saying?\"\nin other genisys ai tutorials, you will build applications and use the ui to train and manage the engine.\ninteracting with tass computer vision\nthe core and remote computer vision systems used by genisys are based on tass ai, if you have set up your genisys ai server and granted camera permissions to the ui, you will be able to see your self on the new dashboard. you can communicate with the nlu engine via the chat window to the right of the camera stream.\na new feature recently added to the upcoming 0.0.3 release is the ability for you to ask the ai who you are. this feature uses a combination of the iotjumpway tass rest api, the local server camera and tass to determine who it saw in the last 10 seconds.\neach time a tass device detects a known human or an intruder it updates the iotjumpway enabling you to keep track as they move around the house, this allows the network to know where people at any one time as long as there are tass units set up in each room.\nusing an action, the system will contact the iotjumpway securely and retrieve any and all people it saw in the last five seconds. if it has not seen any one it will ask the user to look at the camera.\nthese features are the first steps towards a system wide user management system which will include emotional analysis and a number of other features.\nuseful links\nlinks to related articles that helped at various stages of the project for research / code examples:\ntflearn quickstart\nbag of words algorithm in python introduction\nchatbot architecture\ncontextual chatbots with tensorflow\nrasanlu\nstay tuned!!\nthere are more features from my original version that are still yet to be implemented plus some other cool features, pluse the combined system of all three genisys ai repos.\ncontributing\nplease read contributing.md for details on our code of conduct, and the process for submitting pull requests to us.\nversioning\nwe use semver for versioning. for the versions available, see genisysai/nlu/releases.\nlicense\nthis project is licensed under the mit license - see the license file for details.\nbugs/issues\nwe use the repo issues to track bugs and general requests related to using this project.\nauthor", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000875, "year": null}, {"Unnamed: 0": 914, "autor": 914, "date": null, "content": "Home Assistant Configuration\nHardware\nYes, I name my servers after rappers...\n\"biggie\"\nbiggie runs VMWare ESXi 5 and the following two virtual machines:\npfSense 2.3\nFreeNAS 9\nIt's primary function is as a router and as a NAS, mostly storing media (TV, movies, music) as well as a backup target for computers.\nSpecs\nSuperMicro X10SL7-F\nIntel(R) Xeon(R) CPU E3-1220 v3 @ 3.10GHz\n32GB RAM\nESXi runs off a USB key directly connected to the motherboard\n2x 120GB SSDs as boot drives for the virtual machines\n8 4TB Seagate NAS hard drives\n\"bigsean\"\nbigsean runs Ubuntu 16.04 LTS and is the primary home automation system.\nSpecs\nSuperMicro A1SRi-2758F-O\nIntegrated Intel Atom C2750 \"Avoton\" Octa-Core\n32GB RAM\n2x256GB SSD\n4x gigabit ethernet\nAeotec ZW090 Z-Wave Stick\nTripp Lite 1500VA UPS Back Up, AVR, LCD Display, 10 Outlets, 120V 900W, Tel & Coax Protection, USB (SMART1500LCDT)\nMisc\nWireless is provided by a Ubiquiti Networks Unifi 802.11ac Dual-Radio PRO Access Point\nEthernet is all connected via a TP-Link 48-Port Gigabit Ethernet Rackmount Switch\nSoftware\nHome Assistant, always running the dev branch, it gets updated a couple times a week.\nHomebridge\nhomebridge-homeassistant\nPlex Media Server\nInfluxDB for data collection\nGrafana for graphing\nMosquitto for MQTT\nPeople\nRobbie\nMacBook Pro\niPhone X\nDevices\nDevices are broken down by room\nEntrance Hallway\nEcoLink Door/Window Sensor (DWZWAVE2-ECO)\nLinear/GoControl/2gig WS15Z-1 Z-Wave Switch - next to front door\nLinear/GoControl/2gig WT00Z-1 Z-Wave 3-Way Accessory Switch - at far end of hallway\nKitchen\n3 Linear GoControl WS15Z-1 Z-Wave Switch\nOverhead Lights\nCounter Lights\nUnder Cabinet Lights\nLiving Room\nHomeSeer HS-WD100+ Z-Wave Plus Scene-Capable Wall Dimmer - controls lights over dining table\nAeotec ZW100 Multisensor - mounted high up in corner of room\nPhilips Hue Lightstrip (1st Generation) - under counter\nAmazon Echo\n2 Philips Hue White and Color Ambiance Light Bulb, A19 - in lights on either side of the couch\nSony XBR65X850D 65-Inch 4K Ultra HD Smart TV (2016 model)\nAndroid TV\nNotifications for Android TV installed\nOnkyo TX-NR616 7.2- Channel Network A/V Receiver\n2 Klipsch RF-42 II Floorstanding Speaker\n2 Klipsch RB-41 II Bookshelf Speaker\nKlipsch Sub-12 12-inch 300W Subwoofer\nKlipsch RC-42 II Center Channel\nSonos CONNECT\nApple TV, 4th Generation, 32GB\nChromecast (2nd Generation)\niTach IP2IR (unused)\nPlayStation TV\nGuest Bathroom\nAmazon Echo Dot\nUE Roll (1st Generation) - paired with Echo Dot via Bluetooth\nWithings Body Cardio - Heart Health and Body Composition Wi-Fi Scale, Black\nInterior Hallway\nPhilips Hue Bloom\nLinear/GoControl/2gig WS15Z-1 Z-Wave Switch - next to Living Room Dimmer\nLinear/GoControl/2gig WT00Z-1 Z-Wave 3-Way Accessory Switch - at far end of hallway\nEnerwave ZWN-BPC Z-Wave Motion Sensor\nAll hardware listed at the top of this README is on a desk in the interior hallway\nRobbie's Room\nEcoLink Door/Window Sensor (DWZWAVE2-ECO)\nAeotec ZW100 Multisensor - mounted high up in corner of room above desk\n3 Philips Hue White and Color Ambiance Light Bulb, A19\nFloorstanding lamp next to desk\nLeft and right sides of bed, mounted at head level in an IKEA MINUT wall lamp\nPhilips Hue Lightstrip (1st Generation) - under desk\nRGB LED Strip with Wifi Controller - On ledge under window to right of bed\nAmazon Echo\nSonos PLAY:3\nZEEQ Smart Pillow\nToshiba 55WX800U 55-Inch 1080p 240 Hz Cinema Series 3D LED TV, Black (2010 Model)\nApple TV, 4th Generation, 32GB\nRoku 3 Streaming Media Player\nSony PlayStation 4 500GB Console\nRaspberry Pi 3 Model B - used to control devices via CEC\n2 VSTARCAM 720p cameras - pointed out the windows for a view of Lake Merritt and construction happening in the surrounding few blocks\nAutomations\nEnd of day sunset notification\nFront door is open\nNotify if motion detected in Living Room or Hallway when no one is home\nNotify if Robbie's door is opened when he isn't home\nNotify if there is motion in Robbie's Room when he isn't home\nRobbie arrived home\nRobbie left home\nSend a notification 1 hour before sunset\nSend notifications for guests/misc calls from front desk\nSend notifications for package delivery\nSomeone arrived home\nSomeone left home\nTurn off all devices when everyone leaves home\nTurn off living room lights when Apple TV is playing\nTurn off Robbie's Room lights when Apple TV, Chromecast or Roku is playing\nTurn on entrance hallway overhead when the door opens\nTurn on hallway lights when there is movement at night\nTurn on living room lights when Apple TV is paused\nTurn on Robbie's Room lights when Apple TV, Chromecast or Roku is paused\nTODOs\nSee issues.", "link": "https://github.com/robbiet480/Home-Assistant-Config", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "bed", "selectorShort": "bed", "MarkedSent": "home assistant configuration\nhardware\nyes, i name my servers after rappers...\n\"biggie\"\nbiggie runs vmware esxi 5 and the following two virtual machines:\npfsense 2.3\nfreenas 9\nit's primary function is as a router and as a nas, mostly storing media (tv, movies, music) as well as a backup target for computers.\nspecs\nsupermicro x10sl7-f\nintel(r) xeon(r) cpu e3-1220 v3 @ 3.10ghz\n32gb ram\nesxi runs off a usb key directly connected to the motherboard\n2x 120gb ssds as boot drives for the virtual machines\n8 4tb seagate nas hard drives\n\"bigsean\"\nbigsean runs ubuntu 16.04 lts and is the primary home automation system.\nspecs\nsupermicro a1sri-2758f-o\nintegrated intel atom c2750 \"avoton\" octa-core\n32gb ram\n2x256gb ssd\n4x gigabit ethernet\naeotec zw090 z-wave stick\ntripp lite 1500va ups back up, avr, lcd display, 10 outlets, 120v 900w, tel & coax protection, usb (smart1500lcdt)\nmisc\nwireless is provided by a ubiquiti networks unifi 802.11ac dual-radio pro access point\nethernet is all connected via a tp-link 48-port gigabit ethernet rackmount switch\nsoftware\nhome assistant, always running the dev branch, it gets updated a couple times a week.\nhomebridge\nhomebridge-homeassistant\nplex media server\ninfluxdb for data collection\ngrafana for graphing\nmosquitto for mqtt\npeople\nrobbie\nmacbook pro\niphone x\ndevices\ndevices are broken down by room\nentrance hallway\necolink door/window sensor (dwzwave2-eco)\nlinear/gocontrol/2gig ws15z-1 z-wave switch - next to front door\nlinear/gocontrol/2gig wt00z-1 z-wave 3-way accessory switch - at far end of hallway\nkitchen\n3 linear gocontrol ws15z-1 z-wave switch\noverhead lights\ncounter lights\nunder cabinet lights\nliving room\nhomeseer hs-wd100+ z-wave plus scene-capable wall dimmer - controls lights over dining table\naeotec zw100 multisensor - mounted high up in corner of room\nphilips hue lightstrip (1st generation) - under counter\namazon echo\n2 philips hue white and color ambiance light bulb, a19 - in lights on either side of the couch\nsony xbr65x850d 65-inch 4k ultra hd smart tv (2016 model)\nandroid tv\nnotifications for android tv installed\nonkyo tx-nr616 7.2- channel network a/v receiver\n2 klipsch rf-42 ii floorstanding speaker\n2 klipsch rb-41 ii bookshelf speaker\nklipsch sub-12 12-inch 300w subwoofer\nklipsch rc-42 ii center channel\nsonos connect\napple tv, 4th generation, 32gb\nchromecast (2nd generation)\nitach ip2ir (unused)\nplaystation tv\nguest bathroom\namazon echo dot\nue roll (1st generation) - paired with echo dot via bluetooth\nwithings body cardio - heart health and body composition wi-fi scale, black\ninterior hallway\nphilips hue bloom\nlinear/gocontrol/2gig ws15z-1 z-wave switch - next to living room dimmer\nlinear/gocontrol/2gig wt00z-1 z-wave 3-way accessory switch - at far end of hallway\nenerwave zwn-bpc z-wave motion sensor\nall hardware listed at the top of this readme is on a desk in the interior hallway\nrobbie's room\necolink door/window sensor (dwzwave2-eco)\naeotec zw100 multisensor - mounted high up in corner of room above desk\n3 philips hue white and color ambiance light bulb, a19\nfloorstanding lamp next to desk\nleft and right sides of -----> bed !!! , mounted at head level in an ikea minut wall lamp\nphilips hue lightstrip (1st generation) - under desk\nrgb led strip with wifi controller - on ledge under window to right of bed\namazon echo\nsonos play:3\nzeeq smart pillow\ntoshiba 55wx800u 55-inch 1080p 240 hz cinema series 3d led tv, black (2010 model)\napple tv, 4th generation, 32gb\nroku 3 streaming media player\nsony playstation 4 500gb console\nraspberry pi 3 model b - used to control devices via cec\n2 vstarcam 720p cameras - pointed out the windows for a view of lake merritt and construction happening in the surrounding few blocks\nautomations\nend of day sunset notification\nfront door is open\nnotify if motion detected in living room or hallway when no one is home\nnotify if robbie's door is opened when he isn't home\nnotify if there is motion in robbie's room when he isn't home\nrobbie arrived home\nrobbie left home\nsend a notification 1 hour before sunset\nsend notifications for guests/misc calls from front desk\nsend notifications for package delivery\nsomeone arrived home\nsomeone left home\nturn off all devices when everyone leaves home\nturn off living room lights when apple tv is playing\nturn off robbie's room lights when apple tv, chromecast or roku is playing\nturn on entrance hallway overhead when the door opens\nturn on hallway lights when there is movement at night\nturn on living room lights when apple tv is paused\nturn on robbie's room lights when apple tv, chromecast or roku is paused\ntodos\nsee issues.", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000914, "year": null}], "name": "bedIot"}