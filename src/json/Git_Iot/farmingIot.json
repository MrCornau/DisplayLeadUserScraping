{"interestingcomments": [{"Unnamed: 0": 10, "autor": 10, "date": null, "content": "ThingsBoard\nThingsBoard is an open-source IoT platform for data collection, processing, visualization, and device management.\nDocumentation\nThingsBoard documentation is hosted on thingsboard.io.\nIoT use cases\nSmart metering\nIoT Rule Engine\nSmart energy\nSmart farming\nFleet tracking\nGetting Started\nCollect and Visualize your IoT data in minutes by following this guide.\nSupport\nCommunity chat\nQ&A forum\nStackoverflow\nLicenses\nThis project is released under Apache 2.0 License.", "link": "https://github.com/thingsboard/thingsboard", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "farming", "selectorShort": "farming", "MarkedSent": "thingsboard\nthingsboard is an open-source iot platform for data collection, processing, visualization, and device management.\ndocumentation\nthingsboard documentation is hosted on thingsboard.io.\niot use cases\nsmart metering\niot rule engine\nsmart energy\nsmart -----> farming !!! \nfleet tracking\ngetting started\ncollect and visualize your iot data in minutes by following this guide.\nsupport\ncommunity chat\nq&a forum\nstackoverflow\nlicenses\nthis project is released under apache 2.0 license.", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000010, "year": null}, {"Unnamed: 0": 12, "autor": 12, "date": null, "content": "IoT for Beginners - A Curriculum\nAzure Cloud Advocates at Microsoft are pleased to offer a 12-week, 24-lesson curriculum all about IoT basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.\nThe projects cover the journey of food from farm to table. This includes farming, logistics, manufacturing, retail and consumer - all popular industry areas for IoT devices.\nSketchnote by Nitya Narasimhan. Click the image for a larger version.\nHearty thanks to our authors Jen Fox, Jen Looper, Jim Bennett, and our sketchnote artist Nitya Narasimhan.\nThanks as well to our team of Microsoft Learn Student Ambassadors who have been reviewing and translating this curriculum - Aditya Garg, Anurag Sharma, Arpita Das, Aryan Jain, Bhavesh Suneja, Faith Hunja, Lateefah Bello, Manvi Jha, Mireille Tan, Mohammad Iftekher (Iftu) Ebne Jalal, Mohammad Zulfikar, Priyanshu Srivastav, Thanmai Gowducheruvu, and Zina Kamel.\nMeet the team!\nGif by Mohit Jaisal\n\ud83c\udfa5 Click the image above for a video about the project!\nTeachers, we have included some suggestions on how to use this curriculum. If you would like to create your own lessons, we have also included a lesson template.\nStudents, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. Try to create the projects by comprehending the lessons rather than copying the solution code; however that code is available in the /solutions folders in each project-oriented lesson. Another idea would be to form a study group with friends and go through the content together. For further study, we recommend Microsoft Learn.\nFor a video overview of this course, check out this video:\n\ud83c\udfa5 Click the image above for a video about the project!\nPedagogy\nWe have chosen two pedagogical tenets while building this curriculum: ensuring that it is project-based and that it includes frequent quizzes. By the end of this series, students will have built a plant monitoring and watering system, a vehicle tracker, a smart factory setup to track and check food, and a voice-controlled cooking timer, and will have learned the basics of the Internet of Things including how to write device code, connect to the cloud, analyze telemetry and run AI on the edge.\nBy ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented.\nIn addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12 week cycle.\nEach project is be based around real-world hardware available to students and hobbyists. Each project looks into the specific project domain, providing relevant background knowledge. To be a successful developer it helps to understand the domain in which you are solving problems, providing this background knowledge allows students to think about their IoT solutions and learnings in the context of the kind of real-world problem that they might be asked to solve as an IoT developer. Students learn the 'why' of the solutions they are building, and get an appreciation of the end user.\nHardware\nWe have two choices of IoT hardware to use for the projects depending on personal preference, programming language knowledge or preferences, learning goals and availability. We have also provided a 'virtual hardware' version for those who don't have access to hardware, or want to learn more before committing to a purchase. You can read more and find a 'shopping list' on the hardware page, including links to buy complete kits from our friends at Seeed Studio.\n\ud83d\udc81 Find our Code of Conduct, Contributing, and Translation guidelines. We welcome your constructive feedback!\nEach lesson includes:\nsketchnote\noptional supplemental video\npre-lesson warmup quiz\nwritten lesson\nfor project-based lessons, step-by-step guides on how to build the project\nknowledge checks\na challenge\nsupplemental reading\nassignment\npost-lesson quiz\nA note about quizzes: All quizzes are contained in this app, for 48 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the quiz-app folder. They are gradually being localized.\nLessons\nProject Name Concepts Taught Learning Objectives Linked Lesson\n01 Getting started Introduction to IoT Learn the basic principles of IoT and the basic building blocks of IoT solutions such as sensors and cloud services whilst you are setting up your first IoT device Introduction to IoT\n02 Getting started A deeper dive into IoT Learn more about the components of an IoT system, as well as microcontrollers and single-board computers A deeper dive into IoT\n03 Getting started Interact with the physical world with sensors and actuators Learn about sensors to gather data from the physical world, and actuators to send feedback, whilst you build a nightlight Interact with the physical world with sensors and actuators\n04 Getting started Connect your device to the Internet Learn about how to connect an IoT device to the Internet to send and receive messages by connecting your nightlight to an MQTT broker Connect your device to the Internet\n05 Farm Predict plant growth Learn how to predict plant growth using temperature data captured by an IoT device Predict plant growth\n06 Farm Detect soil moisture Learn how to detect soil moisture and calibrate a soil moisture sensor Detect soil moisture\n07 Farm Automated plant watering Learn how to automate and time watering using a relay and MQTT Automated plant watering\n08 Farm Migrate your plant to the cloud Learn about the cloud and cloud-hosted IoT services and how to connect your plant to one of these instead of a public MQTT broker Migrate your plant to the cloud\n09 Farm Migrate your application logic to the cloud Learn about how you can write application logic in the cloud that responds to IoT messages Migrate your application logic to the cloud\n10 Farm Keep your plant secure Learn about security with IoT and how to keep your plant secure with keys and certificates Keep your plant secure\n11 Transport Location tracking Learn about GPS location tracking for IoT devices Location tracking\n12 Transport Store location data Learn how to store IoT data to be visualized or analysed later Store location data\n13 Transport Visualize location data Learn about visualizing location data on a map, and how maps represent the real 3d world in 2 dimensions Visualize location data\n14 Transport Geofences Learn about geofences, and how they can be used to alert when vehicles in the supply chain are close to their destination Geofences\n15 Manufacturing Train a fruit quality detector Learn about training an image classifier in the cloud to detect fruit quality Train a fruit quality detector\n16 Manufacturing Check fruit quality from an IoT device Learn about using your fruit quality detector from an IoT device Check fruit quality from an IoT device\n17 Manufacturing Run your fruit detector on the edge Learn about running your fruit detector on an IoT device on the edge Run your fruit detector on the edge\n18 Manufacturing Trigger fruit quality detection from a sensor Learn about triggering fruit quality detection from a sensor Trigger fruit quality detection from a sensor\n19 Retail Train a stock detector Learn how to use object detection to train a stock detector to count stock in a shop Train a stock detector\n20 Retail Check stock from an IoT device Learn how to check stock from an IoT device using an object detection model Check stock from an IoT device\n21 Consumer Recognize speech with an IoT device Learn how to recognize speech from an IoT device to build a smart timer Recognize speech with an IoT device\n22 Consumer Understand language Learn how to understand sentences spoken to an IoT device Understand language\n23 Consumer Set a timer and provide spoken feedback Learn how to set a timer on an IoT device and give spoken feedback on when the timer is set and when it finishes Set a timer and provide spoken feedback\n24 Consumer Support multiple languages Learn how to support multiple languages, both being spoken to and the responses from your smart timer Support multiple languages\nOffline access\nYou can run this documentation offline by using Docsify. Fork this repo, install Docsify on your local machine, and then in the root folder of this repo, type docsify serve. The website will be served on port 3000 on your localhost: localhost:3000.\nPDF\nYou can generate a PDF of this content for offline access if needed. To do this, make sure you have npm installed and run the following commands in the root folder of this repo:\nnpm i\nnpm run convert\nSlides\nThere are slide decks for some of the lessons in the slides folder.\nHelp Wanted!\nWould you like to contribute a translation? Please read our translation guidelines and add input to one of the translations issues. If you want to translate into a new language, please raise a new issue for tracking.\nOther Curricula\nOur team produces other curricula! Check out:\nWeb Dev for Beginners\nML for Beginners\nData Science for Beginners\nImage attributions\nYou can find all the attributions for the images used in this curriculum where required in the Attributions.", "link": "https://github.com/microsoft/IoT-For-Beginners", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "farming", "selectorShort": "farming", "MarkedSent": "iot for beginners - a curriculum\nazure cloud advocates at microsoft are pleased to offer a 12-week, 24-lesson curriculum all about iot basics. each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.\nthe projects cover the journey of food from farm to table. this includes -----> farming !!! , logistics, manufacturing, retail and consumer - all popular industry areas for iot devices.\nsketchnote by nitya narasimhan. click the image for a larger version.\nhearty thanks to our authors jen fox, jen looper, jim bennett, and our sketchnote artist nitya narasimhan.\nthanks as well to our team of microsoft learn student ambassadors who have been reviewing and translating this curriculum - aditya garg, anurag sharma, arpita das, aryan jain, bhavesh suneja, faith hunja, lateefah bello, manvi jha, mireille tan, mohammad iftekher (iftu) ebne jalal, mohammad zulfikar, priyanshu srivastav, thanmai gowducheruvu, and zina kamel.\nmeet the team!\ngif by mohit jaisal\n\ud83c\udfa5 click the image above for a video about the project!\nteachers, we have included some suggestions on how to use this curriculum. if you would like to create your own lessons, we have also included a lesson template.\nstudents, to use this curriculum on your own, fork the entire repo and complete the exercises on your own, starting with a pre-lecture quiz, then reading the lecture and completing the rest of the activities. try to create the projects by comprehending the lessons rather than copying the solution code; however that code is available in the /solutions folders in each project-oriented lesson. another idea would be to form a study group with friends and go through the content together. for further study, we recommend microsoft learn.\nfor a video overview of this course, check out this video:\n\ud83c\udfa5 click the image above for a video about the project!\npedagogy\nwe have chosen two pedagogical tenets while building this curriculum: ensuring that it is project-based and that it includes frequent quizzes. by the end of this series, students will have built a plant monitoring and watering system, a vehicle tracker, a smart factory setup to track and check food, and a voice-controlled cooking timer, and will have learned the basics of the internet of things including how to write device code, connect to the cloud, analyze telemetry and run ai on the edge.\nby ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented.\nin addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. this curriculum was designed to be flexible and fun and can be taken in whole or in part. the projects start small and become increasingly complex by the end of the 12 week cycle.\neach project is be based around real-world hardware available to students and hobbyists. each project looks into the specific project domain, providing relevant background knowledge. to be a successful developer it helps to understand the domain in which you are solving problems, providing this background knowledge allows students to think about their iot solutions and learnings in the context of the kind of real-world problem that they might be asked to solve as an iot developer. students learn the 'why' of the solutions they are building, and get an appreciation of the end user.\nhardware\nwe have two choices of iot hardware to use for the projects depending on personal preference, programming language knowledge or preferences, learning goals and availability. we have also provided a 'virtual hardware' version for those who don't have access to hardware, or want to learn more before committing to a purchase. you can read more and find a 'shopping list' on the hardware page, including links to buy complete kits from our friends at seeed studio.\n\ud83d\udc81 find our code of conduct, contributing, and translation guidelines. we welcome your constructive feedback!\neach lesson includes:\nsketchnote\noptional supplemental video\npre-lesson warmup quiz\nwritten lesson\nfor project-based lessons, step-by-step guides on how to build the project\nknowledge checks\na challenge\nsupplemental reading\nassignment\npost-lesson quiz\na note about quizzes: all quizzes are contained in this app, for 48 total quizzes of three questions each. they are linked from within the lessons but the quiz app can be run locally; follow the instruction in the quiz-app folder. they are gradually being localized.\nlessons\nproject name concepts taught learning objectives linked lesson\n01 getting started introduction to iot learn the basic principles of iot and the basic building blocks of iot solutions such as sensors and cloud services whilst you are setting up your first iot device introduction to iot\n02 getting started a deeper dive into iot learn more about the components of an iot system, as well as microcontrollers and single-board computers a deeper dive into iot\n03 getting started interact with the physical world with sensors and actuators learn about sensors to gather data from the physical world, and actuators to send feedback, whilst you build a nightlight interact with the physical world with sensors and actuators\n04 getting started connect your device to the internet learn about how to connect an iot device to the internet to send and receive messages by connecting your nightlight to an mqtt broker connect your device to the internet\n05 farm predict plant growth learn how to predict plant growth using temperature data captured by an iot device predict plant growth\n06 farm detect soil moisture learn how to detect soil moisture and calibrate a soil moisture sensor detect soil moisture\n07 farm automated plant watering learn how to automate and time watering using a relay and mqtt automated plant watering\n08 farm migrate your plant to the cloud learn about the cloud and cloud-hosted iot services and how to connect your plant to one of these instead of a public mqtt broker migrate your plant to the cloud\n09 farm migrate your application logic to the cloud learn about how you can write application logic in the cloud that responds to iot messages migrate your application logic to the cloud\n10 farm keep your plant secure learn about security with iot and how to keep your plant secure with keys and certificates keep your plant secure\n11 transport location tracking learn about gps location tracking for iot devices location tracking\n12 transport store location data learn how to store iot data to be visualized or analysed later store location data\n13 transport visualize location data learn about visualizing location data on a map, and how maps represent the real 3d world in 2 dimensions visualize location data\n14 transport geofences learn about geofences, and how they can be used to alert when vehicles in the supply chain are close to their destination geofences\n15 manufacturing train a fruit quality detector learn about training an image classifier in the cloud to detect fruit quality train a fruit quality detector\n16 manufacturing check fruit quality from an iot device learn about using your fruit quality detector from an iot device check fruit quality from an iot device\n17 manufacturing run your fruit detector on the edge learn about running your fruit detector on an iot device on the edge run your fruit detector on the edge\n18 manufacturing trigger fruit quality detection from a sensor learn about triggering fruit quality detection from a sensor trigger fruit quality detection from a sensor\n19 retail train a stock detector learn how to use object detection to train a stock detector to count stock in a shop train a stock detector\n20 retail check stock from an iot device learn how to check stock from an iot device using an object detection model check stock from an iot device\n21 consumer recognize speech with an iot device learn how to recognize speech from an iot device to build a smart timer recognize speech with an iot device\n22 consumer understand language learn how to understand sentences spoken to an iot device understand language\n23 consumer set a timer and provide spoken feedback learn how to set a timer on an iot device and give spoken feedback on when the timer is set and when it finishes set a timer and provide spoken feedback\n24 consumer support multiple languages learn how to support multiple languages, both being spoken to and the responses from your smart timer support multiple languages\noffline access\nyou can run this documentation offline by using docsify. fork this repo, install docsify on your local machine, and then in the root folder of this repo, type docsify serve. the website will be served on port 3000 on your localhost: localhost:3000.\npdf\nyou can generate a pdf of this content for offline access if needed. to do this, make sure you have npm installed and run the following commands in the root folder of this repo:\nnpm i\nnpm run convert\nslides\nthere are slide decks for some of the lessons in the slides folder.\nhelp wanted!\nwould you like to contribute a translation? please read our translation guidelines and add input to one of the translations issues. if you want to translate into a new language, please raise a new issue for tracking.\nother curricula\nour team produces other curricula! check out:\nweb dev for beginners\nml for beginners\ndata science for beginners\nimage attributions\nyou can find all the attributions for the images used in this curriculum where required in the attributions.", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000012, "year": null}, {"Unnamed: 0": 515, "autor": 515, "date": null, "content": "Azure IoT Curriculum\nThis repo is actively developed - watch, star or check back often for updates\nThis repo contains hands-on-labs and other lab and workshop based material designed to support the creation of IoT curricula for higher education, covering IoT and AI on the edge. All the labs use physical devices, such as Raspberry Pis and NVIDIA Jetson boards, and are designed for in-class or at home study. As an educator, you would use these labs in a blended learning environment, teaching concepts and theory in the classroom, mixed with labs from here to supplement the course and provide hands-on experience.\nMost of the content here is Microsoft content available in other places - this repo brings some of the content together and provides a single place to find content across different gitHub repos, documentation, Microsoft Learn and other sites.\nAll the content contained in this repo is free for you to use in your courses however you see fit. We will endeavour to keep the content up to date, but seeing as technology moves fast, things may be missed. If you find any errors in these materials, please either raise an issue, or feel free to raise a PR with the fix.\nWe will be continually adding and updating the content here. If there is a particular lab or content you would like added, please raise an issue. If you have content you would like to share, please raise a PR.\nIoT for beginners\nIf you are after beginner IoT content, check out IoT for beginners, a 12-week, 24 lesson curriculum that teaches IoT from the basics. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.\nThe projects cover the journey of food from farm to table. This includes farming, logistics, manufacturing, retail and consumer - all popular industry areas for IoT devices.\nHardware needs\nThese labs make use of a variety of hardware, all connected to cloud services. Each lab indicates up front what hardware is required. There is also an overall list for an 'IoT Cart' that provides a complete, all-in-one hardware solution that covers all these labs. This is designed to be a 'course in a box' - you purchase everything on the list and that can be shared between groups of students learning IoT in a more IoT focused degree program, rather than a single course as part of a wider technology-based learning program. Details of the cart are in the cart folder.\nDevice setup\nThe devices folder contains details on setting up the different devices recommended for the IoT Cart.\nLabs\nThe labs folder contains details on a range of different labs covering IoT and AI on the edge.\nEducator guides\nThe educator-guides folder contains guides for educators, including suggested course outlines and IoT lab guides.\nMicrosoft Learn\nMicrosoft Learn is a free, online training platform that provides interactive learning for Microsoft products and more. Our goal is to help you become proficient on our technologies and learn more skills with fun, guided, hands-on, interactive content that's specific to your role and goals.\nThere are a number of Learning Paths covering IoT technologies, services and solutions. These can form a hands-on component of a blended learning setup in the classroom, or provide a way for students to learn by themselves.\nFundamentals\nAzure Fundamentals\nIntroduction to internet of things\nBuild the intelligent edge with Azure IoT Edge\nArchitect API integration in Azure\nMicrosoft Power Platform Fundamentals\nIOT10: Connecting Your Physical Environment to a Digital World \u2013 A Roadmap to IoT Solutioning\nIoT Concepts and services\nIntroduction to Azure IoT Hub\nSecurely connect IoT devices to the cloud\nDevelop IoT solutions with Azure IoT Central\nIOT20: Deciphering Data \u2013 Optimizing Data Communication to Maximize Your ROI\nDevelop with Azure Digital Twins\nData\nCreate and use analytics reports with Power BI\nAzure for the Data Engineer\nArchitect a data platform in Azure\nImplement a Data Warehouse with Azure Synapse Analytics\nAzure Data Fundamentals: Explore core data concepts\nData engineering with Azure Databricks\nIOT40: Big Data 2.0 IoT as your New Operational Data Source\nAI and Machine Learning\nAI edge engineer\nCreate machine learning models\nCreate no-code predictive models with Azure Machine Learning\nAI business school for manufacturing\nGet started with artificial intelligence on Azure\nMicrosoft Azure Artificial Intelligence (AI) strategy and solutions\nBuild AI solutions with Azure Machine Learning\nExplore computer vision in Microsoft Azure\nProcess and classify images with the Azure Cognitive Vision Services\nExplore natural language processing\nProcess and Translate Speech with Azure Cognitive Speech Services\nEvaluate text with Azure Cognitive Language Services\nBring AI to business users in your organization\nIOT30: Adding Intelligence \u2013 Unlocking New Insights with AI & Machine Learning\nIoT Scenarios\nIoT demos - examples of end-to-end use cases and the IoT architectures that enable to those use cases.\nConfigure and manage products and inventory in Dynamics 365 Supply Chain Management\nConfigure and use lean manufacturing in Dynamics 365 Supply Chain Management\nConfigure and use discrete manufacturing in Dynamics 365 Supply Chain Management\nIOT50: Get to Solutioning - Strategy & Best Practices when Mapping Designs from Edge to Cloud\nIoT Videos\nMicrosoft IoT Developers channel on YouTube - watch latest videos about Microsoft IoT updates and news, partners and customers spotlights, interactive deep dives as well as demos.\nThe IoT Show on Channel9 - the latest Microsoft IoT announcements, product and features demos, customer and partner spotlights, top industry talks, and technical deep dives.\nMaker Show - a maker and IoT focused show from the ForDevs community\nIoT 101 with .NET on Channel9 - a 101 level video series to learn IoT on .NET.\nSolution quickstarts\nMicrosoft offers a number of 'solution accelerators' - almost complete IoT setups that can be customized to your needs. As a part of this, there are a number of quickstarts that allow you to try out the different solutions.\nTry a cloud-based remote monitoring solution\nTry a cloud-based solution to manage my industrial IoT devices\nDeploy and run an IoT device simulation in Azure\nTry a cloud-based solution to run a predictive maintenance analysis on my connected devices\nReference architectures\nThe Azure Architecture Center provides guidance for architecting solutions on Azure using established patterns and practices.\nAzure IoT reference architecture\nIoT and data analytics in the construction industry\nControlling IoT devices using a Voice Assistant\nIoT using Cosmos DB\nIoT Connected Platform for COVID-19 protection\nContactless interfaces with Azure IoT Edge\nCOVID-19 Safe Solutions at the IoT Edge\nSmart and secure lighting and disinfection\nPredictive maintenance with the intelligent IoT Edge\nIngestion and processing of real-time automotive IoT data\nCreate a safe building\nSecure your IoT SaaS app with the Microsoft identity platform\nAzure Industrial IoT Analytics Guidance\nIndustrial IoT\nFor Industrial IoT (IIoT), Microsoft provides a range of reference materials and samples based around OPC-UA.\nIIoT on Azure documentation - documentation and a solution accelerator for IIoT\nOpen62541 - an open source OPC-UA implementation\nOPC-UA with IoT Central - a reference implementation for connecting OPC-Servers to IoT Edge and then passing data up to IoT Central\nIoT Edge offline dashboarding - a set of modules that can be used with Azure IoT Edge to perform dashboarding at the edge\nDigital Agriculture\nFarmBeats - AI, Edge & IoT for Agriculture\nFarmBeats for students lesson plans - a program combining an affordable hardware kit with curriculum and activities designed to give students hands-on experience in applying precision agriculture techniques to food production\nFarmBeats for students videos on YouTube\nDigital Twins\nDevelop with Azure Digital Twins learning path on Microsoft Learn\nDigital Twins Hands on lab\nRobotics\nRobot Operating System (ROS) with Windows 10, Linux and Azure\nAzure RTOS\nAzure RTOS is an embedded development suite including a small but powerful operating system that provides reliable, ultra-fast performance for resource-constrained devices. It\u2019s easy-to-use and market-proven, having been deployed on more than 6.2 billion devices worldwide. Azure RTOS supports the most popular 32-bit microcontrollers and embedded development tools, so you can make the most of your team\u2019s existing skills.\nOverview of Azure RTOS\nAzure RTOS on GitHub\nIntroduction to Azure RTOS video on Channel9\nProgramming languages, platforms and tools\nThere are many different programming languages, platforms and tools you can use for IoT. Here are some language resources:\nPython\nPython is a popular language for developing IoT solutions on devices such as the Raspberry Pi. It's also popular for data science, and building machine learning models to analyze the data coming from IoT devices.\nAzure Python IoT SDK - This repository contains code for the Azure IoT SDKs for Python. This enables python developers to quickly create IoT device solutions that seamlessly connect to the Azure IoTHub ecosystem.\nPython for beginners video series on Channel9 - Over the course of a set of videos we're going to show you the ropes of Python development\nMore Python for beginners video series on Channel9 - More Python for beginners videos\nTake your first steps with Python learning path on Microsoft Learn - Interested in learning a programming language but aren't sure where to start? Start here! Learn the basic syntax and thought processes required to build simple applications using Python.\nCircuitPython Azure IoT SDK - An Azure IoT SDK for use with Adafruit CircuitPython, a variant of Python for embedded devices.\n.NET\n.NET is a free, cross-platform, open source developer platform for building applications, and supports programming languages such as C# and F#.\nAzure IoT C# SDK - A C# SDK for connecting to Azure IoT Services\n.NET home page - the home of .NET\n.NET 101 video series - a 101 level video series to learn .NET.\nIoT 101 on Channel9 - a 101 level video series to learn IoT on .NET.\n.NET for IoT devices - This repo includes .NET Core implementations for various IoT boards, chips, displays and PCBs.\nC/C++\nAzure IoT C SDK - A C SDK for connecting to Azure IoT Services\nJavaScript/Node.js\nAzure IoT Node SDK - The Azure IoT Node.js SDK enables developers to create IoT solutions written in Node.js for the Azure IoT platform.\nBeginner's Series to: JavaScript - a series of practical, bite-sized videos about JavaScript for beginners so you can get up to speed quickly!\nBeginner's Series to: Node.js - a series of practical, bite-sized videos about Node.js for beginners so you can get up to speed quickly!\nArduino\nAzure IoT Hub library for Arduino - This library is a port of the Microsoft Azure IoT device SDK for C to Arduino. It allows you to use several Arduino compatible boards with Azure IoT Hub\nVisual Studio Code\nVisual Studio Code (VS Code) is a free, open source, cross-platform developer text editor that can be extended by a huge range of extensions to support different programing languages and capabilities.\nVisual Studio Code - the home of VS Code\nPlatform.io - an extension for VS Code that provides tools for embedded C/C++ development, with no additional dependencies\nRemote developer pack - an extension to support remote development, such as connecting to a Raspberry Pi and developing on that Pi from your PC or Mac\nPyLance - Python language extension - an extension providing Python language support to VS Code\nC/C++ - full intellisense and debugging support for C and C++ development\nIoT Events in a box\nIf you are interested in running an IoT event, here are some 'events in a box', giving access to event materials, such as slide decks, video walkthroughs and code samples.\nIoT Event Learning Path - The Internet of Things Event Learning Path is designed for Solution Architects, Business Decision Makers, and Development teams that are interested in building IoT Solutions with Azure Services. The content is comprised of 5 video based modules that approach topics ranging from IoT device connectivity, IoT data communication strategies, use of artificial intelligence at the edge, data processing considerations for IoT data, and IoT solutioning based on the Azure IoT reference architecture.\nAzure subscriptions\nThese labs are designed for courses where Azure resources are provided to students by the institution. To try them out, you can use one of our free subscriptions. Head to the Azure Subscriptions Guide for from information on setting up a subscription.\nGet certified\nMicrosoft offers a certification in IoT - AZ-220, the Microsoft Certified: Azure IoT Developer Specialty.\nMicrosoft Certified: Azure IoT Developer Specialty page on Microsoft Learn.\nAZ-220 Microsoft Azure IoT Developer study guide.\nMicrosoft Learn Student Ambassadors\nFinding your community is more important than ever as classes and social activities take place virtually. Amplify your impact and bring together your peers to learn new skills, solve real-world problems, and build communities across the globe.\nStudents can apply to be a Microsoft Learn Student Ambassadors. The Student Ambassadors program provides clear steps to help you learn and lead so you can make a difference and empower those around you.\nStudent Ambassadors get access to unique resources like our global student network on Microsoft Teams and a Microsoft 365 account, and can earn badges for activities and contributions to unlock additional benefits such as cloud credits.\nIf you are an educator, encourage your students to sign up for this program to help their peers learn new skills, and to improve employability after their studies.\nYou can learn more on the Microsoft Learn Student Ambassadors site.\nImagine Cup\nReimagine our world with technology in the 2021 Imagine Cup\nWe\u2019re looking for bold thinkers and big dreamers to join the 2021 competition journey.\nMake an impact through coding, collaboration, and competition. Innovate with passion to tackle global issues and bring your idea to life in the Imagine Cup.\nThe 19th annual Imagine Cup is more than just a competition for students\u2014you can work with friends (and make new ones!), network with professionals, gain new skills, make a difference in the world, and have the chance to win great prizes.\nRead more and sign up at imaginecup.microsoft.com.\nContributing\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\nThis project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.\nLegal Notices\nMicrosoft and any contributors grant you a license to the Microsoft documentation and other content in this repository under the MIT License, see the LICENSE file, and grant you a license to any code in the repository under the MIT License, see the LICENSE-CODE file.\nMicrosoft, Windows, Microsoft Azure and/or other Microsoft products and services referenced in the documentation may be either trademarks or registered trademarks of Microsoft in the United States and/or other countries. The licenses for this project do not grant you rights to use any Microsoft names, logos, or trademarks. Microsoft's general trademark guidelines can be found at http://go.microsoft.com/fwlink/?LinkID=254653.\nPrivacy information can be found at https://privacy.microsoft.com/\nMicrosoft and any contributors reserve all other rights, whether under their respective copyrights, patents, or trademarks, whether by implication, estoppel or otherwise.", "link": "https://github.com/microsoft/iot-curriculum", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "farming", "selectorShort": "farming", "MarkedSent": "azure iot curriculum\nthis repo is actively developed - watch, star or check back often for updates\nthis repo contains hands-on-labs and other lab and workshop based material designed to support the creation of iot curricula for higher education, covering iot and ai on the edge. all the labs use physical devices, such as raspberry pis and nvidia jetson boards, and are designed for in-class or at home study. as an educator, you would use these labs in a blended learning environment, teaching concepts and theory in the classroom, mixed with labs from here to supplement the course and provide hands-on experience.\nmost of the content here is microsoft content available in other places - this repo brings some of the content together and provides a single place to find content across different github repos, documentation, microsoft learn and other sites.\nall the content contained in this repo is free for you to use in your courses however you see fit. we will endeavour to keep the content up to date, but seeing as technology moves fast, things may be missed. if you find any errors in these materials, please either raise an issue, or feel free to raise a pr with the fix.\nwe will be continually adding and updating the content here. if there is a particular lab or content you would like added, please raise an issue. if you have content you would like to share, please raise a pr.\niot for beginners\nif you are after beginner iot content, check out iot for beginners, a 12-week, 24 lesson curriculum that teaches iot from the basics. each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment and more. our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.\nthe projects cover the journey of food from farm to table. this includes -----> farming !!! , logistics, manufacturing, retail and consumer - all popular industry areas for iot devices.\nhardware needs\nthese labs make use of a variety of hardware, all connected to cloud services. each lab indicates up front what hardware is required. there is also an overall list for an 'iot cart' that provides a complete, all-in-one hardware solution that covers all these labs. this is designed to be a 'course in a box' - you purchase everything on the list and that can be shared between groups of students learning iot in a more iot focused degree program, rather than a single course as part of a wider technology-based learning program. details of the cart are in the cart folder.\ndevice setup\nthe devices folder contains details on setting up the different devices recommended for the iot cart.\nlabs\nthe labs folder contains details on a range of different labs covering iot and ai on the edge.\neducator guides\nthe educator-guides folder contains guides for educators, including suggested course outlines and iot lab guides.\nmicrosoft learn\nmicrosoft learn is a free, online training platform that provides interactive learning for microsoft products and more. our goal is to help you become proficient on our technologies and learn more skills with fun, guided, hands-on, interactive content that's specific to your role and goals.\nthere are a number of learning paths covering iot technologies, services and solutions. these can form a hands-on component of a blended learning setup in the classroom, or provide a way for students to learn by themselves.\nfundamentals\nazure fundamentals\nintroduction to internet of things\nbuild the intelligent edge with azure iot edge\narchitect api integration in azure\nmicrosoft power platform fundamentals\niot10: connecting your physical environment to a digital world \u2013 a roadmap to iot solutioning\niot concepts and services\nintroduction to azure iot hub\nsecurely connect iot devices to the cloud\ndevelop iot solutions with azure iot central\niot20: deciphering data \u2013 optimizing data communication to maximize your roi\ndevelop with azure digital twins\ndata\ncreate and use analytics reports with power bi\nazure for the data engineer\narchitect a data platform in azure\nimplement a data warehouse with azure synapse analytics\nazure data fundamentals: explore core data concepts\ndata engineering with azure databricks\niot40: big data 2.0 iot as your new operational data source\nai and machine learning\nai edge engineer\ncreate machine learning models\ncreate no-code predictive models with azure machine learning\nai business school for manufacturing\nget started with artificial intelligence on azure\nmicrosoft azure artificial intelligence (ai) strategy and solutions\nbuild ai solutions with azure machine learning\nexplore computer vision in microsoft azure\nprocess and classify images with the azure cognitive vision services\nexplore natural language processing\nprocess and translate speech with azure cognitive speech services\nevaluate text with azure cognitive language services\nbring ai to business users in your organization\niot30: adding intelligence \u2013 unlocking new insights with ai & machine learning\niot scenarios\niot demos - examples of end-to-end use cases and the iot architectures that enable to those use cases.\nconfigure and manage products and inventory in dynamics 365 supply chain management\nconfigure and use lean manufacturing in dynamics 365 supply chain management\nconfigure and use discrete manufacturing in dynamics 365 supply chain management\niot50: get to solutioning - strategy & best practices when mapping designs from edge to cloud\niot videos\nmicrosoft iot developers channel on youtube - watch latest videos about microsoft iot updates and news, partners and customers spotlights, interactive deep dives as well as demos.\nthe iot show on channel9 - the latest microsoft iot announcements, product and features demos, customer and partner spotlights, top industry talks, and technical deep dives.\nmaker show - a maker and iot focused show from the fordevs community\niot 101 with .net on channel9 - a 101 level video series to learn iot on .net.\nsolution quickstarts\nmicrosoft offers a number of 'solution accelerators' - almost complete iot setups that can be customized to your needs. as a part of this, there are a number of quickstarts that allow you to try out the different solutions.\ntry a cloud-based remote monitoring solution\ntry a cloud-based solution to manage my industrial iot devices\ndeploy and run an iot device simulation in azure\ntry a cloud-based solution to run a predictive maintenance analysis on my connected devices\nreference architectures\nthe azure architecture center provides guidance for architecting solutions on azure using established patterns and practices.\nazure iot reference architecture\niot and data analytics in the construction industry\ncontrolling iot devices using a voice assistant\niot using cosmos db\niot connected platform for covid-19 protection\ncontactless interfaces with azure iot edge\ncovid-19 safe solutions at the iot edge\nsmart and secure lighting and disinfection\npredictive maintenance with the intelligent iot edge\ningestion and processing of real-time automotive iot data\ncreate a safe building\nsecure your iot saas app with the microsoft identity platform\nazure industrial iot analytics guidance\nindustrial iot\nfor industrial iot (iiot), microsoft provides a range of reference materials and samples based around opc-ua.\niiot on azure documentation - documentation and a solution accelerator for iiot\nopen62541 - an open source opc-ua implementation\nopc-ua with iot central - a reference implementation for connecting opc-servers to iot edge and then passing data up to iot central\niot edge offline dashboarding - a set of modules that can be used with azure iot edge to perform dashboarding at the edge\ndigital agriculture\nfarmbeats - ai, edge & iot for agriculture\nfarmbeats for students lesson plans - a program combining an affordable hardware kit with curriculum and activities designed to give students hands-on experience in applying precision agriculture techniques to food production\nfarmbeats for students videos on youtube\ndigital twins\ndevelop with azure digital twins learning path on microsoft learn\ndigital twins hands on lab\nrobotics\nrobot operating system (ros) with windows 10, linux and azure\nazure rtos\nazure rtos is an embedded development suite including a small but powerful operating system that provides reliable, ultra-fast performance for resource-constrained devices. it\u2019s easy-to-use and market-proven, having been deployed on more than 6.2 billion devices worldwide. azure rtos supports the most popular 32-bit microcontrollers and embedded development tools, so you can make the most of your team\u2019s existing skills.\noverview of azure rtos\nazure rtos on github\nintroduction to azure rtos video on channel9\nprogramming languages, platforms and tools\nthere are many different programming languages, platforms and tools you can use for iot. here are some language resources:\npython\npython is a popular language for developing iot solutions on devices such as the raspberry pi. it's also popular for data science, and building machine learning models to analyze the data coming from iot devices.\nazure python iot sdk - this repository contains code for the azure iot sdks for python. this enables python developers to quickly create iot device solutions that seamlessly connect to the azure iothub ecosystem.\npython for beginners video series on channel9 - over the course of a set of videos we're going to show you the ropes of python development\nmore python for beginners video series on channel9 - more python for beginners videos\ntake your first steps with python learning path on microsoft learn - interested in learning a programming language but aren't sure where to start? start here! learn the basic syntax and thought processes required to build simple applications using python.\ncircuitpython azure iot sdk - an azure iot sdk for use with adafruit circuitpython, a variant of python for embedded devices.\n.net\n.net is a free, cross-platform, open source developer platform for building applications, and supports programming languages such as c# and f#.\nazure iot c# sdk - a c# sdk for connecting to azure iot services\n.net home page - the home of .net\n.net 101 video series - a 101 level video series to learn .net.\niot 101 on channel9 - a 101 level video series to learn iot on .net.\n.net for iot devices - this repo includes .net core implementations for various iot boards, chips, displays and pcbs.\nc/c++\nazure iot c sdk - a c sdk for connecting to azure iot services\njavascript/node.js\nazure iot node sdk - the azure iot node.js sdk enables developers to create iot solutions written in node.js for the azure iot platform.\nbeginner's series to: javascript - a series of practical, bite-sized videos about javascript for beginners so you can get up to speed quickly!\nbeginner's series to: node.js - a series of practical, bite-sized videos about node.js for beginners so you can get up to speed quickly!\narduino\nazure iot hub library for arduino - this library is a port of the microsoft azure iot device sdk for c to arduino. it allows you to use several arduino compatible boards with azure iot hub\nvisual studio code\nvisual studio code (vs code) is a free, open source, cross-platform developer text editor that can be extended by a huge range of extensions to support different programing languages and capabilities.\nvisual studio code - the home of vs code\nplatform.io - an extension for vs code that provides tools for embedded c/c++ development, with no additional dependencies\nremote developer pack - an extension to support remote development, such as connecting to a raspberry pi and developing on that pi from your pc or mac\npylance - python language extension - an extension providing python language support to vs code\nc/c++ - full intellisense and debugging support for c and c++ development\niot events in a box\nif you are interested in running an iot event, here are some 'events in a box', giving access to event materials, such as slide decks, video walkthroughs and code samples.\niot event learning path - the internet of things event learning path is designed for solution architects, business decision makers, and development teams that are interested in building iot solutions with azure services. the content is comprised of 5 video based modules that approach topics ranging from iot device connectivity, iot data communication strategies, use of artificial intelligence at the edge, data processing considerations for iot data, and iot solutioning based on the azure iot reference architecture.\nazure subscriptions\nthese labs are designed for courses where azure resources are provided to students by the institution. to try them out, you can use one of our free subscriptions. head to the azure subscriptions guide for from information on setting up a subscription.\nget certified\nmicrosoft offers a certification in iot - az-220, the microsoft certified: azure iot developer specialty.\nmicrosoft certified: azure iot developer specialty page on microsoft learn.\naz-220 microsoft azure iot developer study guide.\nmicrosoft learn student ambassadors\nfinding your community is more important than ever as classes and social activities take place virtually. amplify your impact and bring together your peers to learn new skills, solve real-world problems, and build communities across the globe.\nstudents can apply to be a microsoft learn student ambassadors. the student ambassadors program provides clear steps to help you learn and lead so you can make a difference and empower those around you.\nstudent ambassadors get access to unique resources like our global student network on microsoft teams and a microsoft 365 account, and can earn badges for activities and contributions to unlock additional benefits such as cloud credits.\nif you are an educator, encourage your students to sign up for this program to help their peers learn new skills, and to improve employability after their studies.\nyou can learn more on the microsoft learn student ambassadors site.\nimagine cup\nreimagine our world with technology in the 2021 imagine cup\nwe\u2019re looking for bold thinkers and big dreamers to join the 2021 competition journey.\nmake an impact through coding, collaboration, and competition. innovate with passion to tackle global issues and bring your idea to life in the imagine cup.\nthe 19th annual imagine cup is more than just a competition for students\u2014you can work with friends (and make new ones!), network with professionals, gain new skills, make a difference in the world, and have the chance to win great prizes.\nread more and sign up at imaginecup.microsoft.com.\ncontributing\nthis project welcomes contributions and suggestions. most contributions require you to agree to a contributor license agreement (cla) declaring that you have the right to, and actually do, grant us the rights to use your contribution. for details, visit https://cla.opensource.microsoft.com.\nwhen you submit a pull request, a cla bot will automatically determine whether you need to provide a cla and decorate the pr appropriately (e.g., status check, comment). simply follow the instructions provided by the bot. you will only need to do this once across all repos using our cla.\nthis project has adopted the microsoft open source code of conduct. for more information see the code of conduct faq or contact opencode@microsoft.com with any additional questions or comments.\nlegal notices\nmicrosoft and any contributors grant you a license to the microsoft documentation and other content in this repository under the mit license, see the license file, and grant you a license to any code in the repository under the mit license, see the license-code file.\nmicrosoft, windows, microsoft azure and/or other microsoft products and services referenced in the documentation may be either trademarks or registered trademarks of microsoft in the united states and/or other countries. the licenses for this project do not grant you rights to use any microsoft names, logos, or trademarks. microsoft's general trademark guidelines can be found at http://go.microsoft.com/fwlink/?linkid=254653.\nprivacy information can be found at https://privacy.microsoft.com/\nmicrosoft and any contributors reserve all other rights, whether under their respective copyrights, patents, or trademarks, whether by implication, estoppel or otherwise.", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000515, "year": null}, {"Unnamed: 0": 905, "autor": 905, "date": null, "content": "Farmassist\nFarmassist is a smart farming app for IoT and AI-powered plant disease detection. It is built with Flutter and uses Firebase as its backend.\nApp Screenshots\nView Agricultural News Receive IoT Telemetry Data Detect Plant Disease\nDownload Android APK\nYou can download the latest version of the Android APK here.\nArchitecture\nArchitecture Diagram of Farmassist\nThe above illustration shows a high level overview of the Farmassist project. Farmassist consists of 3 subsystems:\nFarm Management Subsystem: Users can view agricultural news and manage planting and harvesting data.\nIoT Monitoring Subsystem: Users can view IoT telemetry data from the farm in the form of charts and receive alert notifications for abnormal telemetry data.\nPlant Disease Detection Subsystem: Users can take a picture of a diseased plant via camera to detect the disease type.\nThe backend services used are as follows:\nFirebase Authentication\nCloud Firestore\nRealtime Database\nCloud Functions\nCloud Messaging\nGoogle Cloud AutoML Vision\nThe following sections explain more detail about the services and components used by the corresponding subsystems.\nAuthentication and User Profile\nThe signup and login flow of Farmassist is developed using the Bloc library and Firebase Authentication. After a user signs up successfully, the user data will be stored in the data model of Cloud Firestore as shown below:\n{\n\"users\": { // \"users\" collection\n\"4lbwvicymz71LfY9POHZ\": { // \"userId\" document\n\"id\": \"4lbwvicymz71LfY9POHZ\",\n\"email\": \"example@farmassist.com\",\n\"displayName\": \"Jack\",\n\"tokens\": [ ... ] // used by Cloud Messaging\n},\n\"4DkFgqNdjZnEh78YmsE3\": { ... },\n// more \"userId\" documents\n}\n}\nFarm Management\nCloud Firestore, a NoSQL, document-oriented database, is used to store farm management data using key-value pairs. In Cloud Firestore, each collection consists of a number of documents in which each document can store a number of subcollections.\nThere are 2 types of farm management data stored: planting data and harvesting data. An example of the data model for harvesting data is shown below:\n{\n\"planting\": { // \"planting\" collection\n\"4lbwvicymz71LfY9POHZ\": { // \"userId\" document\n\"months\": { // \"months\" subcollection\n\"jan\": { // \"jan\" document\n\"plantName\": \"tomato\",\n\"noOfPlants\": \"100\",\n\"plantDate\": \"25-03-2021\",\n\"estimatedHarvestWeek\": \"9\",\n\"harvestDate\": \"25-5-2021\",\n\"harvested\": true\n},\n\"feb\": { ... } // \"feb\" document\n// more documents for the remaining months\n}\n},\n// more \"userId\" documents\n}\n}\nUnder farm management, 2 extra APIs are used:\nNews API is used to fetch top headlines for science category.\nOpenWeather API is used to obtain weather data of the farm location.\nIoT Monitoring\nRealtime Database acts as a repository of IoT telemetry data that performs data synchronization with the Farmassist app. The overall process of IoT monitoring is described as follows:\nWhen new telemetry data is stored in Realtime Database, Cloud Functions will be triggered.\nCloud Functions execute a function to check for abnormal values in the received telemetry data.\nIf abnormal values exist, Cloud Functions will call Cloud Messaging service to send an alert notification to the relevant app user, which is identified by a unique token.\n5 types of telemetry data are stored as JSON objects in Realtime Database:\nAir Humidity (%)\nAir Temperature (\u00b0C)\nSoil Moisture (%)\nSoil pH (pH)\nSoil Salinity (Millisiemens/cm)\nEach telemetry data is stored as a key-value pair of timestamp and value. An example of the data model for telemetry data is shown below:\n{\n\"telemetry_data\": {\n\"4lbwvicymz71LfY9POHZ\": { // userId\n\"humidity\": {\n\"1617979596947\": \"56.64\", // timestamp: value\n\"1617979596949\": \"55.89\",\n// more values\n},\n\"moisture\": { ... },\n\"pH\": { ... },\n\"salinity\": { ... },\n\"temperature\": { ... }\n},\n// more telemetry data from other users\n}\n}\nFor demonstration purpose, a minimal IoT device simulator is built to send telemetry data to Realtime Database. For more information, you can refer to Farmassist IoT Device Simulator.\nThe code for Cloud Functions can be found in Farmassist Firebase.\nPlant Disease Detection\nA plant disease detection model was trained using Google Cloud AutoML Vision. The training dataset is a subset of PlantVillage dataset from Mendeley Data. A total of 2,941 diseased plant images that consists of 6 disease categories were used:\nCorn Common Rust (500 images)\nCorn Gray Leaf Spot (441 images)\nPotato Early Blight (500 images)\nStrawberry Leaf Scorch (500 images)\nTomato Leaf Mold (500 images)\nTomato Mosaic Virus (500 images)\nAfter training, the model was exported as a TensorFlow Lite model, which is suitable to be run on a mobile device. You can find the trained model here.\nFlutter Packages Used\nSome of the useful Flutter packages used in the Farmassist app are listed in the table below. Refer to pubspec.yaml for the complete package information.\nPackage Functions\nProvider A simple state management tool\nbloc and flutter_bloc A state management library implemented using BLoC design pattern\nfl_chart A powerful Flutter chart library with beautiful UI\ngetwidget A Flutter UI library with 1000+ pre-made UI components\nSetup\nThings to do if you want to fork or contribute to the project.\nCreate a Firebase project and add Firebase to your Flutter app.\nRefer to Farmassist IoT Device Simulator to see how fake telemetery data can be sent to Realtime Database.\nRefer to Farmassist Firebase for the Cloud Functions code that call Cloud Messaging service.\nRefer to Edge Device Model Quickstart if you want to train your own model for plant disease detection.\nRefer to CI/CD for Flutter Apps Using GitHub Actions to set up a workflow that can release an APK for your Flutter app whenever someone pushes the code to GitHub. Instead of using push event, I set up a manual trigger with workflow_dispatch event.\nReferences\nGitHub: Farmassist IoT Device Simulator\nGitHub: Farmassist Firebase\nBloc: Flutter Firebase Login Tutorial\nFlutterFire: Cloud Messaging Usage\nGoogle Cloud AutoML Vision: Edge Device Model Quickstart\nMedium: AutoML Vision\u2014How To Train Your Model?\nMedium: CI/CD for Flutter Apps Using GitHub Actions\nGitHub: Farmsmart Flutter App\nGitHub: Best Flutter UI Templates", "link": "https://github.com/farmassistX/farmassist", "origin": "Github", "suborigin": "Iot", "result": true, "Selector": "farming", "selectorShort": "farming", "MarkedSent": "farmassist\nfarmassist is a smart -----> farming !!!  app for iot and ai-powered plant disease detection. it is built with flutter and uses firebase as its backend.\napp screenshots\nview agricultural news receive iot telemetry data detect plant disease\ndownload android apk\nyou can download the latest version of the android apk here.\narchitecture\narchitecture diagram of farmassist\nthe above illustration shows a high level overview of the farmassist project. farmassist consists of 3 subsystems:\nfarm management subsystem: users can view agricultural news and manage planting and harvesting data.\niot monitoring subsystem: users can view iot telemetry data from the farm in the form of charts and receive alert notifications for abnormal telemetry data.\nplant disease detection subsystem: users can take a picture of a diseased plant via camera to detect the disease type.\nthe backend services used are as follows:\nfirebase authentication\ncloud firestore\nrealtime database\ncloud functions\ncloud messaging\ngoogle cloud automl vision\nthe following sections explain more detail about the services and components used by the corresponding subsystems.\nauthentication and user profile\nthe signup and login flow of farmassist is developed using the bloc library and firebase authentication. after a user signs up successfully, the user data will be stored in the data model of cloud firestore as shown below:\n{\n\"users\": { // \"users\" collection\n\"4lbwvicymz71lfy9pohz\": { // \"userid\" document\n\"id\": \"4lbwvicymz71lfy9pohz\",\n\"email\": \"example@farmassist.com\",\n\"displayname\": \"jack\",\n\"tokens\": [ ... ] // used by cloud messaging\n},\n\"4dkfgqndjzneh78ymse3\": { ... },\n// more \"userid\" documents\n}\n}\nfarm management\ncloud firestore, a nosql, document-oriented database, is used to store farm management data using key-value pairs. in cloud firestore, each collection consists of a number of documents in which each document can store a number of subcollections.\nthere are 2 types of farm management data stored: planting data and harvesting data. an example of the data model for harvesting data is shown below:\n{\n\"planting\": { // \"planting\" collection\n\"4lbwvicymz71lfy9pohz\": { // \"userid\" document\n\"months\": { // \"months\" subcollection\n\"jan\": { // \"jan\" document\n\"plantname\": \"tomato\",\n\"noofplants\": \"100\",\n\"plantdate\": \"25-03-2021\",\n\"estimatedharvestweek\": \"9\",\n\"harvestdate\": \"25-5-2021\",\n\"harvested\": true\n},\n\"feb\": { ... } // \"feb\" document\n// more documents for the remaining months\n}\n},\n// more \"userid\" documents\n}\n}\nunder farm management, 2 extra apis are used:\nnews api is used to fetch top headlines for science category.\nopenweather api is used to obtain weather data of the farm location.\niot monitoring\nrealtime database acts as a repository of iot telemetry data that performs data synchronization with the farmassist app. the overall process of iot monitoring is described as follows:\nwhen new telemetry data is stored in realtime database, cloud functions will be triggered.\ncloud functions execute a function to check for abnormal values in the received telemetry data.\nif abnormal values exist, cloud functions will call cloud messaging service to send an alert notification to the relevant app user, which is identified by a unique token.\n5 types of telemetry data are stored as json objects in realtime database:\nair humidity (%)\nair temperature (\u00b0c)\nsoil moisture (%)\nsoil ph (ph)\nsoil salinity (millisiemens/cm)\neach telemetry data is stored as a key-value pair of timestamp and value. an example of the data model for telemetry data is shown below:\n{\n\"telemetry_data\": {\n\"4lbwvicymz71lfy9pohz\": { // userid\n\"humidity\": {\n\"1617979596947\": \"56.64\", // timestamp: value\n\"1617979596949\": \"55.89\",\n// more values\n},\n\"moisture\": { ... },\n\"ph\": { ... },\n\"salinity\": { ... },\n\"temperature\": { ... }\n},\n// more telemetry data from other users\n}\n}\nfor demonstration purpose, a minimal iot device simulator is built to send telemetry data to realtime database. for more information, you can refer to farmassist iot device simulator.\nthe code for cloud functions can be found in farmassist firebase.\nplant disease detection\na plant disease detection model was trained using google cloud automl vision. the training dataset is a subset of plantvillage dataset from mendeley data. a total of 2,941 diseased plant images that consists of 6 disease categories were used:\ncorn common rust (500 images)\ncorn gray leaf spot (441 images)\npotato early blight (500 images)\nstrawberry leaf scorch (500 images)\ntomato leaf mold (500 images)\ntomato mosaic virus (500 images)\nafter training, the model was exported as a tensorflow lite model, which is suitable to be run on a mobile device. you can find the trained model here.\nflutter packages used\nsome of the useful flutter packages used in the farmassist app are listed in the table below. refer to pubspec.yaml for the complete package information.\npackage functions\nprovider a simple state management tool\nbloc and flutter_bloc a state management library implemented using bloc design pattern\nfl_chart a powerful flutter chart library with beautiful ui\ngetwidget a flutter ui library with 1000+ pre-made ui components\nsetup\nthings to do if you want to fork or contribute to the project.\ncreate a firebase project and add firebase to your flutter app.\nrefer to farmassist iot device simulator to see how fake telemetery data can be sent to realtime database.\nrefer to farmassist firebase for the cloud functions code that call cloud messaging service.\nrefer to edge device model quickstart if you want to train your own model for plant disease detection.\nrefer to ci/cd for flutter apps using github actions to set up a workflow that can release an apk for your flutter app whenever someone pushes the code to github. instead of using push event, i set up a manual trigger with workflow_dispatch event.\nreferences\ngithub: farmassist iot device simulator\ngithub: farmassist firebase\nbloc: flutter firebase login tutorial\nflutterfire: cloud messaging usage\ngoogle cloud automl vision: edge device model quickstart\nmedium: automl vision\u2014how to train your model?\nmedium: ci/cd for flutter apps using github actions\ngithub: farmsmart flutter app\ngithub: best flutter ui templates", "sortedWord": "None", "removed": "Nan", "score": null, "comments": null, "media": "Nan", "medialink": "Nan", "identifyer": 7000905, "year": null}], "name": "farmingIot"}