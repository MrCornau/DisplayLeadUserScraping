{"interestingcomments": [{"autor": "V_pi", "date": 1628965509000, "content": "[D] NN dynamics, state-dependent log std vs leaf log std in PPO /!/ I was going through open AI's spinup implementation of PPO with PyTorch, and I noticed that the log std is not state-dependent but instead it is a leaf in the computation graph, i.e. simply a parameter with gradients.\n\nAt first glance, this seems to be rather limiting with respect to the constructed policy, but otoh this prevents gradients from flowing back through the rest of the model, which may or may not be beneficial.\n\nSo the question is, why use a leaf? Has there been any ablation analysis on this? Is it beneficial with respect to network stability?", "link": "https://www.reddit.com/r/MachineLearning/comments/p4daze/d_nn_dynamics_statedependent_log_std_vs_leaf_log/", "origin": "Reddit", "suborigin": "MachineLearning", "result": true, "Selector": "leaf", "selectorShort": "leaf", "MarkedSent": "[d] nn dynamics, state-dependent log std vs -----> leaf !!!  log std in ppo /!/ i was going through open ai's spinup implementation of ppo with pytorch, and i noticed that the log std is not state-dependent but instead it is a leaf in the computation graph, i.e. simply a parameter with gradients.\n\nat first glance, this seems to be rather limiting with respect to the constructed policy, but otoh this prevents gradients from flowing back through the rest of the model, which may or may not be beneficial.\n\nso the question is, why use a leaf? has there been any ablation analysis on this? is it beneficial with respect to network stability?", "sortedWord": "None", "removed": "('nan',)", "score": 1, "comments": 0, "media": "('nan',)", "medialink": "('https://www.reddit.com/r/MachineLearning/comments/p4daze/d_nn_dynamics_statedependent_log_std_vs_leaf_log/',)", "identifyer": 5724510, "year": "2021"}, {"autor": "prashantmdgl9", "date": 1613633293000, "content": "[P] How my mother started using Convolutional Neural Networks /!/ My mother was spending hours on YouTube to find the remedy for her droopy plants; My knowledge of Botany is laughable, so I tried to help her using some machine learning.\n\nI helped her in identifying:\n\n1. Soil type\n2. Leaf diseases\n\n[https://towardsdatascience.com/how-my-mother-started-using-cnn-for-her-plants-f0913e5548db](https://towardsdatascience.com/how-my-mother-started-using-cnn-for-her-plants-f0913e5548db)\n\nPS: If you see the article behind a paywall, then please try to open it in a private or incognito tab.", "link": "https://www.reddit.com/r/MachineLearning/comments/lmgvdi/p_how_my_mother_started_using_convolutional/", "origin": "Reddit", "suborigin": "MachineLearning", "result": true, "Selector": "leaf", "selectorShort": "leaf", "MarkedSent": "[p] how my mother started using convolutional neural networks /!/ my mother was spending hours on youtube to find the remedy for her droopy plants; my knowledge of botany is laughable, so i tried to help her using some machine learning.\n\ni helped her in identifying:\n\n1. soil type\n2. -----> leaf !!!  diseases\n\n[https://towardsdatascience.com/how-my-mother-started-using-cnn-for-her-plants-f0913e5548db](https://towardsdatascience.com/how-my-mother-started-using-cnn-for-her-plants-f0913e5548db)\n\nps: if you see the article behind a paywall, then please try to open it in a private or incognito tab.", "sortedWord": "None", "removed": "('nan',)", "score": 1, "comments": 3, "media": "('self',)", "medialink": "('https://www.reddit.com/r/MachineLearning/comments/lmgvdi/p_how_my_mother_started_using_convolutional/',)", "identifyer": 5728805, "year": "2021"}, {"autor": "aTestCandidate", "date": 1633689285000, "content": "[R] Ready, Steady, Go AI: A practical tutorial on fundamentals of artificial intelligence and its applications in phenomics image analysis /!/ Advances in AI technologies have the potential to significantly increase our ability to turn plant phenomics data into valuable insights. However, performing such analyses requires specialized programming skills commonly reserved for computer scientists. We created an interactive tutorial with free, open-source, and FAIR notebooks that can aid researchers to conduct such analyses without the need for an extensive coding experience. We supplemented it with a practical guide on how to implement AI and explainable AI (X-AI) algorithms that augment and complement human experience in classifying tomato leaf diseases and spider mites. Our tutorial is not only applicable to other stresses but also transferable to other plants and research domains, making it possible for researchers from various scientific fields to generate insights into their data. Check out our paper at https://doi.org/10.1016/j.patter.2021.100323", "link": "https://www.reddit.com/r/MachineLearning/comments/q3v2q2/r_ready_steady_go_ai_a_practical_tutorial_on/", "origin": "Reddit", "suborigin": "MachineLearning", "result": true, "Selector": "leaf", "selectorShort": "leaf", "MarkedSent": "[r] ready, steady, go ai: a practical tutorial on fundamentals of artificial intelligence and its applications in phenomics image analysis /!/ advances in ai technologies have the potential to significantly increase our ability to turn plant phenomics data into valuable insights. however, performing such analyses requires specialized programming skills commonly reserved for computer scientists. we created an interactive tutorial with free, open-source, and fair notebooks that can aid researchers to conduct such analyses without the need for an extensive coding experience. we supplemented it with a practical guide on how to implement ai and explainable ai (x-ai) algorithms that augment and complement human experience in classifying tomato -----> leaf !!!  diseases and spider mites. our tutorial is not only applicable to other stresses but also transferable to other plants and research domains, making it possible for researchers from various scientific fields to generate insights into their data. check out our paper at https://doi.org/10.1016/j.patter.2021.100323", "sortedWord": "None", "removed": "('nan',)", "score": 1, "comments": 0, "media": "('nan',)", "medialink": "('https://www.reddit.com/r/MachineLearning/comments/q3v2q2/r_ready_steady_go_ai_a_practical_tutorial_on/',)", "identifyer": 5740164, "year": "2021"}, {"autor": "vietlinh12hoa", "date": 1627859499000, "content": "[D] Identify Feature Importance /!/  I've tried to play with Feature Importance in Random Forest. Surprisingly every time I modify hyper parameters (max depth, max leaf ...), the level of importance has been changed.\n\nWhat I have done is to remove one feature each time to see how descent the model performance in the test set. If the more significantly the performance drop, the more important the feature is. However, it's a bit time consuming. And we can only know the feature already being engineered (binning, encoding,) not the original features.\n\nAny solution we can know which variable is important at the EDA stage, instead of waiting for modeling and testing?", "link": "https://www.reddit.com/r/MachineLearning/comments/ow2kuf/d_identify_feature_importance/", "origin": "Reddit", "suborigin": "MachineLearning", "result": true, "Selector": "leaf", "selectorShort": "leaf", "MarkedSent": "[d] identify feature importance /!/  i've tried to play with feature importance in random forest. surprisingly every time i modify hyper parameters (max depth, max -----> leaf !!!  ...), the level of importance has been changed.\n\nwhat i have done is to remove one feature each time to see how descent the model performance in the test set. if the more significantly the performance drop, the more important the feature is. however, it's a bit time consuming. and we can only know the feature already being engineered (binning, encoding,) not the original features.\n\nany solution we can know which variable is important at the eda stage, instead of waiting for modeling and testing?", "sortedWord": "None", "removed": "('nan',)", "score": 1, "comments": 9, "media": "('nan',)", "medialink": "('https://www.reddit.com/r/MachineLearning/comments/ow2kuf/d_identify_feature_importance/',)", "identifyer": 5740561, "year": "2021"}], "name": "leafMachineLearning2021"}