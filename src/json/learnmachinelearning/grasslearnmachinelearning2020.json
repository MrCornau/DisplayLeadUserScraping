{"interestingcomments": [{"autor": "AdvancedManufacture", "date": 1582207332000, "content": "Training binary image classifier on a single label only? (No negative sample) /!/ Here is the case: I have a computer vision algorithm which can spot trash on a filter made up of vertical steel bars. It simply looks for interruptions in vertical edges found via Hough transform. But it does under-perform when the camera image suffers from glare/mist and other quality issues. I want to try training a shallow CNN to do the same job in a more robust manner. \n\nIt would be a binary classifier with only two outputs- 'I see the filter bars' (they're clean) OR 'I don't see the filter bars' (they're obstructed, alert human user). Because we don't want to make any assumptions about what the trash will be (could be anything from grass to traffic cones) I am unsure how to create an obstructed filter images set. Two solutions come to mind: \n\n1. Create random crops from an unrelated image corpus and label all of them as trash, feed them into train/dev set. Train/dev set has labels for bars and trash.\n2. Train/dev set contains only clean filter samples. Image samples are diverse in terms of light conditions image quality etc. Training identifies features shared between all clean filter samples. Train/dev set only has label for bars. During testing the images with very low recognition score (human-set threshold) are marked as likely to contain trash.\n\nIs training the second type of model a valid approach? It seems like a type of unsupervised learning problem focused on similarity testing. What do I need to know to implement it? I have just finished some online courses and I'm starting to learn to implement my own models, preferably starting with PyTorch.\n\nAll tips are appreciated.", "link": "https://www.reddit.com/r/learnmachinelearning/comments/f6thnq/training_binary_image_classifier_on_a_single/", "origin": "Reddit", "suborigin": "learnmachinelearning", "result": true, "Selector": "grass", "selectorShort": "grass", "MarkedSent": "training binary image classifier on a single label only? (no negative sample) /!/ here is the case: i have a computer vision algorithm which can spot trash on a filter made up of vertical steel bars. it simply looks for interruptions in vertical edges found via hough transform. but it does under-perform when the camera image suffers from glare/mist and other quality issues. i want to try training a shallow cnn to do the same job in a more robust manner. \n\nit would be a binary classifier with only two outputs- 'i see the filter bars' (they're clean) or 'i don't see the filter bars' (they're obstructed, alert human user). because we don't want to make any assumptions about what the trash will be (could be anything from -----> grass !!!  to traffic cones) i am unsure how to create an obstructed filter images set. two solutions come to mind: \n\n1. create random crops from an unrelated image corpus and label all of them as trash, feed them into train/dev set. train/dev set has labels for bars and trash.\n2. train/dev set contains only clean filter samples. image samples are diverse in terms of light conditions image quality etc. training identifies features shared between all clean filter samples. train/dev set only has label for bars. during testing the images with very low recognition score (human-set threshold) are marked as likely to contain trash.\n\nis training the second type of model a valid approach? it seems like a type of unsupervised learning problem focused on similarity testing. what do i need to know to implement it? i have just finished some online courses and i'm starting to learn to implement my own models, preferably starting with pytorch.\n\nall tips are appreciated.", "sortedWord": "None", "removed": "('nan',)", "score": 1, "comments": 1, "media": "('nan',)", "medialink": "('https://www.reddit.com/r/learnmachinelearning/comments/f6thnq/training_binary_image_classifier_on_a_single/',)", "identifyer": 5742373, "year": "2020"}, {"autor": "SplitsandGiggles", "date": 1586347995000, "content": "Not sure about the best way to implement a neural network in my survival enviroment. /!/ [My rabbit and grass enviroment](https://colab.research.google.com/drive/1q7UEloRG4AMAUxWvrwkYS9ulb65Hl4TV)\n\nI am very much a novice so go easy! I have been making an environment where a rabbit walks around a field, losing strength which it can replenish with grass which appears. My rabbit currently chooses left right up or down at random. It dies if it falls off the edge.\n\n I would like to train a neural network so that my rabbit learns to survive over a period of time! I understand that my inputs would be what is on each of the squares of the world, my output should be one of the 4 actions. I am confused about whether I also need a reward (the rabbit's age increases at each step) and where I should look to implement and train such a model!\n\nThank you for your help!", "link": "https://www.reddit.com/r/learnmachinelearning/comments/fx5ens/not_sure_about_the_best_way_to_implement_a_neural/", "origin": "Reddit", "suborigin": "learnmachinelearning", "result": true, "Selector": "grass", "selectorShort": "grass", "MarkedSent": "not sure about the best way to implement a neural network in my survival enviroment. /!/ [my rabbit and -----> grass !!!  enviroment](https://colab.research.google.com/drive/1q7uelorg4amauxwvrwkys9ulb65hl4tv)\n\ni am very much a novice so go easy! i have been making an environment where a rabbit walks around a field, losing strength which it can replenish with grass which appears. my rabbit currently chooses left right up or down at random. it dies if it falls off the edge.\n\n i would like to train a neural network so that my rabbit learns to survive over a period of time! i understand that my inputs would be what is on each of the squares of the world, my output should be one of the 4 actions. i am confused about whether i also need a reward (the rabbit's age increases at each step) and where i should look to implement and train such a model!\n\nthank you for your help!", "sortedWord": "None", "removed": "('nan',)", "score": 1, "comments": 2, "media": "('nan',)", "medialink": "('https://www.reddit.com/r/learnmachinelearning/comments/fx5ens/not_sure_about_the_best_way_to_implement_a_neural/',)", "identifyer": 5747199, "year": "2020"}], "name": "grasslearnmachinelearning2020"}