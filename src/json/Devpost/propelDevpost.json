{"interestingcomments": [{"Unnamed: 0": 3348, "autor": "Financial AI Advisor", "date": null, "content": "Inspiration\nThe stock market and investing has always been hard to get into because of the vast knowledge needed to make smart financial decisions. Our interests in the world of artificial intelligence and our desire to be a part of the investment world has propelled us to build a service that not only makes investing more accessible for us, but for anyone else as well.\nWhat it does\nThe Financial AI Advisor uses historical stock prices and sentiment analysis on Twitter tweets to let you know where to invest your money! Upon entering our publicly available website, users can submit a comma-separated list of stock symbols and be greeted with statistics, projections, recommendations, and graphs of the stock(s) that the user has inputted based on data from two-weeks leading up to the present and using this data to project stock prices two weeks into the future.\nHow we built it\nWe are using datasets of Twitter tweets related to stocks and historical stock prices to train our machine learning model. It utilizes Twitter's API to collect recent tweets regarding a stock, the Alpha Vantage API to retrieve the most recent stock prices for a given stock, Python to create machine learning models, perform sentiment analysis on tweets, and facilitate backend development , and HTML and CSS to design a frontend webpage to display recommendations to users in an intuitive and graphical way.\nChallenges we ran into\nThe Twitter API had a rate limit, limiting the amount of testing we could do and prevented us from creating our own comprehensive custom dataset of Twitter tweets. The datasets of Twitter tweets and historical stock prices we used both had narrow time frames for their events, resulting in a difficulty connecting Twitter tweets to historical stock prices and complications in extracting comprehensive time-based attributes when performing feature engineering.\nAccomplishments that we're proud of\nWe are proud of hosting a working and constructive website, especially after having to pivot the problem we were trying to solve halfway through this hackathon due to the unforeseen difficulties around data collection and data processing. We are also proud of discovering useful attributes for input to our machine learning model after performing feature engineering on datasets that are inherently limited in their time frames.\nWhat we learned\nWe have learned that in many cases, the data preprocessing of raw data into usable data is the bottleneck in any data-driven projects, API's can sometimes be in-comprehensive and unreliable, and that front end HTML is harder than it looks when the entire team got a combined 16 hours of sleep the night before and the lead front end developer hasn't slept for 30 hours (centering a div is really hard guys).\nWhat's next for Financial AI Advisor\nWell hopefully we'll get some sleep first, so there's that. We're really excited about adding more creative features to the training model such as more comprehensive volatility and trend measures, trendiness of tweets/articles regarding stocks and tweets from a stock's stakeholders and public figures, and personalized user attributes like a user's investment history and risk aversion. If this project becomes popular enough, we plan to host our project on more powerful, scalable cloud architectures such as AWS to allow for our service to serve high demand with minimal downtime.", "link": "https://devpost.com/software/financial-ai-advisor", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "propelled", "selectorShort": "propel", "MarkedSent": "inspiration\nthe stock market and investing has always been hard to get into because of the vast knowledge needed to make smart financial decisions. our interests in the world of artificial intelligence and our desire to be a part of the investment world has -----> propelled !!!  us to build a service that not only makes investing more accessible for us, but for anyone else as well.\nwhat it does\nthe financial ai advisor uses historical stock prices and sentiment analysis on twitter tweets to let you know where to invest your money! upon entering our publicly available website, users can submit a comma-separated list of stock symbols and be greeted with statistics, projections, recommendations, and graphs of the stock(s) that the user has inputted based on data from two-weeks leading up to the present and using this data to project stock prices two weeks into the future.\nhow we built it\nwe are using datasets of twitter tweets related to stocks and historical stock prices to train our machine learning model. it utilizes twitter's api to collect recent tweets regarding a stock, the alpha vantage api to retrieve the most recent stock prices for a given stock, python to create machine learning models, perform sentiment analysis on tweets, and facilitate backend development , and html and css to design a frontend webpage to display recommendations to users in an intuitive and graphical way.\nchallenges we ran into\nthe twitter api had a rate limit, limiting the amount of testing we could do and prevented us from creating our own comprehensive custom dataset of twitter tweets. the datasets of twitter tweets and historical stock prices we used both had narrow time frames for their events, resulting in a difficulty connecting twitter tweets to historical stock prices and complications in extracting comprehensive time-based attributes when performing feature engineering.\naccomplishments that we're proud of\nwe are proud of hosting a working and constructive website, especially after having to pivot the problem we were trying to solve halfway through this hackathon due to the unforeseen difficulties around data collection and data processing. we are also proud of discovering useful attributes for input to our machine learning model after performing feature engineering on datasets that are inherently limited in their time frames.\nwhat we learned\nwe have learned that in many cases, the data preprocessing of raw data into usable data is the bottleneck in any data-driven projects, api's can sometimes be in-comprehensive and unreliable, and that front end html is harder than it looks when the entire team got a combined 16 hours of sleep the night before and the lead front end developer hasn't slept for 30 hours (centering a div is really hard guys).\nwhat's next for financial ai advisor\nwell hopefully we'll get some sleep first, so there's that. we're really excited about adding more creative features to the training model such as more comprehensive volatility and trend measures, trendiness of tweets/articles regarding stocks and tweets from a stock's stakeholders and public figures, and personalized user attributes like a user's investment history and risk aversion. if this project becomes popular enough, we plan to host our project on more powerful, scalable cloud architectures such as aws to allow for our service to serve high demand with minimal downtime.", "sortedWord": "None", "removed": "Nan", "score": 5, "comments": 1, "media": null, "medialink": null, "identifyer": 59503348}, {"Unnamed: 0": 4453, "autor": "There and back again", "date": null, "content": "Team name: Doofenshmirtz Evil Incorporated\nInspiration\nPedagogical interests propelled by academic curiosity.\nWhat it does\nSince middle school, we all have learned the fact that accelerated charges emit electromagnetic waves. However, it is cumbersome to visualize such complicated phenomena, especially when their equations come into the picture. In our project, we take a proton and observe its motion under the influence of a planar electromagnetic wave. The resulting motion, which is accelerated, makes the proton emit electromagnetic radiation. We have tried to model this and simulate the process for pedagogical aid. At the same time, we calculate the system's properties like the energy of the particle, the incident em wave, and the radiated wave (varying with time) to analyze it quantitatively.\nHow we built it\nIt was challenging for us to choose a coding language/software to model this, given our experience in all of them is that of a beginner. Nevertheless, we ended up using Python. We started with reading about the Physics and Math of the problem. To solve the ordinary differential equations that come up, we use the 4th order Runge-Kutta method. A couple of integrals were handled numerically too. We heavily used NumPy arrays for calculations of vectors in three spatial dimensions. Further, the plots and simulations were taken care of by the matplotlib package.\nChallenges we ran into\nLearning and using Python and its packages on the go, learning IPython notebooks, going beyond our comfort areas in Physics.\nAccomplishments that we're proud of\nNot giving up and completing the project, the prospective use of the project/approach to teach undergraduate STEM students.\nWhat we learned\nHow cool is the McGill Physics Hackathon, the Importance of collaboration and teamwork, of course lot of Physics and programming.\nWhat's next for There and Back Again- A proton's tale\nIf we had more time, we would have loved to add a lot of effects. For starters, we would like to make the entire scenario relativistic and explore any quantum or semi-classical effects that can be added. We can also include radiation back-reaction force and explore conservation laws in the process. Further, it would be good to generalize it and change the project into an interactive tool for STEM enthusiasts to play around with and learn.", "link": "https://devpost.com/software/there-and-back-again-a-proton-s-tale", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "propelled", "selectorShort": "propel", "MarkedSent": "team name: doofenshmirtz evil incorporated\ninspiration\npedagogical interests -----> propelled !!!  by academic curiosity.\nwhat it does\nsince middle school, we all have learned the fact that accelerated charges emit electromagnetic waves. however, it is cumbersome to visualize such complicated phenomena, especially when their equations come into the picture. in our project, we take a proton and observe its motion under the influence of a planar electromagnetic wave. the resulting motion, which is accelerated, makes the proton emit electromagnetic radiation. we have tried to model this and simulate the process for pedagogical aid. at the same time, we calculate the system's properties like the energy of the particle, the incident em wave, and the radiated wave (varying with time) to analyze it quantitatively.\nhow we built it\nit was challenging for us to choose a coding language/software to model this, given our experience in all of them is that of a beginner. nevertheless, we ended up using python. we started with reading about the physics and math of the problem. to solve the ordinary differential equations that come up, we use the 4th order runge-kutta method. a couple of integrals were handled numerically too. we heavily used numpy arrays for calculations of vectors in three spatial dimensions. further, the plots and simulations were taken care of by the matplotlib package.\nchallenges we ran into\nlearning and using python and its packages on the go, learning ipython notebooks, going beyond our comfort areas in physics.\naccomplishments that we're proud of\nnot giving up and completing the project, the prospective use of the project/approach to teach undergraduate stem students.\nwhat we learned\nhow cool is the mcgill physics hackathon, the importance of collaboration and teamwork, of course lot of physics and programming.\nwhat's next for there and back again- a proton's tale\nif we had more time, we would have loved to add a lot of effects. for starters, we would like to make the entire scenario relativistic and explore any quantum or semi-classical effects that can be added. we can also include radiation back-reaction force and explore conservation laws in the process. further, it would be good to generalize it and change the project into an interactive tool for stem enthusiasts to play around with and learn.", "sortedWord": "None", "removed": "Nan", "score": 2, "comments": 0, "media": null, "medialink": null, "identifyer": 59504453}], "name": "propelDevpost"}