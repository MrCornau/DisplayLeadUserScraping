{"interestingcomments": [{"Unnamed: 0": 174, "autor": "Reward Management companies in Bangalore", "date": null, "content": "Incorporate our rewards catalogue into your recognition, motivation or loyalty program. Benefit from over 10,000 carefully selected products from leading brands, such as Apple, Sony, Bose, Marshall, LG, Bajaj, Kent, Philips, Ray Ban, Samsung, Wildcraft, Prestige and many more . Our product range covers all key categories, including technology, home and garden, lifestyle and jewellery. We also provide seasonal ranges for Christmas, Summer, Diwali and Halloween. For more details visit http://elevatozloyalty.com/rewards-management.html or call us 91483 28339.", "link": "https://devpost.com/software/reward-management-companies-in-bangalore", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "incorporate our rewards catalogue into your recognition, motivation or loyalty program. benefit from over 10,000 carefully selected products from leading brands, such as apple, sony, bose, marshall, lg, bajaj, kent, philips, ray ban, samsung, wildcraft, prestige and many more . our product range covers all key categories, including technology, home and -----> garden !!! , lifestyle and jewellery. we also provide seasonal ranges for christmas, summer, diwali and halloween. for more details visit http://elevatozloyalty.com/rewards-management.html or call us 91483 28339.", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59500174}, {"Unnamed: 0": 381, "autor": "HACK JA - Social Good Website; Teen Community Gardens", "date": null, "content": "Inspiration\nWe were inspired by community gardens at many colleges that are student run. Not only did they use the environment around them, but also help provide fresh produce and other food for college students to afford. We were inspired by this idea and wanted to create a community garden in our own area, where you do not have to be a college student to volunteer at.\nWhat it does\nOur site teaches interested teens about community gardens and their benefits. It helps teens get involved in their community and offers them a way to start or volunteer at a community garden. Also, to help teach teens about more sustainable environmental practices.\nHow we built it\nWe built our website using replit.com. The languages we used were HTML and CSS.\nChallenges we ran into\nChallenges we ran into were formatting the site in the most user friendly way we could.\nAccomplishments that we're proud of\nBeing able to create a functioning website in a short amount of time!\nWhat we learned\nWe learned about different formatting options using CSS.\nWhat's next for HACK JA - Social Good Website; Teen Community Gardens\nWhat's next is to make the website more interactive for users and adaptable to all screen sizes.", "link": "https://devpost.com/software/hack-ja-social-good-website-teen-community-gardens", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "gardens", "selectorShort": "garden", "MarkedSent": "inspiration\nwe were inspired by community -----> gardens !!!  at many colleges that are student run. not only did they use the environment around them, but also help provide fresh produce and other food for college students to afford. we were inspired by this idea and wanted to create a community garden in our own area, where you do not have to be a college student to volunteer at.\nwhat it does\nour site teaches interested teens about community gardens and their benefits. it helps teens get involved in their community and offers them a way to start or volunteer at a community garden. also, to help teach teens about more sustainable environmental practices.\nhow we built it\nwe built our website using replit.com. the languages we used were html and css.\nchallenges we ran into\nchallenges we ran into were formatting the site in the most user friendly way we could.\naccomplishments that we're proud of\nbeing able to create a functioning website in a short amount of time!\nwhat we learned\nwe learned about different formatting options using css.\nwhat's next for hack ja - social good website; teen community gardens\nwhat's next is to make the website more interactive for users and adaptable to all screen sizes.", "sortedWord": "None", "removed": "Nan", "score": 1, "comments": 0, "media": null, "medialink": null, "identifyer": 59500381}, {"Unnamed: 0": 1639, "autor": "ipent", "date": null, "content": "Inspiration\nSmart irrigation isn't just convenient and cost effective, it's just the right thing to do. With a world population close to 8 billion, water is becoming increasingly scarce. Up to 70% of the world's water consumption is used for irrigation. Not surprisingly, this is where most of the water is wasted. Up to half of the water we spend on irrigation is wasted due to inefficient irrigation methods.\nWhat it does\nipent is a smart device aimed at reducing water loss due to inefficient irrigation methods by making plants self-sufficient in terms of taking basic needs (water, temperature and lighting). They are based on calculations of the condition of the plants in order to have excellent production without human interaction.\nHow we built it\nThe object will be driven from a mobile application to manage the object and define the ideal state of each plant. As well as the connectivity of objects in them case of a large sprinkler system, and on your smartphone at any time you can view the current state of each plant using \"Augmented Reality\" technology.\nChallenges we ran into\nSaved water, time and money by the time you are tracking your agricultural product.\nAccomplishments that we're proud of\nfirst protype of the project\nWhat we learned\nwe learned IOT and how to make objects do all the calculations needed to boost the plants production\nWhat's next for ipent\nAgriculture either for large farmers or for individuals who own a simple garden needs great care to reduce water loss which still remains an unresolved problem with inefficient traditional watering method, as well as he was almost spending more money and time. This encouraged us to find a new solution that is simple, inexpensive and achievable given our expertise. Regarding our sales organization, it's simple, for each customer we have two profit resources. First, after a one month trial period the customer has to pay a monthly subscription fee. And second, the maintenance costs for every system corruption.", "link": "https://devpost.com/software/ipent", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "inspiration\nsmart irrigation isn't just convenient and cost effective, it's just the right thing to do. with a world population close to 8 billion, water is becoming increasingly scarce. up to 70% of the world's water consumption is used for irrigation. not surprisingly, this is where most of the water is wasted. up to half of the water we spend on irrigation is wasted due to inefficient irrigation methods.\nwhat it does\nipent is a smart device aimed at reducing water loss due to inefficient irrigation methods by making plants self-sufficient in terms of taking basic needs (water, temperature and lighting). they are based on calculations of the condition of the plants in order to have excellent production without human interaction.\nhow we built it\nthe object will be driven from a mobile application to manage the object and define the ideal state of each plant. as well as the connectivity of objects in them case of a large sprinkler system, and on your smartphone at any time you can view the current state of each plant using \"augmented reality\" technology.\nchallenges we ran into\nsaved water, time and money by the time you are tracking your agricultural product.\naccomplishments that we're proud of\nfirst protype of the project\nwhat we learned\nwe learned iot and how to make objects do all the calculations needed to boost the plants production\nwhat's next for ipent\nagriculture either for large farmers or for individuals who own a simple -----> garden !!!  needs great care to reduce water loss which still remains an unresolved problem with inefficient traditional watering method, as well as he was almost spending more money and time. this encouraged us to find a new solution that is simple, inexpensive and achievable given our expertise. regarding our sales organization, it's simple, for each customer we have two profit resources. first, after a one month trial period the customer has to pay a monthly subscription fee. and second, the maintenance costs for every system corruption.", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59501639}, {"Unnamed: 0": 1673, "autor": "FeelMe", "date": null, "content": "Inspiration\nSmart irrigation isn't just convenient and cost effective, it's just the right thing to do. With a world population close to 8 billion, water is becoming increasingly scarce. Up to 70% of the world's water consumption is used for irrigation. Not surprisingly, this is where most of the water is wasted. Up to half of the water we spend on irrigation is wasted due to inefficient irrigation methods.\nWhat it does\nFeelMe is a smart device aimed at reducing water loss due to inefficient irrigation methods by making plants self-sufficient in terms of taking basic needs (water, temperature and lighting). They are based on calculations of the condition of the plants in order to have excellent production without human interaction.\nHow we built it\nThe object will be driven from a mobile application to manage the object and define the ideal state of each plant. As well as the connectivity of objects in them case of a large sprinkler system, and on your smartphone at any time you can view the current state of each plant using \"Augmented Reality\" technology.\nChallenges we ran into\nSaved water, time and money by the time you are tracking your agricultural product.\nAccomplishments that we're proud of\nfirst protype of the project\nWhat we learned\nwe learned IOT and how to make objects do all the calculations needed to boost the plants production\nWhat's next for FeelMe\nAgriculture either for large farmers or for individuals who own a simple garden needs great care to reduce water loss which still remains an unresolved problem with inefficient traditional watering method, as well as he was almost spending more money and time. This encouraged us to find a new solution that is simple, inexpensive and achievable given our expertise. Regarding our sales organization, it's simple, for each customer we have two profit resources. First, after a one month trial period the customer has to pay a monthly subscription fee. And second, the maintenance costs for every system corruption.", "link": "https://devpost.com/software/skyfarm", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "inspiration\nsmart irrigation isn't just convenient and cost effective, it's just the right thing to do. with a world population close to 8 billion, water is becoming increasingly scarce. up to 70% of the world's water consumption is used for irrigation. not surprisingly, this is where most of the water is wasted. up to half of the water we spend on irrigation is wasted due to inefficient irrigation methods.\nwhat it does\nfeelme is a smart device aimed at reducing water loss due to inefficient irrigation methods by making plants self-sufficient in terms of taking basic needs (water, temperature and lighting). they are based on calculations of the condition of the plants in order to have excellent production without human interaction.\nhow we built it\nthe object will be driven from a mobile application to manage the object and define the ideal state of each plant. as well as the connectivity of objects in them case of a large sprinkler system, and on your smartphone at any time you can view the current state of each plant using \"augmented reality\" technology.\nchallenges we ran into\nsaved water, time and money by the time you are tracking your agricultural product.\naccomplishments that we're proud of\nfirst protype of the project\nwhat we learned\nwe learned iot and how to make objects do all the calculations needed to boost the plants production\nwhat's next for feelme\nagriculture either for large farmers or for individuals who own a simple -----> garden !!!  needs great care to reduce water loss which still remains an unresolved problem with inefficient traditional watering method, as well as he was almost spending more money and time. this encouraged us to find a new solution that is simple, inexpensive and achievable given our expertise. regarding our sales organization, it's simple, for each customer we have two profit resources. first, after a one month trial period the customer has to pay a monthly subscription fee. and second, the maintenance costs for every system corruption.", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59501673}, {"Unnamed: 0": 2562, "autor": "HackYard", "date": null, "content": "Inspiration\nThe initial inspiration was our inability to remind us to water the plants in our flat on a regular basis. So instead of improving our watering skills we changed to plastic plants which is neither sustainable nor eco-friendly. Furthermore, nowadays there is some awareness of the danger of the world heating up but almost none to the huge catastrophe we can expect when the bee dying continues as it did in the last years. Therefore, when we thought about sustainable living, we decided something has to change in this area of live meanwhile reducing our CO2 footprint.\nWhat it does\nOur application helps people, especially these who are new to gardening, to keep their garden and flowers intact. It sends reminders in an adjustable timeframe to water your indoor plants. Based on the weather of the last few days, it sends you hints if the plants need to be watered outside and how much they actually need to prevent gardeners to waste a huge amount of water. The app also reminds you to harvest and suggests the best time to prune your plants so they will be in full bloom again the next year. Because of build-in gamification elements it hopefully helps people to stay motivated to take care of their plants or even support experienced gardeners with a bee friendly plant counter to make their gardens more sustainable.\nCurrently you have 0 bee friendly flowers.\nSo all in all the apps helps the gardners to manage their plants meanwhile creating an oasis of wellbeing for plants and animals.\nHow we built it\nWe build a hybrid web app (frontend) with the Ionic framework and Angular. With this it is possible to run our application directly as a native Android or iOS app. But it can also be easily deployed to the web to reach even more users. In the BackEnd we used ExpressJs and a MongoDB to store all the necessary data about the gardens and plants.\nChallenges we ran into\nFinding the right data about the plants in the right format. Bug fixes and some backend problems with MongoDB were also tough.\nAccomplishments that we're proud of\nThe whole application ;)\nWhat we learned\nBuilding an app in under 2 days is quite some work. Even more so if learning a new framework at the same time.\nWhat's next for HackYard\nThere are several things next up for HackYard. First filling the database with records and care guides about several plants. Maybe we could implement a possibility for the community users to also add their wisdom. Next adding a scanner for the price tag of a newly bought plant to automatically add it to the garden. Based on this we could also add an analysis tool to indicate why certain plants do not grow how they should, just with a scan of the real plant. Furthermore, changing the list of plants with an interactive map to add even more gamification elements.", "link": "https://devpost.com/software/hackyard", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "inspiration\nthe initial inspiration was our inability to remind us to water the plants in our flat on a regular basis. so instead of improving our watering skills we changed to plastic plants which is neither sustainable nor eco-friendly. furthermore, nowadays there is some awareness of the danger of the world heating up but almost none to the huge catastrophe we can expect when the bee dying continues as it did in the last years. therefore, when we thought about sustainable living, we decided something has to change in this area of live meanwhile reducing our co2 footprint.\nwhat it does\nour application helps people, especially these who are new to gardening, to keep their -----> garden !!!  and flowers intact. it sends reminders in an adjustable timeframe to water your indoor plants. based on the weather of the last few days, it sends you hints if the plants need to be watered outside and how much they actually need to prevent gardeners to waste a huge amount of water. the app also reminds you to harvest and suggests the best time to prune your plants so they will be in full bloom again the next year. because of build-in gamification elements it hopefully helps people to stay motivated to take care of their plants or even support experienced gardeners with a bee friendly plant counter to make their gardens more sustainable.\ncurrently you have 0 bee friendly flowers.\nso all in all the apps helps the gardners to manage their plants meanwhile creating an oasis of wellbeing for plants and animals.\nhow we built it\nwe build a hybrid web app (frontend) with the ionic framework and angular. with this it is possible to run our application directly as a native android or ios app. but it can also be easily deployed to the web to reach even more users. in the backend we used expressjs and a mongodb to store all the necessary data about the gardens and plants.\nchallenges we ran into\nfinding the right data about the plants in the right format. bug fixes and some backend problems with mongodb were also tough.\naccomplishments that we're proud of\nthe whole application ;)\nwhat we learned\nbuilding an app in under 2 days is quite some work. even more so if learning a new framework at the same time.\nwhat's next for hackyard\nthere are several things next up for hackyard. first filling the database with records and care guides about several plants. maybe we could implement a possibility for the community users to also add their wisdom. next adding a scanner for the price tag of a newly bought plant to automatically add it to the garden. based on this we could also add an analysis tool to indicate why certain plants do not grow how they should, just with a scan of the real plant. furthermore, changing the list of plants with an interactive map to add even more gamification elements.", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59502562}, {"Unnamed: 0": 3078, "autor": "Meditation Garden", "date": null, "content": "Inspiration\nWe noticed that most meditation apps only use a timer to get people to meditate, which doesn\u2019t motivate people to meditate every day.\nWhat it does\nMeditation Garden is an application meant to help users destress and focus through meditation. Its goal is to get users to meditate daily and build meditation into their daily schedule. As a result, the app will help increase productivity and mental wellness.\nHow we built it\nWe used Unity and coded in C# to put everything together. We used Procreate to create the graphics of the project.\nChallenges we ran into\nWe had trouble working on the project simultaneously and were debating on whether to use Git or not. We also had trouble with getting the animations to function.\nAccomplishments that we're proud of\nWe are proud of completing the prototype and getting some of the animations to work.\nWhat we learned\nWe learned how to read Unity documentation and how to code in C#.\nWhat's next for Meditation Garden\nWe plan on adding a day tracker to the app so that people can see how long they have been consistently meditating. We also want to add more plants that people can grow and maybe even showcase to other people. We are thinking of adding a feature where people can share plants.", "link": "https://devpost.com/software/meditation-garden", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "inspiration\nwe noticed that most meditation apps only use a timer to get people to meditate, which doesn\u2019t motivate people to meditate every day.\nwhat it does\nmeditation -----> garden !!!  is an application meant to help users destress and focus through meditation. its goal is to get users to meditate daily and build meditation into their daily schedule. as a result, the app will help increase productivity and mental wellness.\nhow we built it\nwe used unity and coded in c# to put everything together. we used procreate to create the graphics of the project.\nchallenges we ran into\nwe had trouble working on the project simultaneously and were debating on whether to use git or not. we also had trouble with getting the animations to function.\naccomplishments that we're proud of\nwe are proud of completing the prototype and getting some of the animations to work.\nwhat we learned\nwe learned how to read unity documentation and how to code in c#.\nwhat's next for meditation garden\nwe plan on adding a day tracker to the app so that people can see how long they have been consistently meditating. we also want to add more plants that people can grow and maybe even showcase to other people. we are thinking of adding a feature where people can share plants.", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59503078}, {"Unnamed: 0": 3712, "autor": "Smart Parks and Rec", "date": null, "content": "Smart Parks and Rec The study of the functional usages of urban greeneries are helpful in understanding their mental and physical health benefits on the community. Our project is developing an algorithm that classifies and predicts the function of an urban greenery given images of it.\nIntroduction: We are trying to solve a new problem of having the network, given the pictures of an urban greenery, categorize its functional use and predict a label for it such as \u201cpark\u201d, \u201cgarden\u201d or \u201cplayground\u201d. Therefore, it is a classification problem. It is suggested in the public health/urban planning paper \"Value of urban green spaces in promoting healthy living and wellbeing: prospects for planning\" (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4556255/ ) that, it is the functionality of an urban green space that relates to the health benefits this green space brings to the neighborhood, rather than the qualities of this green space. However, conventional studies have been looking more at the qualities and less so the functionalities, or the activities being undertaken there\nData: The datasets which would best fit our goals would link park images to park activities, so that we may better predict health outcomes of different neighborhoods. Some of the datasets below are a few options we consider using: Recreational facilities in New York City Department of Parks & Recreation properties (805 items) -https://data.world/city-of-ny/e4ej-j6hn Assessment of town and park characteristics related to physical activity in the Lower Mississippi Delta (616 columns) -https://data.world/us-usda-gov/83455c6f-4b84-4dcc-9ac5-f018e00eca40 The NYC Parks Events Listing database is used to store event information displayed on the Parks website, nyc.gov/parks. (50,199 items) https://data.world/city-of-ny/6eti-k994\nMethodology: It will be a Convolutional Neural Network with three convolutional layers, each with a normalization layer, a relu layer, and a max pooling layer. Lastly, there will be one dense layer. This design is because of the image-to-label nature of the dataset, and the fact that CNNs are proven to be suitable for image classification tasks. If the model architecture is not working, we consider adding one more dense layer to increase accuracy, try increasing or decreasing the number of convolutional layers, using different pooling functions and nonlinear activations etc., as well as tuning the hyperparameters. We are planning to train the model based on a batch size of 256 for 10 epochs, but these are to be tuned.\nMetrics: One first measure of success would be to take a park image, and successfully attribute the correct park activity to the park image. One further step would be to assign each park activity a score between 1 and 0 which expresses the activity\u2019s relationship with health, and thus the park\u2019s relationship with health. Finally, applying these scores on a map (should we find a map to image data set, which is likely) would allow us to visualize the makeup of healthy green spaces in an urban space. A \u201cstretch\u201d model would allow us to assign different health values to different parks/green areas in urban spaces. Ultimately, this will serve as a tool for urban planners to understand how to better organize green spaces, and will enable further analysis of diverse neighborhood healthiness. The model could even suggest, given a set of constraints such as budget and zoning codes, where to add new green spaces to the city and what they would be for. Here, accuracy is an accurate measure for success, as it is a typical image classification problem.\nWe will have a softmax loss function as well as a prediction accuracy function to apply when we test the model on 20% percent of the data in our dataset that are allocated for testing.\nEthics: What broader societal issues are relevant to your chosen problem space? Recent studies have shown that a lack of green space in disfavored neighborhoods have harsh health repercussions. Green spaces are essential for fitness, health, and mental health, and with the warming of climate provide additional cooling. A better replanning of green spaces to better serve all neighborhoods is essential to community living. Our model will be one additional tool for urban planners to use to identify current green space allocation problems.\nWhy is Deep Learning a good approach to this problem? When it comes to studying the relationship between urban greeneries and their health outcomes in the community, there are a lot of factors to deal with because urban systems are complex systems. It would be hard for an urban planner to manually map out the functional use of each urban greenery, and that is why deep learning algorithms can help quickly categorize the greeneries and make the relationship clearer.\nDivision of labor: Elise: preprocessing data, and potentially aligning activities with health scores. Viola: assembling the model, and potentially adjusting the loss function to attribute several labels (for several activities) to one inputs (one park).", "link": "https://devpost.com/software/smart-parks-and-rec", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "smart parks and rec the study of the functional usages of urban greeneries are helpful in understanding their mental and physical health benefits on the community. our project is developing an algorithm that classifies and predicts the function of an urban greenery given images of it.\nintroduction: we are trying to solve a new problem of having the network, given the pictures of an urban greenery, categorize its functional use and predict a label for it such as \u201cpark\u201d, \u201c-----> garden !!! \u201d or \u201cplayground\u201d. therefore, it is a classification problem. it is suggested in the public health/urban planning paper \"value of urban green spaces in promoting healthy living and wellbeing: prospects for planning\" (https://www.ncbi.nlm.nih.gov/pmc/articles/pmc4556255/ ) that, it is the functionality of an urban green space that relates to the health benefits this green space brings to the neighborhood, rather than the qualities of this green space. however, conventional studies have been looking more at the qualities and less so the functionalities, or the activities being undertaken there\ndata: the datasets which would best fit our goals would link park images to park activities, so that we may better predict health outcomes of different neighborhoods. some of the datasets below are a few options we consider using: recreational facilities in new york city department of parks & recreation properties (805 items) -https://data.world/city-of-ny/e4ej-j6hn assessment of town and park characteristics related to physical activity in the lower mississippi delta (616 columns) -https://data.world/us-usda-gov/83455c6f-4b84-4dcc-9ac5-f018e00eca40 the nyc parks events listing database is used to store event information displayed on the parks website, nyc.gov/parks. (50,199 items) https://data.world/city-of-ny/6eti-k994\nmethodology: it will be a convolutional neural network with three convolutional layers, each with a normalization layer, a relu layer, and a max pooling layer. lastly, there will be one dense layer. this design is because of the image-to-label nature of the dataset, and the fact that cnns are proven to be suitable for image classification tasks. if the model architecture is not working, we consider adding one more dense layer to increase accuracy, try increasing or decreasing the number of convolutional layers, using different pooling functions and nonlinear activations etc., as well as tuning the hyperparameters. we are planning to train the model based on a batch size of 256 for 10 epochs, but these are to be tuned.\nmetrics: one first measure of success would be to take a park image, and successfully attribute the correct park activity to the park image. one further step would be to assign each park activity a score between 1 and 0 which expresses the activity\u2019s relationship with health, and thus the park\u2019s relationship with health. finally, applying these scores on a map (should we find a map to image data set, which is likely) would allow us to visualize the makeup of healthy green spaces in an urban space. a \u201cstretch\u201d model would allow us to assign different health values to different parks/green areas in urban spaces. ultimately, this will serve as a tool for urban planners to understand how to better organize green spaces, and will enable further analysis of diverse neighborhood healthiness. the model could even suggest, given a set of constraints such as budget and zoning codes, where to add new green spaces to the city and what they would be for. here, accuracy is an accurate measure for success, as it is a typical image classification problem.\nwe will have a softmax loss function as well as a prediction accuracy function to apply when we test the model on 20% percent of the data in our dataset that are allocated for testing.\nethics: what broader societal issues are relevant to your chosen problem space? recent studies have shown that a lack of green space in disfavored neighborhoods have harsh health repercussions. green spaces are essential for fitness, health, and mental health, and with the warming of climate provide additional cooling. a better replanning of green spaces to better serve all neighborhoods is essential to community living. our model will be one additional tool for urban planners to use to identify current green space allocation problems.\nwhy is deep learning a good approach to this problem? when it comes to studying the relationship between urban greeneries and their health outcomes in the community, there are a lot of factors to deal with because urban systems are complex systems. it would be hard for an urban planner to manually map out the functional use of each urban greenery, and that is why deep learning algorithms can help quickly categorize the greeneries and make the relationship clearer.\ndivision of labor: elise: preprocessing data, and potentially aligning activities with health scores. viola: assembling the model, and potentially adjusting the loss function to attribute several labels (for several activities) to one inputs (one park).", "sortedWord": "None", "removed": "Nan", "score": 1, "comments": 6, "media": null, "medialink": null, "identifyer": 59503712}, {"Unnamed: 0": 3914, "autor": "SUBSTRATM", "date": null, "content": "Inspiration\nWalled gardens and black box moderation of incumbent social media platforms, and the lack of network effect in alternatives. Not being able to trust what you see in your feed and what you don\u2019t. Some form of Gatekeeping as a byproduct of all other attempts.\nWhat it does\nMoves the model of federated ActivityPub-compliant social media from servers owned by gatekeepers to the blockchain, putting the power to subscribe to, boost, mute or block anyone purely in the user\u2019s hands.\nHow we built it\nFor this portion we built the NFT minting dapp with REACT and Moralis and the proof of concept social media authentication with Chainlink.\nSocial media authentication by implementing the ChainlinkClient and calling to our own external adapter which authenticated api calls to Twitter.\nChallenges we ran into\nReal jobs, being geographically spread out with timezones and having to learn everything from scratch... scope creep, communication barriers in describing our individual parts of the elephant.\nThere was a lot of overhead set up to get an api call through Chainlink and we had to set up a node running locally in order to test. As non-blockchain devs, there were a lot of new frameworks to learn.\nAccomplishments that we're proud of\nBeginning the journey with a loose framework and process that brought our small team together and forced us to grind nebulous ideas through a collaborative process to shake out what didn\u2019t work or rescope/reframe the structure and tranches.\nGetting our first chainlink node running and creating our own external adapter and bridge were a huge accomplishment\nWhat we learned\nMoralis, blockchain, Chainlink, friendship, comradery, teamwork, team building exercises, zoom call trust falls, how to diagnose a mild concussion, and how to update zoom.\nWhat's next for SUBSTRATM\nFrontend, more backend, ActivityPub compatibility, lots of stuff. Find someone who knows a bit about blockchain development to guide us more effectively and a designer to make it look good but primarily to optimise UI.", "link": "https://devpost.com/software/substratm", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "gardens", "selectorShort": "garden", "MarkedSent": "inspiration\nwalled -----> gardens !!!  and black box moderation of incumbent social media platforms, and the lack of network effect in alternatives. not being able to trust what you see in your feed and what you don\u2019t. some form of gatekeeping as a byproduct of all other attempts.\nwhat it does\nmoves the model of federated activitypub-compliant social media from servers owned by gatekeepers to the blockchain, putting the power to subscribe to, boost, mute or block anyone purely in the user\u2019s hands.\nhow we built it\nfor this portion we built the nft minting dapp with react and moralis and the proof of concept social media authentication with chainlink.\nsocial media authentication by implementing the chainlinkclient and calling to our own external adapter which authenticated api calls to twitter.\nchallenges we ran into\nreal jobs, being geographically spread out with timezones and having to learn everything from scratch... scope creep, communication barriers in describing our individual parts of the elephant.\nthere was a lot of overhead set up to get an api call through chainlink and we had to set up a node running locally in order to test. as non-blockchain devs, there were a lot of new frameworks to learn.\naccomplishments that we're proud of\nbeginning the journey with a loose framework and process that brought our small team together and forced us to grind nebulous ideas through a collaborative process to shake out what didn\u2019t work or rescope/reframe the structure and tranches.\ngetting our first chainlink node running and creating our own external adapter and bridge were a huge accomplishment\nwhat we learned\nmoralis, blockchain, chainlink, friendship, comradery, teamwork, team building exercises, zoom call trust falls, how to diagnose a mild concussion, and how to update zoom.\nwhat's next for substratm\nfrontend, more backend, activitypub compatibility, lots of stuff. find someone who knows a bit about blockchain development to guide us more effectively and a designer to make it look good but primarily to optimise ui.", "sortedWord": "None", "removed": "Nan", "score": 1, "comments": 0, "media": null, "medialink": null, "identifyer": 59503914}, {"Unnamed: 0": 4413, "autor": "Planter Planner", "date": null, "content": "Inspiration\nMy CS115 professor and I were having a conversation and he brought up gardening as a website someone could build. I immediately thought of my parents' garden, and how the tomato plants always seemed to choke out the other plants. I decided that I wanted to build a small program that could help plan out gardens for people so that they could avoid choking out plants, and optimize their garden space.\nWhat it does\nThis program takes input from the user about plants and the garden space and visualizes where the planter wants to place the plants as well as the area the plant will choke out\nHow we built it\nIt is built in python, using lists and functions to visualize the planting area. It also uses classes to store plant information.\nChallenges we ran into\nCreating the array and getting it to print out properly was difficult. I had to go through line by line to check and see where I was going wrong, and I felt very proud when it was printed out correctly. Learning about classes and making it so that users could input custom plants was very challenging but also fun. The last challenge was getting the choke out area to work properly. I wanted to make sure it would not override another plant, and figuring out the checks was an interesting and tough task for me.\nAccomplishments that we're proud of\nI am very proud of the array to print properly and making sure the choke out area did not override other plants. This allows planters to plan out their plants without worrying about losing one under the choke out area of another, so they can still remember what the plants were and where they were.\nWhat we learned\nI learned more about lists in python, classes, and some file I/O even though it did not end up in the final program. Classes were fun and seem very useful. File I/O seems very difficult, but I have also enjoyed learning about it and would like to continue learning and making it work as it seems extremely useful.\nWhat's next for Planter Planner\nI would love to add in a remove feature so that planters could remove a plant from the program. That way if a planter messes up or wants to change something, they can without having to start all over. I would also love to add in some file I/O so that the plants and their class attributes are read directly from a file. This would allow custom plants to be stored as well so that planters would not have to re-enter the plant information every time they wanted to plant another. More advanced features would be very interesting as well, such as plant temperature and water needs, and seasons in which plants grow too. That way a planter could plan out a year or more's worth of their planting area. Having the finished planting plans printed into a file so they could be saved is another thing I would love to add to Planter Planner.", "link": "https://devpost.com/software/planter-planner", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "inspiration\nmy cs115 professor and i were having a conversation and he brought up gardening as a website someone could build. i immediately thought of my parents' -----> garden !!! , and how the tomato plants always seemed to choke out the other plants. i decided that i wanted to build a small program that could help plan out gardens for people so that they could avoid choking out plants, and optimize their garden space.\nwhat it does\nthis program takes input from the user about plants and the garden space and visualizes where the planter wants to place the plants as well as the area the plant will choke out\nhow we built it\nit is built in python, using lists and functions to visualize the planting area. it also uses classes to store plant information.\nchallenges we ran into\ncreating the array and getting it to print out properly was difficult. i had to go through line by line to check and see where i was going wrong, and i felt very proud when it was printed out correctly. learning about classes and making it so that users could input custom plants was very challenging but also fun. the last challenge was getting the choke out area to work properly. i wanted to make sure it would not override another plant, and figuring out the checks was an interesting and tough task for me.\naccomplishments that we're proud of\ni am very proud of the array to print properly and making sure the choke out area did not override other plants. this allows planters to plan out their plants without worrying about losing one under the choke out area of another, so they can still remember what the plants were and where they were.\nwhat we learned\ni learned more about lists in python, classes, and some file i/o even though it did not end up in the final program. classes were fun and seem very useful. file i/o seems very difficult, but i have also enjoyed learning about it and would like to continue learning and making it work as it seems extremely useful.\nwhat's next for planter planner\ni would love to add in a remove feature so that planters could remove a plant from the program. that way if a planter messes up or wants to change something, they can without having to start all over. i would also love to add in some file i/o so that the plants and their class attributes are read directly from a file. this would allow custom plants to be stored as well so that planters would not have to re-enter the plant information every time they wanted to plant another. more advanced features would be very interesting as well, such as plant temperature and water needs, and seasons in which plants grow too. that way a planter could plan out a year or more's worth of their planting area. having the finished planting plans printed into a file so they could be saved is another thing i would love to add to planter planner.", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59504413}, {"Unnamed: 0": 4660, "autor": "Savoury Shrubs", "date": null, "content": "Inspiration\nCanada has been undergoing a food insecurity problem and when COVID came around there was a 10% increase. More than 14 percent of Canadians are facing this problem.\nWhat it does\nIt is a platform where users can search their location and find plants that are safe to consume near them as another source of food for households. Foraging is a useful way to find food but is not put into practice because it cannot always be safe with a lot of misinformation and individuals not knowing how they can put it into practice. Savoury Shrubs conveniently has correct information on foraging and various plants as they are reviewed and written by professionals. Other information can also be found there such as recipes that can be made with foraged goods, and even events and postings about local community gardens through the social media page.\nHow we built it\nWe built the website using Bootstrap and React and prototypes through Figma.\nChallenges we ran into\nTime was definitely a challenge as there was so much more we wanted to implement into the demos.\nAccomplishments that we're proud of\nWe are proud we got the plant database to work and output information onto the screen.\nWhat we learned\nWe learned to allot more time to work and to keep brainstorming to a minimum.\nWhat's next for Savory Shrubs\nWe want to implement a plant identification feature in our phone application to make it even easier and safe for individuals to use.", "link": "https://devpost.com/software/project-ed4a32c7hjrn", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "gardens", "selectorShort": "garden", "MarkedSent": "inspiration\ncanada has been undergoing a food insecurity problem and when covid came around there was a 10% increase. more than 14 percent of canadians are facing this problem.\nwhat it does\nit is a platform where users can search their location and find plants that are safe to consume near them as another source of food for households. foraging is a useful way to find food but is not put into practice because it cannot always be safe with a lot of misinformation and individuals not knowing how they can put it into practice. savoury shrubs conveniently has correct information on foraging and various plants as they are reviewed and written by professionals. other information can also be found there such as recipes that can be made with foraged goods, and even events and postings about local community -----> gardens !!!  through the social media page.\nhow we built it\nwe built the website using bootstrap and react and prototypes through figma.\nchallenges we ran into\ntime was definitely a challenge as there was so much more we wanted to implement into the demos.\naccomplishments that we're proud of\nwe are proud we got the plant database to work and output information onto the screen.\nwhat we learned\nwe learned to allot more time to work and to keep brainstorming to a minimum.\nwhat's next for savory shrubs\nwe want to implement a plant identification feature in our phone application to make it even easier and safe for individuals to use.", "sortedWord": "None", "removed": "Nan", "score": 1, "comments": 0, "media": null, "medialink": null, "identifyer": 59504660}, {"Unnamed: 0": 4998, "autor": "iris", "date": null, "content": "Inspiration\nSince the release of TorchServe we were intimidated to experiment with it and try to push its limits. Recently, Google Photos ended its free storage and it kind of inspired us to build an open source version of it. We wanted to build a platform which people can host themselves and powered by PyTorch ecosystem. With some magic and endless optimizations, we are proud to release iris!\nWhat it does\niris is an open source photos platform which is more of an alternative of Google Photos. With the scope of development being during the Hackathon duration, we tried implementing some of the core features like: Listing photos, Detecting Categories, Detecting and Classifying Faces from Photos, Detecting and Clustering by Location and Things in Photos. Currently, when you upload any image - iris will smartly extract all fields asynchronously and categorise your photo for smart search and listing.\nSearch Explore\nHow we built it\nAll the services are containerised and are available as Docker images.\nWorker:\nWorker is the HEART of the iris. Its a Python microservice which contains 4 components:\nMetadata: It extracts all the information about the photo for processing like Height, Width, Camera details, Location co-ordinates, etc.\nPeople: It calls TorchServe FaceNet API to get detected faces from the photos and then performs clustering to group new faces with existing faces in all photos.\nThings: It calls TorchServe API to get categories and classes of images classified by image classification model ResNet152 and object detection model MaskRCNN. Based on the classes iris's 26 categories for a photo are decided.\nPlaces: It does reverse geo-coding from the co-ordinates and works on identifying the location name for a photo.\nML:\nML is the BRAIN of iris. Its a TorchServe microservice which contains 3 models with customised handlers.\nFaceNet: We made use of pretrained model from timesler/facenet-pytorch for face detection and Inception pretrained on vggface for getting the image embeddings. It returns in response:\n{ \"data\": \"<byte data of the face detected>\", \"embedding\": \"<image embedding data>\" }\nResNet152: We are using torchvision/resnet152 for image classification based on the ImageNet categories.\nMaskRCNN: We are using torchvision/maskrcnn for object detection based on the COCO categories. Both the above models return response:\n{ \"content_categories\": [<>], \"classes\": [<>] } Currently, ML service returns following 26 Categories for an image:\n'ANIMALS', 'FOOD', 'GARDENS', 'SPORT', 'PEOPLE', 'TRAVEL', 'WEDDINGS', 'LANDSCAPES', 'SCREENSHOTS', 'WHITEBOARDS', 'BIRTHDAYS', 'NIGHT', 'FLOWERS', 'SELFIES', 'CITYSCAPES', 'ARTS', 'CRAFTS', 'HOLIDAYS', 'FASHION', 'LANDMARKS', 'PERFORMANCES', 'RECEIPTS', 'DOCUMENTS', 'HOUSES', 'PETS', 'UTILITY',\nFrontend:\nWe wanted to build a Single Page Application which can be smooth in loading the large list of images, uploading and working with virtualisation to give performance. Hence, we choose React.js and built the frontend using it. We choose Material React Framework for designing the website with its components.\nAPI:\nWe had a good experience working with Facebook's GraphQL in past and knew its strength. We implemented a GraphQL API Server in Golang with its connectivity to MongoDB for database storage. API Server also connects to SeaweedFS which is a CDN Server for our images and RabbitMQ for communication with other services via message broker. GraphQL API Server handles the File upload, Search, Listing all photos at Home as well as Explore Sections.\nChallenges we ran into\nThe hackathon has been a unique journey personally for us, given our full time jobs.\nApart from that, these are some specific challenges we ran into:\nHandling asynchronous and continuous stream of the file uploads was trickier as well. As we wanted it to be as real time as possible we did not go with CRON jobs for processing the images. Instead it was a challenging problem of micro services to solve. Thats why we brought in the RabbitMQ as message broker and pushed all the information about the uploaded files to the worker. This made it asynchronous but yet ensured its near real time processing for all the photos.\nWorker components were the most fun and challenging out of all to work on. Given the complexity of the processing - it was very hard to perform reverse geo-coding at first - then we solved it using: Open Street Maps Nominatim. Secondly, things detection was the toughest as it can lead to incorrect results, we needed to set up filters for identifying classes and categories as well. At last, for the people detection and recognition, we just spent last few weeks on identifying the clustering for the faces in the photos. We finally decided to choose Spotify Annoy and experimented with lot of distances for the clustering. However, not being 100% accurate, it still works like a charm.\nBuilding and spinning a GraphQL server which can host images uploaded by the user was one of the first in line while developing this project. We tried and experimented with several techniques to store the uploaded file in disk, but it proved to be incorrect. Thats we ended up using SeaweedFS which a popular open source CDN server. Once it was up, we could upload as many photos as we want without worrying about the disk space for the API Server.\nAccomplishments that we're proud of\nTeam\nWe were chasing a fun engineering & machine learning problem and being able to solve it by delivering a working solution is a moment of pride for us. We have learnt so much in last few months, which we couldn't even in a year. While working on the project, we were so involved that we used to get so many feature ideas and we had to spend time in prioritising them. While during this pandemic, without the great communication, prioritization, and scheduling we couldn't have achieved this and we are super proud of this!\nOmkar\nHaving successfully carved all of the core components of the project in a relatively short period of time, this has to be my most memorable and proud moment of 2021! I am super proud of designing this architecture which competes with several existing open source solutions. Having delivered the Worker & ML which does the magic by solving several ML and Engineering problems, those 2 are definitely my favourite pieces of the software I have developed in recent times.\nAkshay\nBuilding the front-end in such a short period of time, which was supported by great back-end services. It was a great experience working on the iris front-end. I got to learn many things along the way like page optimization, handling file uploads, etc. I am really proud of what we have accomplished, this is one of the best projects I've worked on in 2021.\nWhat we learned\nOmkar learned:\nPyTorch Model Deployment with TorchServe\nCustomized models and handlers\nContainer scaling for TorchServe and metrics\nPython Multithreading for building microservices\nAkshay learned:\nUploading files with GraphQL\nOptimizing page to load large list of images\nWorking with containerized environment\nWhat's next for iris\nWe are planning to continue this project and ship out of scope hackathon features like Albums, Sharing, Image Filters, Editing image metadata.\nWe will be opening up for funding and financial backing from VCs to continue this project and support those who want to use it.", "link": "https://devpost.com/software/iris-7s3yna", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "gardens", "selectorShort": "garden", "MarkedSent": "inspiration\nsince the release of torchserve we were intimidated to experiment with it and try to push its limits. recently, google photos ended its free storage and it kind of inspired us to build an open source version of it. we wanted to build a platform which people can host themselves and powered by pytorch ecosystem. with some magic and endless optimizations, we are proud to release iris!\nwhat it does\niris is an open source photos platform which is more of an alternative of google photos. with the scope of development being during the hackathon duration, we tried implementing some of the core features like: listing photos, detecting categories, detecting and classifying faces from photos, detecting and clustering by location and things in photos. currently, when you upload any image - iris will smartly extract all fields asynchronously and categorise your photo for smart search and listing.\nsearch explore\nhow we built it\nall the services are containerised and are available as docker images.\nworker:\nworker is the heart of the iris. its a python microservice which contains 4 components:\nmetadata: it extracts all the information about the photo for processing like height, width, camera details, location co-ordinates, etc.\npeople: it calls torchserve facenet api to get detected faces from the photos and then performs clustering to group new faces with existing faces in all photos.\nthings: it calls torchserve api to get categories and classes of images classified by image classification model resnet152 and object detection model maskrcnn. based on the classes iris's 26 categories for a photo are decided.\nplaces: it does reverse geo-coding from the co-ordinates and works on identifying the location name for a photo.\nml:\nml is the brain of iris. its a torchserve microservice which contains 3 models with customised handlers.\nfacenet: we made use of pretrained model from timesler/facenet-pytorch for face detection and inception pretrained on vggface for getting the image embeddings. it returns in response:\n{ \"data\": \"<byte data of the face detected>\", \"embedding\": \"<image embedding data>\" }\nresnet152: we are using torchvision/resnet152 for image classification based on the imagenet categories.\nmaskrcnn: we are using torchvision/maskrcnn for object detection based on the coco categories. both the above models return response:\n{ \"content_categories\": [<>], \"classes\": [<>] } currently, ml service returns following 26 categories for an image:\n'animals', 'food', '-----> gardens !!! ', 'sport', 'people', 'travel', 'weddings', 'landscapes', 'screenshots', 'whiteboards', 'birthdays', 'night', 'flowers', 'selfies', 'cityscapes', 'arts', 'crafts', 'holidays', 'fashion', 'landmarks', 'performances', 'receipts', 'documents', 'houses', 'pets', 'utility',\nfrontend:\nwe wanted to build a single page application which can be smooth in loading the large list of images, uploading and working with virtualisation to give performance. hence, we choose react.js and built the frontend using it. we choose material react framework for designing the website with its components.\napi:\nwe had a good experience working with facebook's graphql in past and knew its strength. we implemented a graphql api server in golang with its connectivity to mongodb for database storage. api server also connects to seaweedfs which is a cdn server for our images and rabbitmq for communication with other services via message broker. graphql api server handles the file upload, search, listing all photos at home as well as explore sections.\nchallenges we ran into\nthe hackathon has been a unique journey personally for us, given our full time jobs.\napart from that, these are some specific challenges we ran into:\nhandling asynchronous and continuous stream of the file uploads was trickier as well. as we wanted it to be as real time as possible we did not go with cron jobs for processing the images. instead it was a challenging problem of micro services to solve. thats why we brought in the rabbitmq as message broker and pushed all the information about the uploaded files to the worker. this made it asynchronous but yet ensured its near real time processing for all the photos.\nworker components were the most fun and challenging out of all to work on. given the complexity of the processing - it was very hard to perform reverse geo-coding at first - then we solved it using: open street maps nominatim. secondly, things detection was the toughest as it can lead to incorrect results, we needed to set up filters for identifying classes and categories as well. at last, for the people detection and recognition, we just spent last few weeks on identifying the clustering for the faces in the photos. we finally decided to choose spotify annoy and experimented with lot of distances for the clustering. however, not being 100% accurate, it still works like a charm.\nbuilding and spinning a graphql server which can host images uploaded by the user was one of the first in line while developing this project. we tried and experimented with several techniques to store the uploaded file in disk, but it proved to be incorrect. thats we ended up using seaweedfs which a popular open source cdn server. once it was up, we could upload as many photos as we want without worrying about the disk space for the api server.\naccomplishments that we're proud of\nteam\nwe were chasing a fun engineering & machine learning problem and being able to solve it by delivering a working solution is a moment of pride for us. we have learnt so much in last few months, which we couldn't even in a year. while working on the project, we were so involved that we used to get so many feature ideas and we had to spend time in prioritising them. while during this pandemic, without the great communication, prioritization, and scheduling we couldn't have achieved this and we are super proud of this!\nomkar\nhaving successfully carved all of the core components of the project in a relatively short period of time, this has to be my most memorable and proud moment of 2021! i am super proud of designing this architecture which competes with several existing open source solutions. having delivered the worker & ml which does the magic by solving several ml and engineering problems, those 2 are definitely my favourite pieces of the software i have developed in recent times.\nakshay\nbuilding the front-end in such a short period of time, which was supported by great back-end services. it was a great experience working on the iris front-end. i got to learn many things along the way like page optimization, handling file uploads, etc. i am really proud of what we have accomplished, this is one of the best projects i've worked on in 2021.\nwhat we learned\nomkar learned:\npytorch model deployment with torchserve\ncustomized models and handlers\ncontainer scaling for torchserve and metrics\npython multithreading for building microservices\nakshay learned:\nuploading files with graphql\noptimizing page to load large list of images\nworking with containerized environment\nwhat's next for iris\nwe are planning to continue this project and ship out of scope hackathon features like albums, sharing, image filters, editing image metadata.\nwe will be opening up for funding and financial backing from vcs to continue this project and support those who want to use it.", "sortedWord": "None", "removed": "Nan", "score": 5, "comments": 0, "media": null, "medialink": null, "identifyer": 59504998}, {"Unnamed: 0": 5158, "autor": "Why is my plant dying?", "date": null, "content": "Inspiration\nI was inspired by my godmom, who's a busy social worker and would very much like for her plants to stop dying without her knowing why. I've been working a greenhouse since this summer and have gained some insights to some of the more common plants people get here in Maryland. My dad and I have also been sharing practical tips (learned from work, classes, and trial and error) with each other and family members.\nWhat it does\nThe app will explain how to solve the most common problems with the plants and will also include guides explaining why this problem has occurred, how to care for the plants so that the problem will not re-occur, and assist in identifying the name of the plant once the tag is long gone. The last point was inspired by my own mom, who can never remember what the plants in the garden are.\nHow we built it\nHonestly, I came up with the idea at 1 pm on Saturday and have been working on it myself. I've used streamlit because I watched the workshop on it and I thought it could have some cool functionality with data science projects I'm interested in. So, I thought 'why not test it out and challenge myself?'\nChallenges we ran into\nAfter a workshop on it, I've been utilizing streamlit to make an app. Additionally, I am working by myself during the second hackathon I've ever gone to, and this first hackathon I've worked on a project for.\nAccomplishments that we're proud of\nI'm proud that I've gotten to work on my first hackathon project and that I seem to be understanding streamlit.\nWhat we learned\nI learned that talking through the idea with one of the inspirations of my app (in this case, my mom concerning the identification portion and how the problems with the plant should be phrased for better clarity) was immensely helpful. From the discord for the event, I also learned that I could easily just record my screen in zoom for the demo as I wasn't sure how to make the demo video.\nWhat's next for Why is my plant dying?\nI'm not entirely sure. It's midterm week so it will be awhile until I would have free time outside of the hackathon to work on the app. I would like to either fully develop this idea to be useful, or to use this as a base for a future project. The immediate next steps would definitely be to finish putting in all the planned features and finishing the basic content.", "link": "https://devpost.com/software/why-is-my-plant-dying", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "inspiration\ni was inspired by my godmom, who's a busy social worker and would very much like for her plants to stop dying without her knowing why. i've been working a greenhouse since this summer and have gained some insights to some of the more common plants people get here in maryland. my dad and i have also been sharing practical tips (learned from work, classes, and trial and error) with each other and family members.\nwhat it does\nthe app will explain how to solve the most common problems with the plants and will also include guides explaining why this problem has occurred, how to care for the plants so that the problem will not re-occur, and assist in identifying the name of the plant once the tag is long gone. the last point was inspired by my own mom, who can never remember what the plants in the -----> garden !!!  are.\nhow we built it\nhonestly, i came up with the idea at 1 pm on saturday and have been working on it myself. i've used streamlit because i watched the workshop on it and i thought it could have some cool functionality with data science projects i'm interested in. so, i thought 'why not test it out and challenge myself?'\nchallenges we ran into\nafter a workshop on it, i've been utilizing streamlit to make an app. additionally, i am working by myself during the second hackathon i've ever gone to, and this first hackathon i've worked on a project for.\naccomplishments that we're proud of\ni'm proud that i've gotten to work on my first hackathon project and that i seem to be understanding streamlit.\nwhat we learned\ni learned that talking through the idea with one of the inspirations of my app (in this case, my mom concerning the identification portion and how the problems with the plant should be phrased for better clarity) was immensely helpful. from the discord for the event, i also learned that i could easily just record my screen in zoom for the demo as i wasn't sure how to make the demo video.\nwhat's next for why is my plant dying?\ni'm not entirely sure. it's midterm week so it will be awhile until i would have free time outside of the hackathon to work on the app. i would like to either fully develop this idea to be useful, or to use this as a base for a future project. the immediate next steps would definitely be to finish putting in all the planned features and finishing the basic content.", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59505158}, {"Unnamed: 0": 5780, "autor": "HackDuke 2021 Mindfulness App", "date": null, "content": "Inspiration\nThis project was created with the Health track in mind. We were inspired to build this web app when thinking of what aspects of our health we would like to improve. As college students, it is hard to maintain wellbeing while focusing on schoolwork. Thus, we created the Mindful Garden to encourage meditation, mood journaling, mindful breathing, and regular sleep schedule to promote and maintain mental health and wellbeing.\nWhat it does\nOur web app has several different tabs corresponding to meditation, mood journaling, mindful breathing, and sleep schedule. In the meditation tab, there are various meditation and yoga videos for users to watch. In the journaling tab, users receive a question prompt based upon the current emotion they are feeling. In the breathing tab, users can follow a diagram that instructs them to mindfully breathe. In the sleep tab, users can enter in what time they slept and woke up, see if they got enough sleep, and the impacts of how much sleep they got.\nHow we built it\nWe built the website using React JS, HTML, and CSS in order to easily streamline porting the website to a localhost and formatting with ease.\nChallenges we ran into\nSome challenges we ran into were pushing and pulling from Git to collaborate on the work as we encountered numerous merge conflicts and missing package errors. While this took a while to solve, we learned more about how to use a version control system.\nAccomplishments that we're proud of\nWe are extremely proud of the website we developed with little to no React JS experience, yet the UI looks very clean and intuitive with a simple design and usage.\nWhat we learned\nWe learned a lot more about front-end and web app development, especially using the React JS framework.\nWhat's next for HackDuke 2021 Mindfulness App\nWe would like to add more mindfulness features, incorporate the plant/garden theme more, and make the site more interactive by implementing a free drawing canvas so people can scribble their worries away.", "link": "https://devpost.com/software/hackduke-2021-mindfulness-app", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "inspiration\nthis project was created with the health track in mind. we were inspired to build this web app when thinking of what aspects of our health we would like to improve. as college students, it is hard to maintain wellbeing while focusing on schoolwork. thus, we created the mindful -----> garden !!!  to encourage meditation, mood journaling, mindful breathing, and regular sleep schedule to promote and maintain mental health and wellbeing.\nwhat it does\nour web app has several different tabs corresponding to meditation, mood journaling, mindful breathing, and sleep schedule. in the meditation tab, there are various meditation and yoga videos for users to watch. in the journaling tab, users receive a question prompt based upon the current emotion they are feeling. in the breathing tab, users can follow a diagram that instructs them to mindfully breathe. in the sleep tab, users can enter in what time they slept and woke up, see if they got enough sleep, and the impacts of how much sleep they got.\nhow we built it\nwe built the website using react js, html, and css in order to easily streamline porting the website to a localhost and formatting with ease.\nchallenges we ran into\nsome challenges we ran into were pushing and pulling from git to collaborate on the work as we encountered numerous merge conflicts and missing package errors. while this took a while to solve, we learned more about how to use a version control system.\naccomplishments that we're proud of\nwe are extremely proud of the website we developed with little to no react js experience, yet the ui looks very clean and intuitive with a simple design and usage.\nwhat we learned\nwe learned a lot more about front-end and web app development, especially using the react js framework.\nwhat's next for hackduke 2021 mindfulness app\nwe would like to add more mindfulness features, incorporate the plant/garden theme more, and make the site more interactive by implementing a free drawing canvas so people can scribble their worries away.", "sortedWord": "None", "removed": "Nan", "score": 6, "comments": 1, "media": null, "medialink": null, "identifyer": 59505780}, {"Unnamed: 0": 5857, "autor": "Agri-pal", "date": null, "content": "Inspiration\nIndia's agricultural lands are either being degraded by urbanization. If this continues, where can we go finally for our food? The solution is within us. It is we who need to produce our own food if this situation continues. Our terrace gardens and small garden plots are gonna feed us in the future by growing high yield vegetables in minimal area. Rodents and bug attacks on plants and Poultry have considerably affected the terrace gardeners, small-plot farmers, and poultry farmers throughout India. Major agents responsible for these critical damages have been rodents and cats and sometimes even snakes in Poultry. Security personal to watch over the plants is both tedious, and expensive. The need to monitor and proper reaction mechanisms in Animal and burglary detections are very essential. Participation and Involvement of Youth are not considered high since most of them are not used to farming and are mostly employed in other sectors like IT. Providing an interactive Aid to guide will ensure more involvement of Youth. We were able to make the model quickly. The easy to use device with a simple guide allows the gardners and children in Cities to nurture their Agriculture skills with out any hassle. Making a business model or the way we made strategies so that it could hit the markets were only a bit difficult for us and that's what we learnt a lot in this process also. Making it a successful product in the market is our final aim.\nWhat it does\nAgri-Pal is the simplest solution to aid a farmer in Agriculture - Terrace and Poultry Farming. Agri-Pal is a simple Plug n Play device ensuring Disease Detection and Animal Breach Detection.\nAgri-Pal ensures more productivity with less labour.\nNo additional money needs to be spent on security. The Animal Monitoring System will ensure detection and actions for both animal and burglary breach.\nEnsures Quick and Precise Disease detection ensuring the safety of neighbouring plants and maintaining minimal losses\nThe App provides Easy-to-Follow instructions at all times i.e. any person irrespective of experience can participate in agriculture\nThe Chatbot provides friendly clarifications and instruction at all times.\nAgri-Pal is Waterproof and rodent proof\nHow we built it\nThe Agri-Pal is centred on a Raspberry Pi which has a rotatory camera module mounted on the apex. An OpenCV, Keras and tensorflow based model is programmed to the Jetson nano to analyse and interpret the crops visually and to support the user. Another OpenCV based model is programmed to ensure the crops and poultry are safe from wild animals. An IoT based Android app along with a friendly chatbot, programmed in a diversity of Indian languages, is designed to notify the user of any important and critical information and the instructions that they have to follow to overcome those.\nChallenges we ran into\nAs the project is completely dependent on the user experience and our target users are Farmers and Poultry Owners, we weren't able to find any locals to test our device out (along with the pandemic situation hurdling our travel). But later on we were able to find a small scale Poultry rearing farm to collect some test samples.", "link": "https://devpost.com/software/agri-pal-ngx73h", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "gardens", "selectorShort": "garden", "MarkedSent": "inspiration\nindia's agricultural lands are either being degraded by urbanization. if this continues, where can we go finally for our food? the solution is within us. it is we who need to produce our own food if this situation continues. our terrace -----> gardens !!!  and small garden plots are gonna feed us in the future by growing high yield vegetables in minimal area. rodents and bug attacks on plants and poultry have considerably affected the terrace gardeners, small-plot farmers, and poultry farmers throughout india. major agents responsible for these critical damages have been rodents and cats and sometimes even snakes in poultry. security personal to watch over the plants is both tedious, and expensive. the need to monitor and proper reaction mechanisms in animal and burglary detections are very essential. participation and involvement of youth are not considered high since most of them are not used to farming and are mostly employed in other sectors like it. providing an interactive aid to guide will ensure more involvement of youth. we were able to make the model quickly. the easy to use device with a simple guide allows the gardners and children in cities to nurture their agriculture skills with out any hassle. making a business model or the way we made strategies so that it could hit the markets were only a bit difficult for us and that's what we learnt a lot in this process also. making it a successful product in the market is our final aim.\nwhat it does\nagri-pal is the simplest solution to aid a farmer in agriculture - terrace and poultry farming. agri-pal is a simple plug n play device ensuring disease detection and animal breach detection.\nagri-pal ensures more productivity with less labour.\nno additional money needs to be spent on security. the animal monitoring system will ensure detection and actions for both animal and burglary breach.\nensures quick and precise disease detection ensuring the safety of neighbouring plants and maintaining minimal losses\nthe app provides easy-to-follow instructions at all times i.e. any person irrespective of experience can participate in agriculture\nthe chatbot provides friendly clarifications and instruction at all times.\nagri-pal is waterproof and rodent proof\nhow we built it\nthe agri-pal is centred on a raspberry pi which has a rotatory camera module mounted on the apex. an opencv, keras and tensorflow based model is programmed to the jetson nano to analyse and interpret the crops visually and to support the user. another opencv based model is programmed to ensure the crops and poultry are safe from wild animals. an iot based android app along with a friendly chatbot, programmed in a diversity of indian languages, is designed to notify the user of any important and critical information and the instructions that they have to follow to overcome those.\nchallenges we ran into\nas the project is completely dependent on the user experience and our target users are farmers and poultry owners, we weren't able to find any locals to test our device out (along with the pandemic situation hurdling our travel). but later on we were able to find a small scale poultry rearing farm to collect some test samples.", "sortedWord": "None", "removed": "Nan", "score": 2, "comments": 0, "media": null, "medialink": null, "identifyer": 59505857}, {"Unnamed: 0": 6270, "autor": "Greenspace", "date": null, "content": "GreenSpace\nWith a feed page to connect users, a virtual garden to track users' plants, and an automatic donation that matches plant for plant, Greenspace is committed to helping plants and the plant community thrive. We developed our prototype using Figma. First creating wireframes and working through a possible user journey, we developed this prototype with the user in mind.", "link": "https://devpost.com/software/greenspace-gahvo2", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "greenspace\nwith a feed page to connect users, a virtual -----> garden !!!  to track users' plants, and an automatic donation that matches plant for plant, greenspace is committed to helping plants and the plant community thrive. we developed our prototype using figma. first creating wireframes and working through a possible user journey, we developed this prototype with the user in mind.", "sortedWord": "None", "removed": "Nan", "score": 4, "comments": 0, "media": null, "medialink": null, "identifyer": 59506270}, {"Unnamed: 0": 7306, "autor": "radSeed", "date": null, "content": "Inspiration\ud83c\udf31\nIn the 1960s and \u201970s, when New York\ud83c\udfd9 suffered from a sharp economic decline, buildings were abandoned or burned down, particularly in the city\u2019s lower-income neighborhoods due to mass disinvestment. However, Hattie Carthan started grassroots efforts to change her environment. What started with four newly planted trees\ud83c\udf33 in her neighborhood turned into 1,500\ud83c\udf33\ud83c\udf33\ud83c\udf33. Along with that, another change-maker Liz Christy developed the \u201cseed bomb\u201d\ud83c\udf31 *to push garden efforts in the lower east side. Due to these radical farmers\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf3e\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf3e, New York has over 500 gardens today. *We cannot overlook their impact.\nToday, due to continued redlining, redistricting, white flight, and a growing amount of city-goers, poorer areas of the city are still left with little funding for greenery. Not only will parts of the city suffer aesthetically, but they will suffer from worse air quality and CO2 emissions impeding health. Inspired by the pioneers of the past, our web app aims to push the efforts of seed bombing, a uniquely NYC effort.\nWhat it does\ud83c\udf31\nOur platform aims to educate, advocate, and involved users in the world of seed bombing.\nOur home page pays homage to the pioneering radical seed bombers as well as gives a history of seed bombs in the US. The next page shows the users step by step how to make their own seed bomb. Next, our get involved page provides users with resources to learn more!! Lastly, our seed map page provides 2 maps. One map shows global resources where users can buy their own seed bombs. Our second map is a personalized map where users can pinpoint areas in their community they would like to deem \"seed-bomb-worthy\". The map also provides recommended areas in need of seed bombs based on redlining, gentrification, and white flight.\nHow we built it\ud83c\udf31\nOur platform was made with\nFigma\nReplit\nJavascript\nCSS\nHTML\nGoogle Maps Javascript API\nmultiple GeoJSON datasets\nand love\ud83d\udc50\u2764\ufe0f\nChallenges we ran into\ud83c\udf31\nWE ARE NEW TO APIS!!\ud83d\udc94 Trying to import and manipulate the Javascript Google Maps API was a challenge. However, eventually, we were able to learn about the feature and add some interactive elements. Also, because our Google Maps is for \"developmental use only\"\ud83d\ude43 our GeoJSON data layer come with NO COLOR\ud83e\udd72. In the future, we hope that we can figure out how to get rid of this restriction.\nAlso there are very few GeoJSON datasets on seed bombing, which is expected for such a niche subject. BUT there are few GeoJSON datasets on pressing issues such as redlining, gentrification, and other issues. We found this shocking and hope that there is more representation in the future.\nAccomplishments that we're proud of\ud83c\udf31\nWe are SO SO SO proud of our website as a whole\ud83e\udd73. We are proud of the design which is both minimal and sophisticated. The line art is amazing and the color palette too.\nFor the APIs, We are also proud of learning so much about the Google Maps Javascript API and interpreting GeoJSON datasets in such little time!! We are proud to make these features interactive and personal.\nEveryone contributed so much\ud83d\udc9a\nWhat we learned\ud83c\udf31\nWe learned a lot about NYC's hidden history of seed-bombing! We were surprised that these POC women did not have their spots in our history books. Their monumental efforts and impacts on NYC should be known and heard.\nTechnically, we learned so much about APIs and further our knowledge of web development!\ud83d\udcbb\nWhat's next for radSeed\ud83c\udf31\nWe hope to make our Google Maps feature more functional. Allowing users to put custom icons and content with each of their posts. It would be amazing if users could fill out a form that can be submitted in a database which will then be displayed on the map. We also want to include more inclusive GeoJSON datasets that would represent more people and advocate for their needs. We would also like to host this website on a server such as netlify in the future so that our GeoJSON datasets can actually have color\ud83c\udf08. Overall, we are so proud of what we got done.\u2764\ufe0f", "link": "https://devpost.com/software/radseed", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "inspiration\ud83c\udf31\nin the 1960s and \u201970s, when new york\ud83c\udfd9 suffered from a sharp economic decline, buildings were abandoned or burned down, particularly in the city\u2019s lower-income neighborhoods due to mass disinvestment. however, hattie carthan started grassroots efforts to change her environment. what started with four newly planted trees\ud83c\udf33 in her neighborhood turned into 1,500\ud83c\udf33\ud83c\udf33\ud83c\udf33. along with that, another change-maker liz christy developed the \u201cseed bomb\u201d\ud83c\udf31 *to push -----> garden !!!  efforts in the lower east side. due to these radical farmers\ud83d\udc69\ud83c\udffe\u200d\ud83c\udf3e\ud83d\udc69\ud83c\udfff\u200d\ud83c\udf3e, new york has over 500 gardens today. *we cannot overlook their impact.\ntoday, due to continued redlining, redistricting, white flight, and a growing amount of city-goers, poorer areas of the city are still left with little funding for greenery. not only will parts of the city suffer aesthetically, but they will suffer from worse air quality and co2 emissions impeding health. inspired by the pioneers of the past, our web app aims to push the efforts of seed bombing, a uniquely nyc effort.\nwhat it does\ud83c\udf31\nour platform aims to educate, advocate, and involved users in the world of seed bombing.\nour home page pays homage to the pioneering radical seed bombers as well as gives a history of seed bombs in the us. the next page shows the users step by step how to make their own seed bomb. next, our get involved page provides users with resources to learn more!! lastly, our seed map page provides 2 maps. one map shows global resources where users can buy their own seed bombs. our second map is a personalized map where users can pinpoint areas in their community they would like to deem \"seed-bomb-worthy\". the map also provides recommended areas in need of seed bombs based on redlining, gentrification, and white flight.\nhow we built it\ud83c\udf31\nour platform was made with\nfigma\nreplit\njavascript\ncss\nhtml\ngoogle maps javascript api\nmultiple geojson datasets\nand love\ud83d\udc50\u2764\ufe0f\nchallenges we ran into\ud83c\udf31\nwe are new to apis!!\ud83d\udc94 trying to import and manipulate the javascript google maps api was a challenge. however, eventually, we were able to learn about the feature and add some interactive elements. also, because our google maps is for \"developmental use only\"\ud83d\ude43 our geojson data layer come with no color\ud83e\udd72. in the future, we hope that we can figure out how to get rid of this restriction.\nalso there are very few geojson datasets on seed bombing, which is expected for such a niche subject. but there are few geojson datasets on pressing issues such as redlining, gentrification, and other issues. we found this shocking and hope that there is more representation in the future.\naccomplishments that we're proud of\ud83c\udf31\nwe are so so so proud of our website as a whole\ud83e\udd73. we are proud of the design which is both minimal and sophisticated. the line art is amazing and the color palette too.\nfor the apis, we are also proud of learning so much about the google maps javascript api and interpreting geojson datasets in such little time!! we are proud to make these features interactive and personal.\neveryone contributed so much\ud83d\udc9a\nwhat we learned\ud83c\udf31\nwe learned a lot about nyc's hidden history of seed-bombing! we were surprised that these poc women did not have their spots in our history books. their monumental efforts and impacts on nyc should be known and heard.\ntechnically, we learned so much about apis and further our knowledge of web development!\ud83d\udcbb\nwhat's next for radseed\ud83c\udf31\nwe hope to make our google maps feature more functional. allowing users to put custom icons and content with each of their posts. it would be amazing if users could fill out a form that can be submitted in a database which will then be displayed on the map. we also want to include more inclusive geojson datasets that would represent more people and advocate for their needs. we would also like to host this website on a server such as netlify in the future so that our geojson datasets can actually have color\ud83c\udf08. overall, we are so proud of what we got done.\u2764\ufe0f", "sortedWord": "None", "removed": "Nan", "score": 6, "comments": 2, "media": null, "medialink": null, "identifyer": 59507306}, {"Unnamed: 0": 8185, "autor": "Live Ducki, Live!", "date": null, "content": "Problem\nThe problem space our group chose to follow was: 1. Population Growth: 120,000 in 20 years. Population growth causes stress on water supply through development, agriculture, business and basic needs.\n2. Urban/Suburban linear water waste. Less green spaces and more impermeable surfaces means that rain fall isn't being optimised in urban areas. This can also be the cause of flooding and damage to subterranean infrastructure.\n3. Separation from contextual information, practical (on-site) education and water data. COVID has not only restricted people from learning and understanding changes to the environment, but it was also eclipsed awareness in the media.\n4. Decentralised communities have less favouritism of their water needs and are enforced stricter, more frequent water policy. Every largely-populated city is guilty of this, but inland towns that depend on the same water supply as Newcastle are given the brunt of water restrictions because of their lower rainfall and the construction/maintenance of water transporting infrastructure.\n5. Normalising a 'water wise' attitude. Understanding that a holistic approach to water management doesn't mean banishing water use, but rather implement and retrofit interventions that optimise the use of water. While also normalising a positive attitude towards saving water.\nThe User\nWith out limited time and access to interviews we wanted our target users to be elementary students, with the prospect of including high school students in early updates. Our reason for this is:\n1. They're impressionable Younger people are more likely to be influenced by an interactive design because of their curiosity and interests in progressing in an app.\n2. Schools are a community hub. Students not only interact with their friends, but their school has a common connection to many people from the community such as teachers, parents, staff, guests, neighbours and even local councils. The more effective a targeted product is at helping students, the more potential it has to reach a larger audience.\nSolution\nBy gamifying the action and cause of wasting water, we are able to place the user in the context of how their environment is affected by their interaction with water.\nDucki is the cause and solution to water waste hazards around the house. The strategy behind using Ducki was to personify the user into a cute character they need to take care of, like a Tamagochi.\nDepending on Ducki\u2019s reaction to wasting water, the reservoir and environment changes.\nThe reservoir also reacts to seasonal variables like storms and drought.\nWe also wanted to speculate how this game can be updated to include more users, a larger scale, and systems to improve water optimisation; therefore making Ducki the problem, solution and action towards water-responsibility.\nScale: situations such as the garden, neighbourhood, city and agriculture all pose their own water interventions and variables. How will the user not only prevent water waste but improve our water use? Scales also imply a higher level of difficulty as different environments have different needs, and pose a higher risk of water waste.\nSystems: incorporating water-wise features like irrigation, xeriscaping, permaculture and sand-bed filtration includes the user in the construction methods needed to improve their water optimisation. These systems are a way for users to strategise and gain rewards in the game.\nInspiration & Precedents\nWe took inspiration from the viral Melbourne-based marketing campaign 'Dumb Ways to Die' which used gamification to help teach kids about the importance of train safety. This campaign saw a 26% reduction in train accidents. We felt like we could re-interpret this game structure into the issue of water security. This began the inception of our design when we wanted to create a cute character thats involved in live-or-die situations.\nWe're also inspired by a podcast where Tahlia Rossi talks to host Jo Taranto about a smart data intervention rolled out with the help of City of Gold Coast. The intervention was aimed at teaching schools about how to access, analyse and discover problems in their water consumption. Prior to this strategy, users would have to use an account to log in and pay the bill - Rossi saw that there was an opportunity to connect the user to detailed information through a web-based portal connected to installed outpost loggers that read the data. This intervention helped us understand the importance of a 'bottom-up', holistic approach to water-responsibility in schools; and how students, teachers and parents can engage with these systems in order to appropriate them in their daily life. [https://omny.fm/shows/australianwater/tahlia-rossi-on-water-conservation-in-schools]\nThe bottom-up, holistic approach is also a running theme in lectures taught by Geoff Lawton, who is an education leader in the study of permaculture, and has proven that permaculture-based planting/land design through a bottom-up community approach can reforest some of the most arid places on-earth. [https://vimeo.com/7658282]\nStoryboard 01: Domestic (Early Prototype)\nDucki is in their house, surrounded by water-waste hazards that occur in different rooms (such as the kitchen or bathroom).\nDucki has a matter of seconds to resolve the water waste hazard.\nThe time it takes to resolve the hazard reflects the amount of water in the reservoir. If the Ducki is quick, then the reservoir remains full.\nThe game also becomes difficult during seasons of drought, or when Ducki needs to wash and drink water.\nIf Ducki is continuously too slow at preventing water waste, the reservoir empties and causes the environment to become dry and malnourished.\nan empty reservoir causes Ducki to die, and the user has to start again.\nStoryboard 02: Garden\nDucki is in the garden, where water-waste hazards also occur.\nDucki must resolve water hazards while sparingly watering its plants and preventing them from dying.\nDucki has access to tools and materials such as irrigation, mulch, a shovel and drought-hardy plants.\nDucki can also install a water tank, alleviating pressure from the reservoir.\nDucki also needs to consider when to water the garden. If Ducki waters it's garden during a hot day, then the water won't be as effective on the garden as watering during dusk.\nHow we built it\nWe built this app using React, Node.js, NPM and CSS. First we worked through the basic interactions that the user would experience upon arriving in our app. During the morning, the devs created the bare functionality without any specific understanding of how the game would look, while the UI/UX team worked to create the story and interactive experiences.\nChallenges we ran into\nOur biggest challenge was trying to gamify a concept without cheapening or be distracting towards a very serious topic. We were concerned that a game centred around water could detach players from the real-world issues that they face. However we were also faced with a balancing issue that if the game became too educational or wasn't unique or captivating enough, users wouldn't be motivated to play it.\nThis lead to our idea of Ducki being like a digital pet. Similar to the success of 'life simulation' games like The Sims, we needed to design Ducki in a way where users become attached to this pet, and care whether it thrives or dies.\nAnother challenge was to place the game in the context of Newcastle, or else this would be just a game with a fabricated environment thats disconnected from local water issues. One of the solutions was to incorporate a geo-location feature like that of the 'Poke-stops' and gyms used in Pokemon Go. This way users can place Ducki in Newcastle and interact with water issues in their yard or neighbourhood, there could even be a feature where users can add friends and solve water issues together.\nThe final challenge is, of course, the need for user research and usability testing. In a Hackathon with a finite amount of time, it's difficult find users to interview and test the product. So the next step would be to continue onto a mid-fidelity product that can be tested on our user. Can Ducki both entertain and teach users how to be water wise?\nAccomplishments that we're proud of\nWe are proud of our ability to create the foundation of a product that can connect the user to water issues in an impactful way. By having to take care of Ducki, we hope that they learn that we all are both the problem and the solution to water security.\nWe're also proud of how well we were able to work within our limits. None of us are engineers or agriculturalists, so we feel that our project was the strongest representation of our combined skills.\nWhat we learned\nThis is all of our first Hackathon, and we came into this challenge not knowing what to expect. As a team we've learned to ideate and move quickly, to not become too attached to any particular direction, and that the best concepts come from our diverse knowledge base and skillsets.\nIn our next Hackathon we will definitely research and synthesise possible design avenues before the Hackathon starts. None of us had an idea going into this, and I think that hindered our chances creating a more realised product. Makes for a juicy case study though...", "link": "https://devpost.com/software/live-ducki-live", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "garden", "selectorShort": "garden", "MarkedSent": "problem\nthe problem space our group chose to follow was: 1. population growth: 120,000 in 20 years. population growth causes stress on water supply through development, agriculture, business and basic needs.\n2. urban/suburban linear water waste. less green spaces and more impermeable surfaces means that rain fall isn't being optimised in urban areas. this can also be the cause of flooding and damage to subterranean infrastructure.\n3. separation from contextual information, practical (on-site) education and water data. covid has not only restricted people from learning and understanding changes to the environment, but it was also eclipsed awareness in the media.\n4. decentralised communities have less favouritism of their water needs and are enforced stricter, more frequent water policy. every largely-populated city is guilty of this, but inland towns that depend on the same water supply as newcastle are given the brunt of water restrictions because of their lower rainfall and the construction/maintenance of water transporting infrastructure.\n5. normalising a 'water wise' attitude. understanding that a holistic approach to water management doesn't mean banishing water use, but rather implement and retrofit interventions that optimise the use of water. while also normalising a positive attitude towards saving water.\nthe user\nwith out limited time and access to interviews we wanted our target users to be elementary students, with the prospect of including high school students in early updates. our reason for this is:\n1. they're impressionable younger people are more likely to be influenced by an interactive design because of their curiosity and interests in progressing in an app.\n2. schools are a community hub. students not only interact with their friends, but their school has a common connection to many people from the community such as teachers, parents, staff, guests, neighbours and even local councils. the more effective a targeted product is at helping students, the more potential it has to reach a larger audience.\nsolution\nby gamifying the action and cause of wasting water, we are able to place the user in the context of how their environment is affected by their interaction with water.\nducki is the cause and solution to water waste hazards around the house. the strategy behind using ducki was to personify the user into a cute character they need to take care of, like a tamagochi.\ndepending on ducki\u2019s reaction to wasting water, the reservoir and environment changes.\nthe reservoir also reacts to seasonal variables like storms and drought.\nwe also wanted to speculate how this game can be updated to include more users, a larger scale, and systems to improve water optimisation; therefore making ducki the problem, solution and action towards water-responsibility.\nscale: situations such as the -----> garden !!! , neighbourhood, city and agriculture all pose their own water interventions and variables. how will the user not only prevent water waste but improve our water use? scales also imply a higher level of difficulty as different environments have different needs, and pose a higher risk of water waste.\nsystems: incorporating water-wise features like irrigation, xeriscaping, permaculture and sand-bed filtration includes the user in the construction methods needed to improve their water optimisation. these systems are a way for users to strategise and gain rewards in the game.\ninspiration & precedents\nwe took inspiration from the viral melbourne-based marketing campaign 'dumb ways to die' which used gamification to help teach kids about the importance of train safety. this campaign saw a 26% reduction in train accidents. we felt like we could re-interpret this game structure into the issue of water security. this began the inception of our design when we wanted to create a cute character thats involved in live-or-die situations.\nwe're also inspired by a podcast where tahlia rossi talks to host jo taranto about a smart data intervention rolled out with the help of city of gold coast. the intervention was aimed at teaching schools about how to access, analyse and discover problems in their water consumption. prior to this strategy, users would have to use an account to log in and pay the bill - rossi saw that there was an opportunity to connect the user to detailed information through a web-based portal connected to installed outpost loggers that read the data. this intervention helped us understand the importance of a 'bottom-up', holistic approach to water-responsibility in schools; and how students, teachers and parents can engage with these systems in order to appropriate them in their daily life. [https://omny.fm/shows/australianwater/tahlia-rossi-on-water-conservation-in-schools]\nthe bottom-up, holistic approach is also a running theme in lectures taught by geoff lawton, who is an education leader in the study of permaculture, and has proven that permaculture-based planting/land design through a bottom-up community approach can reforest some of the most arid places on-earth. [https://vimeo.com/7658282]\nstoryboard 01: domestic (early prototype)\nducki is in their house, surrounded by water-waste hazards that occur in different rooms (such as the kitchen or bathroom).\nducki has a matter of seconds to resolve the water waste hazard.\nthe time it takes to resolve the hazard reflects the amount of water in the reservoir. if the ducki is quick, then the reservoir remains full.\nthe game also becomes difficult during seasons of drought, or when ducki needs to wash and drink water.\nif ducki is continuously too slow at preventing water waste, the reservoir empties and causes the environment to become dry and malnourished.\nan empty reservoir causes ducki to die, and the user has to start again.\nstoryboard 02: garden\nducki is in the garden, where water-waste hazards also occur.\nducki must resolve water hazards while sparingly watering its plants and preventing them from dying.\nducki has access to tools and materials such as irrigation, mulch, a shovel and drought-hardy plants.\nducki can also install a water tank, alleviating pressure from the reservoir.\nducki also needs to consider when to water the garden. if ducki waters it's garden during a hot day, then the water won't be as effective on the garden as watering during dusk.\nhow we built it\nwe built this app using react, node.js, npm and css. first we worked through the basic interactions that the user would experience upon arriving in our app. during the morning, the devs created the bare functionality without any specific understanding of how the game would look, while the ui/ux team worked to create the story and interactive experiences.\nchallenges we ran into\nour biggest challenge was trying to gamify a concept without cheapening or be distracting towards a very serious topic. we were concerned that a game centred around water could detach players from the real-world issues that they face. however we were also faced with a balancing issue that if the game became too educational or wasn't unique or captivating enough, users wouldn't be motivated to play it.\nthis lead to our idea of ducki being like a digital pet. similar to the success of 'life simulation' games like the sims, we needed to design ducki in a way where users become attached to this pet, and care whether it thrives or dies.\nanother challenge was to place the game in the context of newcastle, or else this would be just a game with a fabricated environment thats disconnected from local water issues. one of the solutions was to incorporate a geo-location feature like that of the 'poke-stops' and gyms used in pokemon go. this way users can place ducki in newcastle and interact with water issues in their yard or neighbourhood, there could even be a feature where users can add friends and solve water issues together.\nthe final challenge is, of course, the need for user research and usability testing. in a hackathon with a finite amount of time, it's difficult find users to interview and test the product. so the next step would be to continue onto a mid-fidelity product that can be tested on our user. can ducki both entertain and teach users how to be water wise?\naccomplishments that we're proud of\nwe are proud of our ability to create the foundation of a product that can connect the user to water issues in an impactful way. by having to take care of ducki, we hope that they learn that we all are both the problem and the solution to water security.\nwe're also proud of how well we were able to work within our limits. none of us are engineers or agriculturalists, so we feel that our project was the strongest representation of our combined skills.\nwhat we learned\nthis is all of our first hackathon, and we came into this challenge not knowing what to expect. as a team we've learned to ideate and move quickly, to not become too attached to any particular direction, and that the best concepts come from our diverse knowledge base and skillsets.\nin our next hackathon we will definitely research and synthesise possible design avenues before the hackathon starts. none of us had an idea going into this, and i think that hindered our chances creating a more realised product. makes for a juicy case study though...", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59508185}, {"Unnamed: 0": 8923, "autor": "The OASIS & Our World", "date": null, "content": "Inspiration\nWe believe that the OASIS API should be baked into the core of the new internet (Web 3.0) that we are co-creating and will allow Everything to talk to Everything else and will act as the world's universal API/protocol.\nRather than competing, our goal is to integrate and grow along with the entire blockchain community. As Aristotle said, \"The whole is greater than the sum of its parts\". Together let's make WEB3.0 even more powerful and simple for everyone.\nWhat it does\nThe OASIS API is a global universal API that aims to connect everything to everything to eliminate walled gardens/silos. There are a number of open protocols/platforms/networks (such as Gab, Mastodon, Diaspora, WebFinger, SOLID, Holochain, CEPTR Pluggable Protocol, Ethereum, Fediverse, ActivityPub, XMPP & more!) that the OASIS API will support. The majority of these are aimed at building a truly decentralised distributed internet (Web 3.0) and this is also the aim of the OASIS API.\nIt also load balances and has fail over for all providers so eventually over the entire internet! So, it will automatically find the fastest node to use in a person\u2019s local area, regardless of what network/platform it is on. This will give the FASTEST possible performance! Plus, if any of the networks went down such as Telos/EOSIO then it will automatically switch to the next fastest one in that user\u2019s local area. With unity consciousness the possibilities are limitless!\nAlso, just like a team of people, different tech has various strengths and weaknesses, by integrating them together so they work as one unified co-ordinated team, you eliminate all weaknesses and then have the best of all worlds, the whole is greater than the sum of the parts.\nIt will also allow for a SSO (Single Sign On) across all apps/websites/services/games across all devices and platforms for your OASIS Avatar where you have FULL control of ALL of your data right down to the individual field level and whether each field is Replicated/Shared (ReadOnly) or Shared (ReadWrite). You no longer need to remember multiple login details, you can have just one login (avatar), that follows you everywhere and you have FULL control of. You choose where your data is stored and who has access to it.\nThe OASIS API is very intuitive and easy to use hiding away the complexities of the lower-level networks/protocols/platforms/API's but at the same time gives full power and control to power users who wish to dive deeper into the lower-level tech. This also means you do not need to keep learning new tech/APIs/programming languages etc, from now on you only ever need to use the very intuitive powerful OASIS API and the rest is taken care of for you! Also, even if a newer version of one network/API comes out like Holochain RSM or Ethereum 2.0, you do not need to do anything to port your app to the latest version, the OASIS will take care of this for you.\nChallenges we ran into\nWe turned all of our challenges into growth opportunities and tackled them. One of the noteworthy challenges was bootstrapping the entire project from the ground up with a very small team.\nAccomplishments that we're proud of\nWe are the first team on the surface to create a unified API that works across multiple blockchain frameworks and connected the fragmented ecosystem under a single unified abstraction.\nWhat we learned\nWe learned a lot on our way, on all levels. To mention a few learning about Solana was the most challenging and exciting part and also we had a great deal of learning about Holochain and its strength.\nWhat's next for OASIS\nOASIS is always keen on expanding its scope of compatibility with different blockchain frameworks and we are constantly on the lookout to add new chains as they get introduced.\nThe STAR ODK, the heart of the OASIS can even compile OAPP's to native code for each platform, provider, network, etc. For example, for Holochain Provider it dynamically generates the low-level Rust code, which acts as the DAL (Data Access Layer). It also dynamically generates the C# code that runs on top of it abstracting away the lower-level complexities and this acts as the BLL (Business Logic Layer). This has the additional benefit that you can now debug your app logic in C#, something you cannot do in rust. It also allows you to have the best of both worlds by giving you access to both rust and C# libraries. The possibilities are endless, time to unleash YOUR full potential!\nOur World also acts as the UI to the OASIS API allowing the various OAPP\u2019s to have a 3D object/2D sprite representation on the 3D map of the world. They can then view meta data about the app as well as launch the app from within Our World (phase 1 of The OASIS you see in Ready Player One). Through the OASIS API people have a full geo-location API allowing them to fully control the 3D map, add quests, routes, sub-games, AR hotspots, and so much more. One possible use case would be Smart Cities amongst many more.\nSoon you will also have a very powerful intuitive UI allowing anyone to build an OAPP through a simple intuitive to use drag n drop interface plugging together the various components you need allowing you to focus on your ideas rather than on how to implement them. This will lower the barrier to entry for non-technical people, the perfect low-code solution!\nANORAK\u2019S INVITATION\nPlease come help me build the OASIS. Please bring the best tech you can find so we can integrate the best of what is out there so we can ALL benefit as a WHOLE. As stated above, by integrating and unifying the best of everything we can harness the strengths of all the various tech out there co-creating the ultimate fully integrated platform/API. THANK YOU.\nWant to make a difference in the world?\nWhat will be your legacy?\nReady to be a hero?\nReady To Come Play?\nReady Player One?\nTOGETHER WE CAN CREATE A BETTER\nIn Love, Light & Hope,\nThe Our World Tribe.", "link": "https://devpost.com/software/oasis-cj9ypx", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "gardens", "selectorShort": "garden", "MarkedSent": "inspiration\nwe believe that the oasis api should be baked into the core of the new internet (web 3.0) that we are co-creating and will allow everything to talk to everything else and will act as the world's universal api/protocol.\nrather than competing, our goal is to integrate and grow along with the entire blockchain community. as aristotle said, \"the whole is greater than the sum of its parts\". together let's make web3.0 even more powerful and simple for everyone.\nwhat it does\nthe oasis api is a global universal api that aims to connect everything to everything to eliminate walled -----> gardens !!! /silos. there are a number of open protocols/platforms/networks (such as gab, mastodon, diaspora, webfinger, solid, holochain, ceptr pluggable protocol, ethereum, fediverse, activitypub, xmpp & more!) that the oasis api will support. the majority of these are aimed at building a truly decentralised distributed internet (web 3.0) and this is also the aim of the oasis api.\nit also load balances and has fail over for all providers so eventually over the entire internet! so, it will automatically find the fastest node to use in a person\u2019s local area, regardless of what network/platform it is on. this will give the fastest possible performance! plus, if any of the networks went down such as telos/eosio then it will automatically switch to the next fastest one in that user\u2019s local area. with unity consciousness the possibilities are limitless!\nalso, just like a team of people, different tech has various strengths and weaknesses, by integrating them together so they work as one unified co-ordinated team, you eliminate all weaknesses and then have the best of all worlds, the whole is greater than the sum of the parts.\nit will also allow for a sso (single sign on) across all apps/websites/services/games across all devices and platforms for your oasis avatar where you have full control of all of your data right down to the individual field level and whether each field is replicated/shared (readonly) or shared (readwrite). you no longer need to remember multiple login details, you can have just one login (avatar), that follows you everywhere and you have full control of. you choose where your data is stored and who has access to it.\nthe oasis api is very intuitive and easy to use hiding away the complexities of the lower-level networks/protocols/platforms/api's but at the same time gives full power and control to power users who wish to dive deeper into the lower-level tech. this also means you do not need to keep learning new tech/apis/programming languages etc, from now on you only ever need to use the very intuitive powerful oasis api and the rest is taken care of for you! also, even if a newer version of one network/api comes out like holochain rsm or ethereum 2.0, you do not need to do anything to port your app to the latest version, the oasis will take care of this for you.\nchallenges we ran into\nwe turned all of our challenges into growth opportunities and tackled them. one of the noteworthy challenges was bootstrapping the entire project from the ground up with a very small team.\naccomplishments that we're proud of\nwe are the first team on the surface to create a unified api that works across multiple blockchain frameworks and connected the fragmented ecosystem under a single unified abstraction.\nwhat we learned\nwe learned a lot on our way, on all levels. to mention a few learning about solana was the most challenging and exciting part and also we had a great deal of learning about holochain and its strength.\nwhat's next for oasis\noasis is always keen on expanding its scope of compatibility with different blockchain frameworks and we are constantly on the lookout to add new chains as they get introduced.\nthe star odk, the heart of the oasis can even compile oapp's to native code for each platform, provider, network, etc. for example, for holochain provider it dynamically generates the low-level rust code, which acts as the dal (data access layer). it also dynamically generates the c# code that runs on top of it abstracting away the lower-level complexities and this acts as the bll (business logic layer). this has the additional benefit that you can now debug your app logic in c#, something you cannot do in rust. it also allows you to have the best of both worlds by giving you access to both rust and c# libraries. the possibilities are endless, time to unleash your full potential!\nour world also acts as the ui to the oasis api allowing the various oapp\u2019s to have a 3d object/2d sprite representation on the 3d map of the world. they can then view meta data about the app as well as launch the app from within our world (phase 1 of the oasis you see in ready player one). through the oasis api people have a full geo-location api allowing them to fully control the 3d map, add quests, routes, sub-games, ar hotspots, and so much more. one possible use case would be smart cities amongst many more.\nsoon you will also have a very powerful intuitive ui allowing anyone to build an oapp through a simple intuitive to use drag n drop interface plugging together the various components you need allowing you to focus on your ideas rather than on how to implement them. this will lower the barrier to entry for non-technical people, the perfect low-code solution!\nanorak\u2019s invitation\nplease come help me build the oasis. please bring the best tech you can find so we can integrate the best of what is out there so we can all benefit as a whole. as stated above, by integrating and unifying the best of everything we can harness the strengths of all the various tech out there co-creating the ultimate fully integrated platform/api. thank you.\nwant to make a difference in the world?\nwhat will be your legacy?\nready to be a hero?\nready to come play?\nready player one?\ntogether we can create a better\nin love, light & hope,\nthe our world tribe.", "sortedWord": "None", "removed": "Nan", "score": 16, "comments": 0, "media": null, "medialink": null, "identifyer": 59508923}], "name": "gardenDevpost"}