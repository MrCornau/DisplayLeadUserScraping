{"interestingcomments": [{"Unnamed: 0": 4797, "autor": "Plantara", "date": null, "content": "Inspiration\nI was always passionate about contributing or doing something for the environment and the thousands of species of animals. To address the environmental concerns was my goal that motivated and inspired me to move forward with this idea. Our home is getting damaged and hurt every second, but there are also countless people who are trying to prevent that from happening and I want to be one of them to save our planet.\nWhat it does\nThis idea could derive electricity from plant life and trees which could be a major new renewable energy source for humankind. Instead of cutting down the abundance of trees we have today, using them for our benefit without affecting them or their growth would actually be progress for us in the world of science. Given the abundance of trees, the electricity from the trees and plants would be more affordable than the current other renewable energy sources we today. I believe that this idea would also promote the importance of trees among people as now they don't only provide us with oxygen and paper, but also electricity.\nHow we built it\nThis is how it works. This innovation is heavily dependent on the concept of organic matter. Organic matter refers to the large source of carbon-based compounds that come from the remains of plants, animals, and their waste products in the environment. Plants excrete organic matter into the soil, which is then broken down by bacteria. During this breakdown process, electrons are being released as a waste product of the bacteria living around plant roots. It is possible to harvest those electrons using inert electrodes to turn them into electricity, without affecting the plant\u2019s growth. Precious metals, mercury, and carbon are typically used as inert electrodes. For example, zinc could be the anode and copper could be the cathode. These two materials would be connected with wires to run the current of electricity, and that would make up the microbial fuel cell part. Next, the energy harvester would take that energy and convert it into electricity suitable for use. An example of an energy harvester that could be used would be the Microgen energy harvesting converter. The boost converter connected underneath the energy harvester would be used to \u201cstep up\u201d the voltage of the input current to its output current. A boost converter is a DC to DC (which is a voltage source) converter with an output voltage greater than the source voltage. This is a very important part of the design as the increase in voltage can allow an object that requires more power to be used. For the boost converter to work, though, an energy storage element needs to be directly connected. In this case, that is the supercapacitor. A supercapacitor is similar to a battery except it is faster when transferring the current to an external source like a low-power sensor. Not only that, but they charge and store energy at a faster rate than batteries and have a longer lifespan.\nChallenges we ran into\nI ran into challenges in how I was going to convert the energy into electricity suitable for use and determine whether the electricity derived would be enough to run something. Also I had some small obstacles in making sure the experiment had no flaws and finding the right inert electrodes out of all the metals.\nAccomplishments that we're proud of\nDue to my extensive research and successful experiment, I am proud that I have brought a new idea to the world which could be a breakthrough innovation in renewable energy for the future. More than that though, I was proud that I attempted to at least contribute to helping the environment in some way. To measure the impact of this idea if Plantara were to be used throughout the world, then around 3 trillion trees could produce approximately 75 billion kWh of electricity per day, which could cover the energy consumption of about 1.2 billion people. This would be a major step toward the era of cleaner energy and advanced technologies. To make this more scalable, if a country like Russia, which contains about 21% of the entire world's trees with about 642 billion, were to use this technology on as many trees as possible it could cover about 5% of the entire world's energy needs.\nWhat we learned\nI learned a lot about the field of renewable energy and the different growing environmental concerns in the world. Looking through different articles and websites, I also learned about how we also have tons of people, whether that be scientists, workers, or volunteers, making a difference.\nWhat's next for Plantara\nI would love to take this idea to the next level and work with other companies in the field to work on this technology and get it to the world as fast as possible.", "link": "https://devpost.com/software/plantara-lusca0", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "harvesting", "selectorShort": "harvesting", "MarkedSent": "inspiration\ni was always passionate about contributing or doing something for the environment and the thousands of species of animals. to address the environmental concerns was my goal that motivated and inspired me to move forward with this idea. our home is getting damaged and hurt every second, but there are also countless people who are trying to prevent that from happening and i want to be one of them to save our planet.\nwhat it does\nthis idea could derive electricity from plant life and trees which could be a major new renewable energy source for humankind. instead of cutting down the abundance of trees we have today, using them for our benefit without affecting them or their growth would actually be progress for us in the world of science. given the abundance of trees, the electricity from the trees and plants would be more affordable than the current other renewable energy sources we today. i believe that this idea would also promote the importance of trees among people as now they don't only provide us with oxygen and paper, but also electricity.\nhow we built it\nthis is how it works. this innovation is heavily dependent on the concept of organic matter. organic matter refers to the large source of carbon-based compounds that come from the remains of plants, animals, and their waste products in the environment. plants excrete organic matter into the soil, which is then broken down by bacteria. during this breakdown process, electrons are being released as a waste product of the bacteria living around plant roots. it is possible to harvest those electrons using inert electrodes to turn them into electricity, without affecting the plant\u2019s growth. precious metals, mercury, and carbon are typically used as inert electrodes. for example, zinc could be the anode and copper could be the cathode. these two materials would be connected with wires to run the current of electricity, and that would make up the microbial fuel cell part. next, the energy harvester would take that energy and convert it into electricity suitable for use. an example of an energy harvester that could be used would be the microgen energy -----> harvesting !!!  converter. the boost converter connected underneath the energy harvester would be used to \u201cstep up\u201d the voltage of the input current to its output current. a boost converter is a dc to dc (which is a voltage source) converter with an output voltage greater than the source voltage. this is a very important part of the design as the increase in voltage can allow an object that requires more power to be used. for the boost converter to work, though, an energy storage element needs to be directly connected. in this case, that is the supercapacitor. a supercapacitor is similar to a battery except it is faster when transferring the current to an external source like a low-power sensor. not only that, but they charge and store energy at a faster rate than batteries and have a longer lifespan.\nchallenges we ran into\ni ran into challenges in how i was going to convert the energy into electricity suitable for use and determine whether the electricity derived would be enough to run something. also i had some small obstacles in making sure the experiment had no flaws and finding the right inert electrodes out of all the metals.\naccomplishments that we're proud of\ndue to my extensive research and successful experiment, i am proud that i have brought a new idea to the world which could be a breakthrough innovation in renewable energy for the future. more than that though, i was proud that i attempted to at least contribute to helping the environment in some way. to measure the impact of this idea if plantara were to be used throughout the world, then around 3 trillion trees could produce approximately 75 billion kwh of electricity per day, which could cover the energy consumption of about 1.2 billion people. this would be a major step toward the era of cleaner energy and advanced technologies. to make this more scalable, if a country like russia, which contains about 21% of the entire world's trees with about 642 billion, were to use this technology on as many trees as possible it could cover about 5% of the entire world's energy needs.\nwhat we learned\ni learned a lot about the field of renewable energy and the different growing environmental concerns in the world. looking through different articles and websites, i also learned about how we also have tons of people, whether that be scientists, workers, or volunteers, making a difference.\nwhat's next for plantara\ni would love to take this idea to the next level and work with other companies in the field to work on this technology and get it to the world as fast as possible.", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59504797}, {"Unnamed: 0": 6005, "autor": "Money Multiplier", "date": null, "content": "Inspiration\nA deposit loop consists in borrow DAI multiple times and automatically selling rewards (Matic or AVAX) and this results in an APY boosting from ~7.5% to ~25%. But you need to do this task manually on Aave and beyond taking a couple of minutes (~20 min), incurs the responsibility of harvesting incentives, swapping them, and adding back to the pool, with the risk of being liquidated if you forget about swapping the incentive rewards.\nWhat it does\nMoney Multiplier allows one to build or exit a position with just one click. The protocol achieves the same effects of lending and borrowing ~15 times and that represents ~99% of the DAI that can be borrowed from the initial deposit. Beyond that, we automated harvesting to protect the debt position.\nHow we built it\nWe use flash loans to make it possible to have the same effects of lending and borrowing ~15 times without spending tons of gas. For the automated harvesting, we use Gelato and Autonomy.\nChallenges we ran into\nConnecting the interface and the smart contract was tough We got 2 out of 5 contracts that are not working properly\nAccomplishments that we're proud of\n1) Found 11 people only on Saturday that use that strategy manually and are willing to use our product on Sunday. 2) Money Multiplier is live and working 3) Using flash loans for the first time 4) Creating an ERC20 token that keeps indexed even though we are holding Aave tokens\nWhat we learned\nAlthough this strategy may look obvious to some, it could seem new to others. By building Money Multiplier, beyond making the strategy easier to folks that already use it, the strategy can be spread out easily \u2014 democratizing higher returns for more people.\nFrom a technical perspective, it was pretty to learn more about Aave.\nWhat's next for Money Multiplier\n1) Ship in production 2) Warn users that a specific deposit is no longer profitable 3) Update profitability data more granularly", "link": "https://devpost.com/software/money-multiplier-yuairk", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "harvesting", "selectorShort": "harvesting", "MarkedSent": "inspiration\na deposit loop consists in borrow dai multiple times and automatically selling rewards (matic or avax) and this results in an apy boosting from ~7.5% to ~25%. but you need to do this task manually on aave and beyond taking a couple of minutes (~20 min), incurs the responsibility of -----> harvesting !!!  incentives, swapping them, and adding back to the pool, with the risk of being liquidated if you forget about swapping the incentive rewards.\nwhat it does\nmoney multiplier allows one to build or exit a position with just one click. the protocol achieves the same effects of lending and borrowing ~15 times and that represents ~99% of the dai that can be borrowed from the initial deposit. beyond that, we automated harvesting to protect the debt position.\nhow we built it\nwe use flash loans to make it possible to have the same effects of lending and borrowing ~15 times without spending tons of gas. for the automated harvesting, we use gelato and autonomy.\nchallenges we ran into\nconnecting the interface and the smart contract was tough we got 2 out of 5 contracts that are not working properly\naccomplishments that we're proud of\n1) found 11 people only on saturday that use that strategy manually and are willing to use our product on sunday. 2) money multiplier is live and working 3) using flash loans for the first time 4) creating an erc20 token that keeps indexed even though we are holding aave tokens\nwhat we learned\nalthough this strategy may look obvious to some, it could seem new to others. by building money multiplier, beyond making the strategy easier to folks that already use it, the strategy can be spread out easily \u2014 democratizing higher returns for more people.\nfrom a technical perspective, it was pretty to learn more about aave.\nwhat's next for money multiplier\n1) ship in production 2) warn users that a specific deposit is no longer profitable 3) update profitability data more granularly", "sortedWord": "None", "removed": "Nan", "score": 3, "comments": 0, "media": null, "medialink": null, "identifyer": 59506005}, {"Unnamed: 0": 6666, "autor": "Ikkuma", "date": null, "content": "Inspiration\nThe motivation of this work is making an immersive experience to help my audience to better understand the topic of climate change and its real impact on earth. While initially portrayed as a story of brutality and revenge, the narrative slowly pans out to show the futility of these personal struggles against the very real forces of nature and manmade climate change. Ikkuma is the Inuvialuit word for fire, a central element to this work and a stark visual contrast against the whites, greys, and blues of the frozen wastes.\nWhat it does\nA VR headset puts you in the mind of an orphan, witness to your mother\u2019s brutal execution and alone in a world of crumbling ice. The players must learn to tame the fire (ikkuma) in their hearts and the hunger in their belly if they hope to survive the harsh yet fragile Arctic tundra.\nHow we built it\nWe built it with Unity and Tilt Brush, Tilt Brush, Medium, Adobe series, etc.\nChallenges we ran into\nThis is a project I started a while ago, unfortunately, due to the lack of support, I find it hard to continue working on the project on my own. I want to find someone who is interested in the topic of traditional culture/environment change. Now, the project only has some simple interactions and teleportation. I plan to find more collaborators and researchers from different backgrounds to work on some innovative interactive mechanisms.\nAccomplishments that we're proud of\nI feel that the visual contrast between fire and ice presents a striking representation of the changing climate, and by using the medium of VR we can create fantastic scenes that compose this contrast in unique ways.\nWhat we learned\nEven though this project is a fiction-based story, written by me, I will say it is not 100% baseless as I have learned a lot of interesting facts about Inuvialuit culture. The history of the Inuvialuit and their ancestors in the Beaufort region and Mackenzie Delta is long and complex. It extends far back in time to the arrival of the Thule Inuit, and perhaps even to their predecessors, the Dorset people. Inuvialuit have deep roots in the territory and a resulting vast, accumulated knowledge of its geography, fauna, weather, and ice conditions. This knowledge has made it possible for Inuvialuit to find food, create clothing, and enjoy a vibrant intellectual and emotional life for generations.\nWhat's next for Ikkuma\nThe end goal for Ikkuma is to create a narrative experience that lets the players take on the role of our central \u201corphan\u201d character, abandoned in the arctic tundra. I\u2019d like this experience to be visceral but also educational, and I intend to do that by giving players a first person perspective of the impact of global warming on the North pole. The players will learn Inuit traditional knowledge (Qaujimajatuqangnit) by watching, listening to, and harvesting on the land, ice and water", "link": "https://devpost.com/software/ikkuma", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "harvesting", "selectorShort": "harvesting", "MarkedSent": "inspiration\nthe motivation of this work is making an immersive experience to help my audience to better understand the topic of climate change and its real impact on earth. while initially portrayed as a story of brutality and revenge, the narrative slowly pans out to show the futility of these personal struggles against the very real forces of nature and manmade climate change. ikkuma is the inuvialuit word for fire, a central element to this work and a stark visual contrast against the whites, greys, and blues of the frozen wastes.\nwhat it does\na vr headset puts you in the mind of an orphan, witness to your mother\u2019s brutal execution and alone in a world of crumbling ice. the players must learn to tame the fire (ikkuma) in their hearts and the hunger in their belly if they hope to survive the harsh yet fragile arctic tundra.\nhow we built it\nwe built it with unity and tilt brush, tilt brush, medium, adobe series, etc.\nchallenges we ran into\nthis is a project i started a while ago, unfortunately, due to the lack of support, i find it hard to continue working on the project on my own. i want to find someone who is interested in the topic of traditional culture/environment change. now, the project only has some simple interactions and teleportation. i plan to find more collaborators and researchers from different backgrounds to work on some innovative interactive mechanisms.\naccomplishments that we're proud of\ni feel that the visual contrast between fire and ice presents a striking representation of the changing climate, and by using the medium of vr we can create fantastic scenes that compose this contrast in unique ways.\nwhat we learned\neven though this project is a fiction-based story, written by me, i will say it is not 100% baseless as i have learned a lot of interesting facts about inuvialuit culture. the history of the inuvialuit and their ancestors in the beaufort region and mackenzie delta is long and complex. it extends far back in time to the arrival of the thule inuit, and perhaps even to their predecessors, the dorset people. inuvialuit have deep roots in the territory and a resulting vast, accumulated knowledge of its geography, fauna, weather, and ice conditions. this knowledge has made it possible for inuvialuit to find food, create clothing, and enjoy a vibrant intellectual and emotional life for generations.\nwhat's next for ikkuma\nthe end goal for ikkuma is to create a narrative experience that lets the players take on the role of our central \u201corphan\u201d character, abandoned in the arctic tundra. i\u2019d like this experience to be visceral but also educational, and i intend to do that by giving players a first person perspective of the impact of global warming on the north pole. the players will learn inuit traditional knowledge (qaujimajatuqangnit) by watching, listening to, and -----> harvesting !!!  on the land, ice and water", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59506666}, {"Unnamed: 0": 8895, "autor": "Web Scrape", "date": null, "content": "Web scraping, web harvesting, or web data extraction is data scraping used for extracting data from websites. The web scraping software may directly access the World Wide Web using the Hypertext Transfer Protocol or a web browser. While web scraping can be done manually by a software user, the term typically refers to automated processes implemented using a bot or web crawler. It is a form of copying in which specific data is gathered and copied from the web, typically into a central local database or spreadsheet, for later retrieval or analysis.\nWeb scraping a web page involves fetching it and extracting from it. Fetching is the downloading of a page (which a browser does when a user views a page). Therefore, web crawling is a main component of web scraping, to fetch pages for later processing. Once fetched, then extraction can take place. The content of a page may be parsed, searched, reformatted, its data copied into a spreadsheet or loaded into a database. Web scrapers typically take something out of a page, to make use of it for another purpose somewhere else. An example would be to find and copy names and telephone numbers, or companies and their URLs, or e-mail addresses to a list (contact scraping).\nWeb scraping is used for contact scraping, and as a component of applications used for web indexing, web mining and data mining, online price change monitoring and price comparison, product review scraping (to watch the competition), gathering real estate listings, weather data monitoring, website change detection, research, tracking online presence and reputation, web mashup, and web data integration.\nWeb pages are built using text-based mark-up languages (HTML and XHTML), and frequently contain a wealth of useful data in text form. However, most web pages are designed for human end-users and not for ease of automated use. As a result, specialized tools and software have been developed to facilitate the scraping of web pages.\nNewer forms of web scraping involve monitoring data feeds from web servers. For example, JSON is commonly used as a transport storage mechanism between the client and the web server.\nThere are methods that some websites use to prevent web scraping, such as detecting and disallowing bots from crawling (viewing) their pages. In response, there are web scraping systems that rely on using techniques in DOM parsing, computer vision and natural language processing to simulate human browsing to enable gathering web page content for offline parsing.\nTechniques\nWeb scraping is the process of automatically mining data or collecting information from the World Wide Web. It is a field with active developments sharing a common goal with the semantic web vision, an ambitious initiative that still requires breakthroughs in text processing, semantic understanding, artificial intelligence and human-computer interactions. Current web scraping solutions range from the ad-hoc, requiring human effort, to fully automated systems that are able to convert entire web sites into structured information, with limitations.\nHuman copy-and-paste The simplest form of web scraping is manually copying and pasting data from a web page into a text file or spreadsheet. Sometimes even the best web-scraping technology cannot replace a human's manual examination and copy-and-paste, and sometimes this may be the only workable solution when the websites for scraping explicitly set up barriers to prevent machine automation.\nText pattern matching A simple yet powerful approach to extract information from web pages can be based on the UNIX grep command or regular expression-matching facilities of programming languages (for instance Perl or Python).\nHTTP programming Static and dynamic web pages can be retrieved by posting HTTP requests to the remote web server using socket programming.\nHTML parsing Many websites have large collections of pages generated dynamically from an underlying structured source like a database. Data of the same category are typically encoded into similar pages by a common script or template. In data mining, a program that detects such templates in a particular information source, extracts its content and translates it into a relational form, is called a wrapper. Wrapper generation algorithms assume that input pages of a wrapper induction system conform to a common template and that they can be easily identified in terms of a URL common scheme. Moreover, some semi-structured data query languages, such as XQuery and the HTQL, can be used to parse HTML pages and to retrieve and transform page content.\nDOM parsing Further information: Document Object Model By embedding a full-fledged web browser, such as the Internet Explorer or the Mozilla browser control, programs can retrieve the dynamic content generated by client-side scripts. These browser controls also parse web pages into a DOM tree, based on which programs can retrieve parts of the pages. Languages such as Xpath can be used to parse the resulting DOM tree.\nVertical aggregation There are several companies that have developed vertical specific harvesting platforms. These platforms create and monitor a multitude of \"bots\" for specific verticals with no \"man in the loop\" (no direct human involvement), and no work related to a specific target site. The preparation involves establishing the knowledge base for the entire vertical and then the platform creates the bots automatically. The platform's robustness is measured by the quality of the information it retrieves (usually number of fields) and its scalability (how quick it can scale up to hundreds or thousands of sites). This scalability is mostly used to target the Long Tail of sites that common aggregators find complicated or too labor-intensive to harvest content from.\nSemantic annotation recognizing The pages being scraped may embrace metadata or semantic markups and annotations, which can be used to locate specific data snippets. If the annotations are embedded in the pages, as Microformat does, this technique can be viewed as a special case of DOM parsing. In another case, the annotations, organized into a semantic layer, are stored and managed separately from the web pages, so the scrapers can retrieve data schema and instructions from this layer before scraping the pages.\nComputer vision web-page analysis There are efforts using machine learning and computer vision that attempt to identify and extract information from web pages by interpreting pages visually as a human being might.\nLegal issues\nThe legality of web scraping varies across the world. In general, web scraping may be against the terms of use of some websites, but the enforceability of these terms is unclear.\nUnited States In the United States, website owners can use three major legal claims to prevent undesired web scraping: copyright infringement (compilation), violation of the Computer Fraud and Abuse Act (\"CFAA\"), and trespass to chattel. However, the effectiveness of these claims relies upon meeting various criteria, and the case law is still evolving. For example, with regard to copyright, while outright duplication of original expression will in many cases be illegal, in the United States the courts ruled in Feist Publications v. Rural Telephone Service that duplication of facts is allowable.\nU.S. courts have acknowledged that users of \"scrapers\" or \"robots\" may be held liable for committing trespass to chattels, which involves a computer system itself being considered personal property upon which the user of a scraper is trespassing. The best known of these cases, eBay v. Bidder's Edge, resulted in an injunction ordering Bidder's Edge to stop accessing, collecting, and indexing auctions from the eBay web site. This case involved automatic placing of bids, known as auction sniping. However, in order to succeed on a claim of trespass to chattels, the plaintiff must demonstrate that the defendant intentionally and without authorization interfered with the plaintiff's possessory interest in the computer system and that the defendant's unauthorized use caused damage to the plaintiff. Not all cases of web spidering brought before the courts have been considered trespass to chattels.\nOne of the first major tests of screen scraping involved American Airlines (AA), and a firm called FareChase. AA successfully obtained an injunction from a Texas trial court, stopping FareChase from selling software that enables users to compare online fares if the software also searches AA's website. The airline argued that FareChase's websearch software trespassed on AA's servers when it collected the publicly available data. FareChase filed an appeal in March 2003. By June, FareChase and AA agreed to settle and the appeal was dropped.\nSouthwest Airlines has also challenged screen-scraping practices, and has involved both FareChase and another firm, Outtask, in a legal claim. Southwest Airlines charged that the screen-scraping is Illegal since it is an example of \"Computer Fraud and Abuse\" and has led to \"Damage and Loss\" and \"Unauthorized Access\" of Southwest's site. It also constitutes \"Interference with Business Relations\", \"Trespass\", and \"Harmful Access by Computer\". They also claimed that screen-scraping constitutes what is legally known as \"Misappropriation and Unjust Enrichment\", as well as being a breach of the web site's user agreement. Outtask denied all these claims, claiming that the prevailing law, in this case, should be US Copyright law and that under copyright, the pieces of information being scraped would not be subject to copyright protection. Although the cases were never resolved in the Supreme Court of the United States, FareChase was eventually shuttered by parent company Yahoo!, and Outtask was purchased by travel expense company Concur. In 2012, a startup called 3Taps scraped classified housing ads from Craigslist. Craigslist sent 3Taps a cease-and-desist letter and blocked their IP addresses and later sued, in Craigslist v. 3Taps. The court held that the cease-and-desist letter and IP blocking was sufficient for Craigslist to properly claim that 3Taps had violated the Computer Fraud and Abuse Act.\nAlthough these are early scraping decisions, and the theories of liability are not uniform, it is difficult to ignore a pattern emerging that the courts are prepared to protect proprietary content on commercial sites from uses which are undesirable to the owners of such sites. However, the degree of protection for such content is not settled and will depend on the type of access made by the scraper, the amount of information accessed and copied, the degree to which the access adversely affects the site owner's system and the types and manner of prohibitions on such conduct.\nWhile the law in this area becomes more settled, entities contemplating using scraping programs to access a public web site should also consider whether such action is authorized by reviewing the terms of use and other terms or notices posted on or made available through the site. In a 2010 ruling in the Cvent, Inc. v. Eventbrite, Inc. In the United States district court for the eastern district of Virginia, the court ruled that the terms of use should be brought to the users' attention In order for a browse wrap contract or license to be enforced. In a 2014 case, filed in the United States District Court for the Eastern District of Pennsylvania, e-commerce site QVC objected to the Pinterest-like shopping aggregator Resultly's 'scraping of QVC's site for real-time pricing data. QVC alleges that Resultly \"excessively crawled\" QVC's retail site (allegedly sending 200-300 search requests to QVC's website per minute, sometimes to up to 36,000 requests per minute) which caused QVC's site to crash for two days, resulting in lost sales for QVC. QVC's complaint alleges that the defendant disguised its web crawler to mask its source IP address and thus prevented QVC from quickly repairing the problem. This is a particularly interesting scraping case because QVC is seeking damages for the unavailability of their website, which QVC claims was caused by Resultly.\nIn the plaintiff's web site during the period of this trial, the terms of use link are displayed among all the links of the site, at the bottom of the page as most sites on the internet. This ruling contradicts the Irish ruling described below. The court also rejected the plaintiff's argument that the browse-wrap restrictions were enforceable in view of Virginia's adoption of the Uniform Computer Information Transactions Act (UCITA)\u2014a uniform law that many believed was in favor on common browse-wrap contracting practices.\nIn Facebook, Inc. v. Power Ventures, Inc., a district court ruled in 2012 that Power Ventures could not scrape Facebook pages on behalf of a Facebook user. The case is on appeal, and the Electronic Frontier Foundation filed a brief in 2015 asking that it be overturned. In Associated Press v. Meltwater U.S. Holdings, Inc., a court in the US held Meltwater liable for scraping and republishing news information from the Associated Press, but a court in the United Kingdom held in favor of Meltwater.\nInternet Archive collects and distributes a significant number of publicly available web pages without being considered to be in violation of copyright laws.\nEuropean Union In February 2006, the Danish Maritime and Commercial Court (Copenhagen) ruled that systematic crawling, indexing, and deep linking by portal site ofir.dk of estate site Home.dk does not conflict with Danish law or the database directive of the European Union.\nIn a February 2010 case complicated by matters of jurisdiction, Ireland's High Court delivered a verdict that illustrates the inchoate state of developing case law. In the case of Ryanair Ltd v Billigfluege.de GmbH, Ireland's High Court ruled Ryanair's \"click-wrap\" agreement to be legally binding. In contrast to the findings of the United States District Court Eastern District of Virginia and those of the Danish Maritime and Commercial Court, Justice Michael Hanna ruled that the hyperlink to Ryanair's terms and conditions was plainly visible, and that placing the onus on the user to agree to terms and conditions in order to gain access to online services is sufficient to comprise a contractual relationship. The decision is under appeal in Ireland's Supreme Court.\nOn April 30, 2020, the French Data Protection Authority (CNIL) released new guidelines on web scraping. The CNIL guidelines made it clear that publicly available data is still personal data and cannot be repurposed without the knowledge of the person to whom that data belongs.\nAustralia In Australia, the Spam Act 2003 outlaws some forms of web harvesting, although this only applies to email addresses.\nIndia Leaving a few cases dealing with IPR infringement, Indian courts have not expressly ruled on the legality of web scraping. However, since all common forms of electronic contracts are enforceable in India, violating the terms of use prohibiting data scraping will be a violation of the contract law. It will also violate the Information Technology Act, 2000, which penalizes unauthorized access to a computer resource or extracting data from a computer resource.\nMethods to prevent web scraping\nThe administrator of a website can use various measures to stop or slow a bot. Some techniques include:\nBlocking an IP address either manually or based on criteria such as geolocation and DNSRBL. This will also block all browsing from that address. Disabling any web service API that the website's system might expose. Bots sometimes declare who they are (using user agent strings) and can be blocked on that basis using robots.txt; 'googlebot' is an example. Other bots make no distinction between themselves and a human using a browser. Bots can be blocked by monitoring excess traffic Bots can sometimes be blocked with tools to verify that it is a real person accessing the site, like a CAPTCHA. Bots are sometimes coded to explicitly break specific CAPTCHA patterns or may employ third-party services that utilize human labor to read and respond in real-time to CAPTCHA challenges. Commercial anti-bot services: Companies offer anti-bot and anti-scraping services for websites. A few web application firewalls have limited bot detection capabilities as well. However, many such solutions are not very effective. Locating bots with a honeypot or other method to identify the IP addresses of automated crawlers. Obfuscation using CSS sprites to display such data as telephone numbers or email addresses, at the cost of accessibility to screen reader users. Because bots rely on consistency in the front-end code of a target website, adding small variations to the HTML/CSS surrounding important data and navigation elements would require more human involvement in the initial set up of a bot and if done effectively may render the target website too difficult to scrape due to the diminished ability to automate the scraping process. Websites can declare if crawling is allowed or not in the robots.txt file and allow partial access, limit the crawl rate, specify the optimal time to crawl and more.\nWe learned about Web Scrape", "link": "https://devpost.com/software/web-scrape-xmu6zr", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "harvesting", "selectorShort": "harvesting", "MarkedSent": "web scraping, web -----> harvesting !!! , or web data extraction is data scraping used for extracting data from websites. the web scraping software may directly access the world wide web using the hypertext transfer protocol or a web browser. while web scraping can be done manually by a software user, the term typically refers to automated processes implemented using a bot or web crawler. it is a form of copying in which specific data is gathered and copied from the web, typically into a central local database or spreadsheet, for later retrieval or analysis.\nweb scraping a web page involves fetching it and extracting from it. fetching is the downloading of a page (which a browser does when a user views a page). therefore, web crawling is a main component of web scraping, to fetch pages for later processing. once fetched, then extraction can take place. the content of a page may be parsed, searched, reformatted, its data copied into a spreadsheet or loaded into a database. web scrapers typically take something out of a page, to make use of it for another purpose somewhere else. an example would be to find and copy names and telephone numbers, or companies and their urls, or e-mail addresses to a list (contact scraping).\nweb scraping is used for contact scraping, and as a component of applications used for web indexing, web mining and data mining, online price change monitoring and price comparison, product review scraping (to watch the competition), gathering real estate listings, weather data monitoring, website change detection, research, tracking online presence and reputation, web mashup, and web data integration.\nweb pages are built using text-based mark-up languages (html and xhtml), and frequently contain a wealth of useful data in text form. however, most web pages are designed for human end-users and not for ease of automated use. as a result, specialized tools and software have been developed to facilitate the scraping of web pages.\nnewer forms of web scraping involve monitoring data feeds from web servers. for example, json is commonly used as a transport storage mechanism between the client and the web server.\nthere are methods that some websites use to prevent web scraping, such as detecting and disallowing bots from crawling (viewing) their pages. in response, there are web scraping systems that rely on using techniques in dom parsing, computer vision and natural language processing to simulate human browsing to enable gathering web page content for offline parsing.\ntechniques\nweb scraping is the process of automatically mining data or collecting information from the world wide web. it is a field with active developments sharing a common goal with the semantic web vision, an ambitious initiative that still requires breakthroughs in text processing, semantic understanding, artificial intelligence and human-computer interactions. current web scraping solutions range from the ad-hoc, requiring human effort, to fully automated systems that are able to convert entire web sites into structured information, with limitations.\nhuman copy-and-paste the simplest form of web scraping is manually copying and pasting data from a web page into a text file or spreadsheet. sometimes even the best web-scraping technology cannot replace a human's manual examination and copy-and-paste, and sometimes this may be the only workable solution when the websites for scraping explicitly set up barriers to prevent machine automation.\ntext pattern matching a simple yet powerful approach to extract information from web pages can be based on the unix grep command or regular expression-matching facilities of programming languages (for instance perl or python).\nhttp programming static and dynamic web pages can be retrieved by posting http requests to the remote web server using socket programming.\nhtml parsing many websites have large collections of pages generated dynamically from an underlying structured source like a database. data of the same category are typically encoded into similar pages by a common script or template. in data mining, a program that detects such templates in a particular information source, extracts its content and translates it into a relational form, is called a wrapper. wrapper generation algorithms assume that input pages of a wrapper induction system conform to a common template and that they can be easily identified in terms of a url common scheme. moreover, some semi-structured data query languages, such as xquery and the htql, can be used to parse html pages and to retrieve and transform page content.\ndom parsing further information: document object model by embedding a full-fledged web browser, such as the internet explorer or the mozilla browser control, programs can retrieve the dynamic content generated by client-side scripts. these browser controls also parse web pages into a dom tree, based on which programs can retrieve parts of the pages. languages such as xpath can be used to parse the resulting dom tree.\nvertical aggregation there are several companies that have developed vertical specific harvesting platforms. these platforms create and monitor a multitude of \"bots\" for specific verticals with no \"man in the loop\" (no direct human involvement), and no work related to a specific target site. the preparation involves establishing the knowledge base for the entire vertical and then the platform creates the bots automatically. the platform's robustness is measured by the quality of the information it retrieves (usually number of fields) and its scalability (how quick it can scale up to hundreds or thousands of sites). this scalability is mostly used to target the long tail of sites that common aggregators find complicated or too labor-intensive to harvest content from.\nsemantic annotation recognizing the pages being scraped may embrace metadata or semantic markups and annotations, which can be used to locate specific data snippets. if the annotations are embedded in the pages, as microformat does, this technique can be viewed as a special case of dom parsing. in another case, the annotations, organized into a semantic layer, are stored and managed separately from the web pages, so the scrapers can retrieve data schema and instructions from this layer before scraping the pages.\ncomputer vision web-page analysis there are efforts using machine learning and computer vision that attempt to identify and extract information from web pages by interpreting pages visually as a human being might.\nlegal issues\nthe legality of web scraping varies across the world. in general, web scraping may be against the terms of use of some websites, but the enforceability of these terms is unclear.\nunited states in the united states, website owners can use three major legal claims to prevent undesired web scraping: copyright infringement (compilation), violation of the computer fraud and abuse act (\"cfaa\"), and trespass to chattel. however, the effectiveness of these claims relies upon meeting various criteria, and the case law is still evolving. for example, with regard to copyright, while outright duplication of original expression will in many cases be illegal, in the united states the courts ruled in feist publications v. rural telephone service that duplication of facts is allowable.\nu.s. courts have acknowledged that users of \"scrapers\" or \"robots\" may be held liable for committing trespass to chattels, which involves a computer system itself being considered personal property upon which the user of a scraper is trespassing. the best known of these cases, ebay v. bidder's edge, resulted in an injunction ordering bidder's edge to stop accessing, collecting, and indexing auctions from the ebay web site. this case involved automatic placing of bids, known as auction sniping. however, in order to succeed on a claim of trespass to chattels, the plaintiff must demonstrate that the defendant intentionally and without authorization interfered with the plaintiff's possessory interest in the computer system and that the defendant's unauthorized use caused damage to the plaintiff. not all cases of web spidering brought before the courts have been considered trespass to chattels.\none of the first major tests of screen scraping involved american airlines (aa), and a firm called farechase. aa successfully obtained an injunction from a texas trial court, stopping farechase from selling software that enables users to compare online fares if the software also searches aa's website. the airline argued that farechase's websearch software trespassed on aa's servers when it collected the publicly available data. farechase filed an appeal in march 2003. by june, farechase and aa agreed to settle and the appeal was dropped.\nsouthwest airlines has also challenged screen-scraping practices, and has involved both farechase and another firm, outtask, in a legal claim. southwest airlines charged that the screen-scraping is illegal since it is an example of \"computer fraud and abuse\" and has led to \"damage and loss\" and \"unauthorized access\" of southwest's site. it also constitutes \"interference with business relations\", \"trespass\", and \"harmful access by computer\". they also claimed that screen-scraping constitutes what is legally known as \"misappropriation and unjust enrichment\", as well as being a breach of the web site's user agreement. outtask denied all these claims, claiming that the prevailing law, in this case, should be us copyright law and that under copyright, the pieces of information being scraped would not be subject to copyright protection. although the cases were never resolved in the supreme court of the united states, farechase was eventually shuttered by parent company yahoo!, and outtask was purchased by travel expense company concur. in 2012, a startup called 3taps scraped classified housing ads from craigslist. craigslist sent 3taps a cease-and-desist letter and blocked their ip addresses and later sued, in craigslist v. 3taps. the court held that the cease-and-desist letter and ip blocking was sufficient for craigslist to properly claim that 3taps had violated the computer fraud and abuse act.\nalthough these are early scraping decisions, and the theories of liability are not uniform, it is difficult to ignore a pattern emerging that the courts are prepared to protect proprietary content on commercial sites from uses which are undesirable to the owners of such sites. however, the degree of protection for such content is not settled and will depend on the type of access made by the scraper, the amount of information accessed and copied, the degree to which the access adversely affects the site owner's system and the types and manner of prohibitions on such conduct.\nwhile the law in this area becomes more settled, entities contemplating using scraping programs to access a public web site should also consider whether such action is authorized by reviewing the terms of use and other terms or notices posted on or made available through the site. in a 2010 ruling in the cvent, inc. v. eventbrite, inc. in the united states district court for the eastern district of virginia, the court ruled that the terms of use should be brought to the users' attention in order for a browse wrap contract or license to be enforced. in a 2014 case, filed in the united states district court for the eastern district of pennsylvania, e-commerce site qvc objected to the pinterest-like shopping aggregator resultly's 'scraping of qvc's site for real-time pricing data. qvc alleges that resultly \"excessively crawled\" qvc's retail site (allegedly sending 200-300 search requests to qvc's website per minute, sometimes to up to 36,000 requests per minute) which caused qvc's site to crash for two days, resulting in lost sales for qvc. qvc's complaint alleges that the defendant disguised its web crawler to mask its source ip address and thus prevented qvc from quickly repairing the problem. this is a particularly interesting scraping case because qvc is seeking damages for the unavailability of their website, which qvc claims was caused by resultly.\nin the plaintiff's web site during the period of this trial, the terms of use link are displayed among all the links of the site, at the bottom of the page as most sites on the internet. this ruling contradicts the irish ruling described below. the court also rejected the plaintiff's argument that the browse-wrap restrictions were enforceable in view of virginia's adoption of the uniform computer information transactions act (ucita)\u2014a uniform law that many believed was in favor on common browse-wrap contracting practices.\nin facebook, inc. v. power ventures, inc., a district court ruled in 2012 that power ventures could not scrape facebook pages on behalf of a facebook user. the case is on appeal, and the electronic frontier foundation filed a brief in 2015 asking that it be overturned. in associated press v. meltwater u.s. holdings, inc., a court in the us held meltwater liable for scraping and republishing news information from the associated press, but a court in the united kingdom held in favor of meltwater.\ninternet archive collects and distributes a significant number of publicly available web pages without being considered to be in violation of copyright laws.\neuropean union in february 2006, the danish maritime and commercial court (copenhagen) ruled that systematic crawling, indexing, and deep linking by portal site ofir.dk of estate site home.dk does not conflict with danish law or the database directive of the european union.\nin a february 2010 case complicated by matters of jurisdiction, ireland's high court delivered a verdict that illustrates the inchoate state of developing case law. in the case of ryanair ltd v billigfluege.de gmbh, ireland's high court ruled ryanair's \"click-wrap\" agreement to be legally binding. in contrast to the findings of the united states district court eastern district of virginia and those of the danish maritime and commercial court, justice michael hanna ruled that the hyperlink to ryanair's terms and conditions was plainly visible, and that placing the onus on the user to agree to terms and conditions in order to gain access to online services is sufficient to comprise a contractual relationship. the decision is under appeal in ireland's supreme court.\non april 30, 2020, the french data protection authority (cnil) released new guidelines on web scraping. the cnil guidelines made it clear that publicly available data is still personal data and cannot be repurposed without the knowledge of the person to whom that data belongs.\naustralia in australia, the spam act 2003 outlaws some forms of web harvesting, although this only applies to email addresses.\nindia leaving a few cases dealing with ipr infringement, indian courts have not expressly ruled on the legality of web scraping. however, since all common forms of electronic contracts are enforceable in india, violating the terms of use prohibiting data scraping will be a violation of the contract law. it will also violate the information technology act, 2000, which penalizes unauthorized access to a computer resource or extracting data from a computer resource.\nmethods to prevent web scraping\nthe administrator of a website can use various measures to stop or slow a bot. some techniques include:\nblocking an ip address either manually or based on criteria such as geolocation and dnsrbl. this will also block all browsing from that address. disabling any web service api that the website's system might expose. bots sometimes declare who they are (using user agent strings) and can be blocked on that basis using robots.txt; 'googlebot' is an example. other bots make no distinction between themselves and a human using a browser. bots can be blocked by monitoring excess traffic bots can sometimes be blocked with tools to verify that it is a real person accessing the site, like a captcha. bots are sometimes coded to explicitly break specific captcha patterns or may employ third-party services that utilize human labor to read and respond in real-time to captcha challenges. commercial anti-bot services: companies offer anti-bot and anti-scraping services for websites. a few web application firewalls have limited bot detection capabilities as well. however, many such solutions are not very effective. locating bots with a honeypot or other method to identify the ip addresses of automated crawlers. obfuscation using css sprites to display such data as telephone numbers or email addresses, at the cost of accessibility to screen reader users. because bots rely on consistency in the front-end code of a target website, adding small variations to the html/css surrounding important data and navigation elements would require more human involvement in the initial set up of a bot and if done effectively may render the target website too difficult to scrape due to the diminished ability to automate the scraping process. websites can declare if crawling is allowed or not in the robots.txt file and allow partial access, limit the crawl rate, specify the optimal time to crawl and more.\nwe learned about web scrape", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59508895}, {"Unnamed: 0": 8972, "autor": "Web Scrape", "date": null, "content": "Web scraping, web harvesting, or web data extraction is data scraping used for extracting data from websites. The web scraping software may directly access the World Wide Web using the Hypertext Transfer Protocol or a web browser. While web scraping can be done manually by a software user, the term typically refers to automated processes implemented using a bot or web crawler. It is a form of copying in which specific data is gathered and copied from the web, typically into a central local database or spreadsheet, for later retrieval or analysis.\nWeb scraping a web page involves fetching it and extracting from it. Fetching is the downloading of a page (which a browser does when a user views a page). Therefore, web crawling is a main component of web scraping, to fetch pages for later processing. Once fetched, then extraction can take place. The content of a page may be parsed, searched, reformatted, its data copied into a spreadsheet or loaded into a database. Web scrapers typically take something out of a page, to make use of it for another purpose somewhere else. An example would be to find and copy names and telephone numbers, or companies and their URLs, or e-mail addresses to a list (contact scraping).\nWeb scraping is used for contact scraping, and as a component of applications used for web indexing, web mining and data mining, online price change monitoring and price comparison, product review scraping (to watch the competition), gathering real estate listings, weather data monitoring, website change detection, research, tracking online presence and reputation, web mashup, and web data integration.\nWeb pages are built using text-based mark-up languages (HTML and XHTML), and frequently contain a wealth of useful data in text form. However, most web pages are designed for human end-users and not for ease of automated use. As a result, specialized tools and software have been developed to facilitate the scraping of web pages.\nNewer forms of web scraping involve monitoring data feeds from web servers. For example, JSON is commonly used as a transport storage mechanism between the client and the web server.\nThere are methods that some websites use to prevent web scraping, such as detecting and disallowing bots from crawling (viewing) their pages. In response, there are web scraping systems that rely on using techniques in DOM parsing, computer vision and natural language processing to simulate human browsing to enable gathering web page content for offline parsing.\nTechniques\nWeb scraping is the process of automatically mining data or collecting information from the World Wide Web. It is a field with active developments sharing a common goal with the semantic web vision, an ambitious initiative that still requires breakthroughs in text processing, semantic understanding, artificial intelligence and human-computer interactions. Current web scraping solutions range from the ad-hoc, requiring human effort, to fully automated systems that are able to convert entire web sites into structured information, with limitations.\nHuman copy-and-paste The simplest form of web scraping is manually copying and pasting data from a web page into a text file or spreadsheet. Sometimes even the best web-scraping technology cannot replace a human's manual examination and copy-and-paste, and sometimes this may be the only workable solution when the websites for scraping explicitly set up barriers to prevent machine automation.\nText pattern matching A simple yet powerful approach to extract information from web pages can be based on the UNIX grep command or regular expression-matching facilities of programming languages (for instance Perl or Python).\nHTTP programming Static and dynamic web pages can be retrieved by posting HTTP requests to the remote web server using socket programming.\nHTML parsing Many websites have large collections of pages generated dynamically from an underlying structured source like a database. Data of the same category are typically encoded into similar pages by a common script or template. In data mining, a program that detects such templates in a particular information source, extracts its content and translates it into a relational form, is called a wrapper. Wrapper generation algorithms assume that input pages of a wrapper induction system conform to a common template and that they can be easily identified in terms of a URL common scheme. Moreover, some semi-structured data query languages, such as XQuery and the HTQL, can be used to parse HTML pages and to retrieve and transform page content.\nDOM parsing Further information: Document Object Model By embedding a full-fledged web browser, such as the Internet Explorer or the Mozilla browser control, programs can retrieve the dynamic content generated by client-side scripts. These browser controls also parse web pages into a DOM tree, based on which programs can retrieve parts of the pages. Languages such as Xpath can be used to parse the resulting DOM tree.\nVertical aggregation There are several companies that have developed vertical specific harvesting platforms. These platforms create and monitor a multitude of \"bots\" for specific verticals with no \"man in the loop\" (no direct human involvement), and no work related to a specific target site. The preparation involves establishing the knowledge base for the entire vertical and then the platform creates the bots automatically. The platform's robustness is measured by the quality of the information it retrieves (usually number of fields) and its scalability (how quick it can scale up to hundreds or thousands of sites). This scalability is mostly used to target the Long Tail of sites that common aggregators find complicated or too labor-intensive to harvest content from.\nSemantic annotation recognizing The pages being scraped may embrace metadata or semantic markups and annotations, which can be used to locate specific data snippets. If the annotations are embedded in the pages, as Microformat does, this technique can be viewed as a special case of DOM parsing. In another case, the annotations, organized into a semantic layer, are stored and managed separately from the web pages, so the scrapers can retrieve data schema and instructions from this layer before scraping the pages.\nComputer vision web-page analysis There are efforts using machine learning and computer vision that attempt to identify and extract information from web pages by interpreting pages visually as a human being might.\nLegal issues\nThe legality of web scraping varies across the world. In general, web scraping may be against the terms of use of some websites, but the enforceability of these terms is unclear.\nUnited States In the United States, website owners can use three major legal claims to prevent undesired web scraping: copyright infringement (compilation), violation of the Computer Fraud and Abuse Act (\"CFAA\"), and trespass to chattel. However, the effectiveness of these claims relies upon meeting various criteria, and the case law is still evolving. For example, with regard to copyright, while outright duplication of original expression will in many cases be illegal, in the United States the courts ruled in Feist Publications v. Rural Telephone Service that duplication of facts is allowable.\nU.S. courts have acknowledged that users of \"scrapers\" or \"robots\" may be held liable for committing trespass to chattels, which involves a computer system itself being considered personal property upon which the user of a scraper is trespassing. The best known of these cases, eBay v. Bidder's Edge, resulted in an injunction ordering Bidder's Edge to stop accessing, collecting, and indexing auctions from the eBay web site. This case involved automatic placing of bids, known as auction sniping. However, in order to succeed on a claim of trespass to chattels, the plaintiff must demonstrate that the defendant intentionally and without authorization interfered with the plaintiff's possessory interest in the computer system and that the defendant's unauthorized use caused damage to the plaintiff. Not all cases of web spidering brought before the courts have been considered trespass to chattels.\nOne of the first major tests of screen scraping involved American Airlines (AA), and a firm called FareChase. AA successfully obtained an injunction from a Texas trial court, stopping FareChase from selling software that enables users to compare online fares if the software also searches AA's website. The airline argued that FareChase's websearch software trespassed on AA's servers when it collected the publicly available data. FareChase filed an appeal in March 2003. By June, FareChase and AA agreed to settle and the appeal was dropped.\nSouthwest Airlines has also challenged screen-scraping practices, and has involved both FareChase and another firm, Outtask, in a legal claim. Southwest Airlines charged that the screen-scraping is Illegal since it is an example of \"Computer Fraud and Abuse\" and has led to \"Damage and Loss\" and \"Unauthorized Access\" of Southwest's site. It also constitutes \"Interference with Business Relations\", \"Trespass\", and \"Harmful Access by Computer\". They also claimed that screen-scraping constitutes what is legally known as \"Misappropriation and Unjust Enrichment\", as well as being a breach of the web site's user agreement. Outtask denied all these claims, claiming that the prevailing law, in this case, should be US Copyright law and that under copyright, the pieces of information being scraped would not be subject to copyright protection. Although the cases were never resolved in the Supreme Court of the United States, FareChase was eventually shuttered by parent company Yahoo!, and Outtask was purchased by travel expense company Concur. In 2012, a startup called 3Taps scraped classified housing ads from Craigslist. Craigslist sent 3Taps a cease-and-desist letter and blocked their IP addresses and later sued, in Craigslist v. 3Taps. The court held that the cease-and-desist letter and IP blocking was sufficient for Craigslist to properly claim that 3Taps had violated the Computer Fraud and Abuse Act.\nAlthough these are early scraping decisions, and the theories of liability are not uniform, it is difficult to ignore a pattern emerging that the courts are prepared to protect proprietary content on commercial sites from uses which are undesirable to the owners of such sites. However, the degree of protection for such content is not settled and will depend on the type of access made by the scraper, the amount of information accessed and copied, the degree to which the access adversely affects the site owner's system and the types and manner of prohibitions on such conduct.\nWhile the law in this area becomes more settled, entities contemplating using scraping programs to access a public web site should also consider whether such action is authorized by reviewing the terms of use and other terms or notices posted on or made available through the site. In a 2010 ruling in the Cvent, Inc. v. Eventbrite, Inc. In the United States district court for the eastern district of Virginia, the court ruled that the terms of use should be brought to the users' attention In order for a browse wrap contract or license to be enforced. In a 2014 case, filed in the United States District Court for the Eastern District of Pennsylvania, e-commerce site QVC objected to the Pinterest-like shopping aggregator Resultly's 'scraping of QVC's site for real-time pricing data. QVC alleges that Resultly \"excessively crawled\" QVC's retail site (allegedly sending 200-300 search requests to QVC's website per minute, sometimes to up to 36,000 requests per minute) which caused QVC's site to crash for two days, resulting in lost sales for QVC. QVC's complaint alleges that the defendant disguised its web crawler to mask its source IP address and thus prevented QVC from quickly repairing the problem. This is a particularly interesting scraping case because QVC is seeking damages for the unavailability of their website, which QVC claims was caused by Resultly.\nIn the plaintiff's web site during the period of this trial, the terms of use link are displayed among all the links of the site, at the bottom of the page as most sites on the internet. This ruling contradicts the Irish ruling described below. The court also rejected the plaintiff's argument that the browse-wrap restrictions were enforceable in view of Virginia's adoption of the Uniform Computer Information Transactions Act (UCITA)\u2014a uniform law that many believed was in favor on common browse-wrap contracting practices.\nIn Facebook, Inc. v. Power Ventures, Inc., a district court ruled in 2012 that Power Ventures could not scrape Facebook pages on behalf of a Facebook user. The case is on appeal, and the Electronic Frontier Foundation filed a brief in 2015 asking that it be overturned. In Associated Press v. Meltwater U.S. Holdings, Inc., a court in the US held Meltwater liable for scraping and republishing news information from the Associated Press, but a court in the United Kingdom held in favor of Meltwater.\nInternet Archive collects and distributes a significant number of publicly available web pages without being considered to be in violation of copyright laws.\nEuropean Union In February 2006, the Danish Maritime and Commercial Court (Copenhagen) ruled that systematic crawling, indexing, and deep linking by portal site ofir.dk of estate site Home.dk does not conflict with Danish law or the database directive of the European Union.\nIn a February 2010 case complicated by matters of jurisdiction, Ireland's High Court delivered a verdict that illustrates the inchoate state of developing case law. In the case of Ryanair Ltd v Billigfluege.de GmbH, Ireland's High Court ruled Ryanair's \"click-wrap\" agreement to be legally binding. In contrast to the findings of the United States District Court Eastern District of Virginia and those of the Danish Maritime and Commercial Court, Justice Michael Hanna ruled that the hyperlink to Ryanair's terms and conditions was plainly visible, and that placing the onus on the user to agree to terms and conditions in order to gain access to online services is sufficient to comprise a contractual relationship. The decision is under appeal in Ireland's Supreme Court.\nOn April 30, 2020, the French Data Protection Authority (CNIL) released new guidelines on web scraping. The CNIL guidelines made it clear that publicly available data is still personal data and cannot be repurposed without the knowledge of the person to whom that data belongs.\nAustralia In Australia, the Spam Act 2003 outlaws some forms of web harvesting, although this only applies to email addresses.\nIndia Leaving a few cases dealing with IPR infringement, Indian courts have not expressly ruled on the legality of web scraping. However, since all common forms of electronic contracts are enforceable in India, violating the terms of use prohibiting data scraping will be a violation of the contract law. It will also violate the Information Technology Act, 2000, which penalizes unauthorized access to a computer resource or extracting data from a computer resource.\nMethods to prevent web scraping\nThe administrator of a website can use various measures to stop or slow a bot. Some techniques include:\nBlocking an IP address either manually or based on criteria such as geolocation and DNSRBL. This will also block all browsing from that address.\nDisabling any web service API that the website's system might expose.\nBots sometimes declare who they are (using user agent strings) and can be blocked on that basis using robots.txt; 'googlebot' is an example. Other bots make no distinction between themselves and a human using a browser.\nBots can be blocked by monitoring excess traffic\nBots can sometimes be blocked with tools to verify that it is a real person accessing the site, like a CAPTCHA. Bots are sometimes coded to explicitly break specific CAPTCHA patterns or may employ third-party services that utilize human labor to read and respond in real-time to CAPTCHA challenges.\nCommercial anti-bot services: Companies offer anti-bot and anti-scraping services for websites. A few web application firewalls have limited bot detection capabilities as well. However, many such solutions are not very effective.\nLocating bots with a honeypot or other method to identify the IP addresses of automated crawlers.\nObfuscation using CSS sprites to display such data as telephone numbers or email addresses, at the cost of accessibility to screen reader users.\nBecause bots rely on consistency in the front-end code of a target website, adding small variations to the HTML/CSS surrounding important data and navigation elements would require more human involvement in the initial set up of a bot and if done effectively may render the target website too difficult to scrape due to the diminished ability to automate the scraping process.\nWebsites can declare if crawling is allowed or not in the robots.txt file and allow partial access, limit the crawl rate, specify the optimal time to crawl and more.\nWe learned about Web Scrape", "link": "https://devpost.com/software/web-scrape-c2vzyq", "origin": "Devpost", "suborigin": "Devpost", "result": true, "Selector": "harvesting", "selectorShort": "harvesting", "MarkedSent": "web scraping, web -----> harvesting !!! , or web data extraction is data scraping used for extracting data from websites. the web scraping software may directly access the world wide web using the hypertext transfer protocol or a web browser. while web scraping can be done manually by a software user, the term typically refers to automated processes implemented using a bot or web crawler. it is a form of copying in which specific data is gathered and copied from the web, typically into a central local database or spreadsheet, for later retrieval or analysis.\nweb scraping a web page involves fetching it and extracting from it. fetching is the downloading of a page (which a browser does when a user views a page). therefore, web crawling is a main component of web scraping, to fetch pages for later processing. once fetched, then extraction can take place. the content of a page may be parsed, searched, reformatted, its data copied into a spreadsheet or loaded into a database. web scrapers typically take something out of a page, to make use of it for another purpose somewhere else. an example would be to find and copy names and telephone numbers, or companies and their urls, or e-mail addresses to a list (contact scraping).\nweb scraping is used for contact scraping, and as a component of applications used for web indexing, web mining and data mining, online price change monitoring and price comparison, product review scraping (to watch the competition), gathering real estate listings, weather data monitoring, website change detection, research, tracking online presence and reputation, web mashup, and web data integration.\nweb pages are built using text-based mark-up languages (html and xhtml), and frequently contain a wealth of useful data in text form. however, most web pages are designed for human end-users and not for ease of automated use. as a result, specialized tools and software have been developed to facilitate the scraping of web pages.\nnewer forms of web scraping involve monitoring data feeds from web servers. for example, json is commonly used as a transport storage mechanism between the client and the web server.\nthere are methods that some websites use to prevent web scraping, such as detecting and disallowing bots from crawling (viewing) their pages. in response, there are web scraping systems that rely on using techniques in dom parsing, computer vision and natural language processing to simulate human browsing to enable gathering web page content for offline parsing.\ntechniques\nweb scraping is the process of automatically mining data or collecting information from the world wide web. it is a field with active developments sharing a common goal with the semantic web vision, an ambitious initiative that still requires breakthroughs in text processing, semantic understanding, artificial intelligence and human-computer interactions. current web scraping solutions range from the ad-hoc, requiring human effort, to fully automated systems that are able to convert entire web sites into structured information, with limitations.\nhuman copy-and-paste the simplest form of web scraping is manually copying and pasting data from a web page into a text file or spreadsheet. sometimes even the best web-scraping technology cannot replace a human's manual examination and copy-and-paste, and sometimes this may be the only workable solution when the websites for scraping explicitly set up barriers to prevent machine automation.\ntext pattern matching a simple yet powerful approach to extract information from web pages can be based on the unix grep command or regular expression-matching facilities of programming languages (for instance perl or python).\nhttp programming static and dynamic web pages can be retrieved by posting http requests to the remote web server using socket programming.\nhtml parsing many websites have large collections of pages generated dynamically from an underlying structured source like a database. data of the same category are typically encoded into similar pages by a common script or template. in data mining, a program that detects such templates in a particular information source, extracts its content and translates it into a relational form, is called a wrapper. wrapper generation algorithms assume that input pages of a wrapper induction system conform to a common template and that they can be easily identified in terms of a url common scheme. moreover, some semi-structured data query languages, such as xquery and the htql, can be used to parse html pages and to retrieve and transform page content.\ndom parsing further information: document object model by embedding a full-fledged web browser, such as the internet explorer or the mozilla browser control, programs can retrieve the dynamic content generated by client-side scripts. these browser controls also parse web pages into a dom tree, based on which programs can retrieve parts of the pages. languages such as xpath can be used to parse the resulting dom tree.\nvertical aggregation there are several companies that have developed vertical specific harvesting platforms. these platforms create and monitor a multitude of \"bots\" for specific verticals with no \"man in the loop\" (no direct human involvement), and no work related to a specific target site. the preparation involves establishing the knowledge base for the entire vertical and then the platform creates the bots automatically. the platform's robustness is measured by the quality of the information it retrieves (usually number of fields) and its scalability (how quick it can scale up to hundreds or thousands of sites). this scalability is mostly used to target the long tail of sites that common aggregators find complicated or too labor-intensive to harvest content from.\nsemantic annotation recognizing the pages being scraped may embrace metadata or semantic markups and annotations, which can be used to locate specific data snippets. if the annotations are embedded in the pages, as microformat does, this technique can be viewed as a special case of dom parsing. in another case, the annotations, organized into a semantic layer, are stored and managed separately from the web pages, so the scrapers can retrieve data schema and instructions from this layer before scraping the pages.\ncomputer vision web-page analysis there are efforts using machine learning and computer vision that attempt to identify and extract information from web pages by interpreting pages visually as a human being might.\nlegal issues\nthe legality of web scraping varies across the world. in general, web scraping may be against the terms of use of some websites, but the enforceability of these terms is unclear.\nunited states in the united states, website owners can use three major legal claims to prevent undesired web scraping: copyright infringement (compilation), violation of the computer fraud and abuse act (\"cfaa\"), and trespass to chattel. however, the effectiveness of these claims relies upon meeting various criteria, and the case law is still evolving. for example, with regard to copyright, while outright duplication of original expression will in many cases be illegal, in the united states the courts ruled in feist publications v. rural telephone service that duplication of facts is allowable.\nu.s. courts have acknowledged that users of \"scrapers\" or \"robots\" may be held liable for committing trespass to chattels, which involves a computer system itself being considered personal property upon which the user of a scraper is trespassing. the best known of these cases, ebay v. bidder's edge, resulted in an injunction ordering bidder's edge to stop accessing, collecting, and indexing auctions from the ebay web site. this case involved automatic placing of bids, known as auction sniping. however, in order to succeed on a claim of trespass to chattels, the plaintiff must demonstrate that the defendant intentionally and without authorization interfered with the plaintiff's possessory interest in the computer system and that the defendant's unauthorized use caused damage to the plaintiff. not all cases of web spidering brought before the courts have been considered trespass to chattels.\none of the first major tests of screen scraping involved american airlines (aa), and a firm called farechase. aa successfully obtained an injunction from a texas trial court, stopping farechase from selling software that enables users to compare online fares if the software also searches aa's website. the airline argued that farechase's websearch software trespassed on aa's servers when it collected the publicly available data. farechase filed an appeal in march 2003. by june, farechase and aa agreed to settle and the appeal was dropped.\nsouthwest airlines has also challenged screen-scraping practices, and has involved both farechase and another firm, outtask, in a legal claim. southwest airlines charged that the screen-scraping is illegal since it is an example of \"computer fraud and abuse\" and has led to \"damage and loss\" and \"unauthorized access\" of southwest's site. it also constitutes \"interference with business relations\", \"trespass\", and \"harmful access by computer\". they also claimed that screen-scraping constitutes what is legally known as \"misappropriation and unjust enrichment\", as well as being a breach of the web site's user agreement. outtask denied all these claims, claiming that the prevailing law, in this case, should be us copyright law and that under copyright, the pieces of information being scraped would not be subject to copyright protection. although the cases were never resolved in the supreme court of the united states, farechase was eventually shuttered by parent company yahoo!, and outtask was purchased by travel expense company concur. in 2012, a startup called 3taps scraped classified housing ads from craigslist. craigslist sent 3taps a cease-and-desist letter and blocked their ip addresses and later sued, in craigslist v. 3taps. the court held that the cease-and-desist letter and ip blocking was sufficient for craigslist to properly claim that 3taps had violated the computer fraud and abuse act.\nalthough these are early scraping decisions, and the theories of liability are not uniform, it is difficult to ignore a pattern emerging that the courts are prepared to protect proprietary content on commercial sites from uses which are undesirable to the owners of such sites. however, the degree of protection for such content is not settled and will depend on the type of access made by the scraper, the amount of information accessed and copied, the degree to which the access adversely affects the site owner's system and the types and manner of prohibitions on such conduct.\nwhile the law in this area becomes more settled, entities contemplating using scraping programs to access a public web site should also consider whether such action is authorized by reviewing the terms of use and other terms or notices posted on or made available through the site. in a 2010 ruling in the cvent, inc. v. eventbrite, inc. in the united states district court for the eastern district of virginia, the court ruled that the terms of use should be brought to the users' attention in order for a browse wrap contract or license to be enforced. in a 2014 case, filed in the united states district court for the eastern district of pennsylvania, e-commerce site qvc objected to the pinterest-like shopping aggregator resultly's 'scraping of qvc's site for real-time pricing data. qvc alleges that resultly \"excessively crawled\" qvc's retail site (allegedly sending 200-300 search requests to qvc's website per minute, sometimes to up to 36,000 requests per minute) which caused qvc's site to crash for two days, resulting in lost sales for qvc. qvc's complaint alleges that the defendant disguised its web crawler to mask its source ip address and thus prevented qvc from quickly repairing the problem. this is a particularly interesting scraping case because qvc is seeking damages for the unavailability of their website, which qvc claims was caused by resultly.\nin the plaintiff's web site during the period of this trial, the terms of use link are displayed among all the links of the site, at the bottom of the page as most sites on the internet. this ruling contradicts the irish ruling described below. the court also rejected the plaintiff's argument that the browse-wrap restrictions were enforceable in view of virginia's adoption of the uniform computer information transactions act (ucita)\u2014a uniform law that many believed was in favor on common browse-wrap contracting practices.\nin facebook, inc. v. power ventures, inc., a district court ruled in 2012 that power ventures could not scrape facebook pages on behalf of a facebook user. the case is on appeal, and the electronic frontier foundation filed a brief in 2015 asking that it be overturned. in associated press v. meltwater u.s. holdings, inc., a court in the us held meltwater liable for scraping and republishing news information from the associated press, but a court in the united kingdom held in favor of meltwater.\ninternet archive collects and distributes a significant number of publicly available web pages without being considered to be in violation of copyright laws.\neuropean union in february 2006, the danish maritime and commercial court (copenhagen) ruled that systematic crawling, indexing, and deep linking by portal site ofir.dk of estate site home.dk does not conflict with danish law or the database directive of the european union.\nin a february 2010 case complicated by matters of jurisdiction, ireland's high court delivered a verdict that illustrates the inchoate state of developing case law. in the case of ryanair ltd v billigfluege.de gmbh, ireland's high court ruled ryanair's \"click-wrap\" agreement to be legally binding. in contrast to the findings of the united states district court eastern district of virginia and those of the danish maritime and commercial court, justice michael hanna ruled that the hyperlink to ryanair's terms and conditions was plainly visible, and that placing the onus on the user to agree to terms and conditions in order to gain access to online services is sufficient to comprise a contractual relationship. the decision is under appeal in ireland's supreme court.\non april 30, 2020, the french data protection authority (cnil) released new guidelines on web scraping. the cnil guidelines made it clear that publicly available data is still personal data and cannot be repurposed without the knowledge of the person to whom that data belongs.\naustralia in australia, the spam act 2003 outlaws some forms of web harvesting, although this only applies to email addresses.\nindia leaving a few cases dealing with ipr infringement, indian courts have not expressly ruled on the legality of web scraping. however, since all common forms of electronic contracts are enforceable in india, violating the terms of use prohibiting data scraping will be a violation of the contract law. it will also violate the information technology act, 2000, which penalizes unauthorized access to a computer resource or extracting data from a computer resource.\nmethods to prevent web scraping\nthe administrator of a website can use various measures to stop or slow a bot. some techniques include:\nblocking an ip address either manually or based on criteria such as geolocation and dnsrbl. this will also block all browsing from that address.\ndisabling any web service api that the website's system might expose.\nbots sometimes declare who they are (using user agent strings) and can be blocked on that basis using robots.txt; 'googlebot' is an example. other bots make no distinction between themselves and a human using a browser.\nbots can be blocked by monitoring excess traffic\nbots can sometimes be blocked with tools to verify that it is a real person accessing the site, like a captcha. bots are sometimes coded to explicitly break specific captcha patterns or may employ third-party services that utilize human labor to read and respond in real-time to captcha challenges.\ncommercial anti-bot services: companies offer anti-bot and anti-scraping services for websites. a few web application firewalls have limited bot detection capabilities as well. however, many such solutions are not very effective.\nlocating bots with a honeypot or other method to identify the ip addresses of automated crawlers.\nobfuscation using css sprites to display such data as telephone numbers or email addresses, at the cost of accessibility to screen reader users.\nbecause bots rely on consistency in the front-end code of a target website, adding small variations to the html/css surrounding important data and navigation elements would require more human involvement in the initial set up of a bot and if done effectively may render the target website too difficult to scrape due to the diminished ability to automate the scraping process.\nwebsites can declare if crawling is allowed or not in the robots.txt file and allow partial access, limit the crawl rate, specify the optimal time to crawl and more.\nwe learned about web scrape", "sortedWord": "None", "removed": "Nan", "score": 0, "comments": 0, "media": null, "medialink": null, "identifyer": 59508972}], "name": "harvestingDevpost"}